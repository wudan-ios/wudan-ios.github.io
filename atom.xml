<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一个孤独的搬码猿</title>
  
  <subtitle>虽然代码虐我千百遍，我对代码如初恋。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wudan-ios.github.io/"/>
  <updated>2019-05-09T00:50:47.162Z</updated>
  <id>https://wudan-ios.github.io/</id>
  
  <author>
    <name>wudan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://wudan-ios.github.io/2019/05/09/iOS%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6%EF%BC%9APopMenu/"/>
    <id>https://wudan-ios.github.io/2019/05/09/iOS自定义控件：PopMenu/</id>
    <published>2019-05-09T00:50:45.982Z</published>
    <updated>2019-05-09T00:50:47.162Z</updated>
    
    <content type="html"><![CDATA[<p>现在很多的应用都有类似的弹窗控件，最出名应该是企鹅和微信了吧。想着为了满足自己的效果就动手写了这个。首先要感谢写出弹窗箭头的代码的人<a href="https://github.com/iHandle/BubbleLayer" target="_blank" rel="noopener">iHandle</a>，这方面的知识我很欠缺，以后找机会恶补一下。<br>先上两张出名的效果图：<br><img src="https://upload-images.jianshu.io/upload_images/3334769-4581178013f647fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/375" alt="🐧"></p><p><img src="https://upload-images.jianshu.io/upload_images/3334769-a4a9758369b0cfa6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/375" alt="微信"></p><h2 id="样式定义"><a href="#样式定义" class="headerlink" title="样式定义"></a>样式定义</h2><p>主要以UITableView作为容器显示样式</p><ol><li>背景颜色</li><li>文字样式：颜色，字体大小，对齐方式</li><li>显示类型：仅文字，仅图标，文字 + 图标</li><li>是否显示下划线</li><li>箭头方向</li><li>弹窗宽度</li><li>单元格的高度 </li></ol><h2 id="箭头生成"><a href="#箭头生成" class="headerlink" title="箭头生成"></a>箭头生成</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, ArrowDirection) &#123;</span><br><span class="line">    ArrowDirectionRight = <span class="number">0</span>,</span><br><span class="line">    ArrowDirectionBottom,</span><br><span class="line">    ArrowDirectionLeft,</span><br><span class="line">    ArrowDirectionTop,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#define CORNER_RADIUS   8   // 默认矩形框圆角半径</span></span><br><span class="line"><span class="meta">#define ARROW_WIDTH     30  // 默认箭头宽带</span></span><br><span class="line"><span class="meta">#define ARROW_HEIGHT    12  // 默认箭头高度</span></span><br><span class="line"><span class="meta">#define ARROW_DIRECTION 1   // 默认箭头方向，向下</span></span><br><span class="line"><span class="meta">#define ARROW_POSITION  0.5 // 默认箭头相对位置，居中</span></span><br><span class="line"><span class="meta">#define ARROW_RADIUS    3   // 默认箭头指向处的圆角半径</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">WudanLayer</span> : <span class="title">NSObject</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGFloat</span> cornerRadius;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGFloat</span> arrowRadius;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGFloat</span> arrowHeight;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGFloat</span> arrowWidth;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) ArrowDirection arrowDirection;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGFloat</span> arrowPosition;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGSize</span> size;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithSize:(<span class="built_in">CGSize</span>)size;</span><br><span class="line">- (<span class="built_in">CAShapeLayer</span> *)layer;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">WudanLayer</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - preparation</span></span><br><span class="line">- (<span class="built_in">NSMutableArray</span> *)keyPoints &#123;</span><br><span class="line">    <span class="built_in">NSMutableArray</span> *points = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">    <span class="built_in">CGPoint</span> beginPoint;</span><br><span class="line">    <span class="built_in">CGPoint</span> topPoint;</span><br><span class="line">    <span class="built_in">CGPoint</span> endPoint;</span><br><span class="line">    <span class="built_in">CGFloat</span> validWidthForTopPoint = _size.width - <span class="number">2</span> * _cornerRadius - _arrowWidth;</span><br><span class="line">    <span class="built_in">CGFloat</span> validHeightForTopPoint = _size.height - <span class="number">2</span> * _cornerRadius - _arrowWidth;</span><br><span class="line">    <span class="built_in">CGFloat</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">CGFloat</span> width = _size.width, height = _size.height;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (_arrowDirection)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> ArrowDirectionRight:</span><br><span class="line">        &#123;</span><br><span class="line">            width -= _arrowHeight;</span><br><span class="line">            topPoint = <span class="built_in">CGPointMake</span>(_size.width , _size.height / <span class="number">2</span> + validHeightForTopPoint*(_arrowPosition - <span class="number">0.5</span>));</span><br><span class="line">            beginPoint = <span class="built_in">CGPointMake</span>(topPoint.x - _arrowHeight, topPoint.y - _arrowWidth/<span class="number">2</span>);</span><br><span class="line">            endPoint = <span class="built_in">CGPointMake</span>(beginPoint.x, beginPoint.y + _arrowWidth);</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ArrowDirectionBottom:</span><br><span class="line">        &#123;</span><br><span class="line">            height -= _arrowHeight;</span><br><span class="line">            </span><br><span class="line">            topPoint = <span class="built_in">CGPointMake</span>(_size.width / <span class="number">2</span> + validWidthForTopPoint*(_arrowPosition - <span class="number">0.5</span>), _size.height);</span><br><span class="line">            beginPoint = <span class="built_in">CGPointMake</span>(topPoint.x + _arrowWidth/<span class="number">2</span>, topPoint.y - _arrowHeight);</span><br><span class="line">            endPoint = <span class="built_in">CGPointMake</span>(beginPoint.x - _arrowWidth, beginPoint.y);</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ArrowDirectionLeft:</span><br><span class="line">        &#123;</span><br><span class="line">            x = _arrowHeight;</span><br><span class="line">            width -= _arrowHeight;</span><br><span class="line">            </span><br><span class="line">            topPoint = <span class="built_in">CGPointMake</span>(<span class="number">0</span>, _size.height / <span class="number">2</span> + validHeightForTopPoint*(_arrowPosition - <span class="number">0.5</span>));</span><br><span class="line">            beginPoint = <span class="built_in">CGPointMake</span>(topPoint.x + _arrowHeight, topPoint.y + _arrowWidth/<span class="number">2</span>);</span><br><span class="line">            endPoint = <span class="built_in">CGPointMake</span>(beginPoint.x, beginPoint.y - _arrowWidth);</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ArrowDirectionTop:</span><br><span class="line">        &#123;</span><br><span class="line">            y = _arrowHeight;</span><br><span class="line">            height -= _arrowHeight;</span><br><span class="line">            </span><br><span class="line">            topPoint = <span class="built_in">CGPointMake</span>(_size.width / <span class="number">2</span> + validWidthForTopPoint*(_arrowPosition - <span class="number">0.5</span>), <span class="number">0</span>);</span><br><span class="line">            beginPoint = <span class="built_in">CGPointMake</span>(topPoint.x - _arrowWidth/<span class="number">2</span>, topPoint.y + _arrowHeight);</span><br><span class="line">            endPoint = <span class="built_in">CGPointMake</span>(beginPoint.x + _arrowWidth, beginPoint.y);</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    points = [<span class="built_in">NSMutableArray</span> arrayWithObjects: [<span class="built_in">NSValue</span> valueWithCGPoint:beginPoint],</span><br><span class="line">              [<span class="built_in">NSValue</span> valueWithCGPoint:topPoint],</span><br><span class="line">              [<span class="built_in">NSValue</span> valueWithCGPoint:endPoint],</span><br><span class="line">              <span class="literal">nil</span>];</span><br><span class="line">    <span class="built_in">CGPoint</span> bottomRight = <span class="built_in">CGPointMake</span>(x + width, y + height);</span><br><span class="line">    <span class="built_in">CGPoint</span> bottomLeft = <span class="built_in">CGPointMake</span>(x, y + height);</span><br><span class="line">    <span class="built_in">CGPoint</span> topLeft = <span class="built_in">CGPointMake</span>(x, y);</span><br><span class="line">    <span class="built_in">CGPoint</span> topRight = <span class="built_in">CGPointMake</span>(x + width, y);</span><br><span class="line">    <span class="built_in">NSMutableArray</span> *rectPoints = [<span class="built_in">NSMutableArray</span> arrayWithObjects: [<span class="built_in">NSValue</span> valueWithCGPoint:bottomRight],</span><br><span class="line">                                  [<span class="built_in">NSValue</span> valueWithCGPoint:bottomLeft],</span><br><span class="line">                                  [<span class="built_in">NSValue</span> valueWithCGPoint:topLeft],</span><br><span class="line">                                  [<span class="built_in">NSValue</span> valueWithCGPoint:topRight],</span><br><span class="line">                                  <span class="literal">nil</span>];</span><br><span class="line">    <span class="keyword">int</span> rectPointIndex = (<span class="keyword">int</span>)_arrowDirection;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        [points addObject:[rectPoints objectAtIndex:rectPointIndex]];</span><br><span class="line">        rectPointIndex = (rectPointIndex + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> points;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - Draw bubblePath</span></span><br><span class="line">- (<span class="built_in">CGPathRef</span>)bubblePath &#123;</span><br><span class="line">    <span class="built_in">UIGraphicsBeginImageContextWithOptions</span>(<span class="keyword">self</span>.size, <span class="literal">NO</span>, <span class="number">0.0</span>);</span><br><span class="line">    <span class="built_in">CGContextRef</span> ctx = <span class="built_in">UIGraphicsGetCurrentContext</span>();</span><br><span class="line">    <span class="built_in">NSMutableArray</span> *points = [<span class="keyword">self</span> keyPoints];</span><br><span class="line">    <span class="built_in">CGPoint</span> currentPoint = [[points objectAtIndex:<span class="number">6</span>] <span class="built_in">CGPointValue</span>];</span><br><span class="line">    <span class="built_in">CGContextMoveToPoint</span>(ctx, currentPoint.x, currentPoint.y);</span><br><span class="line">    <span class="built_in">CGPoint</span> pointA, pointB;</span><br><span class="line">    <span class="built_in">CGFloat</span> radius;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">6</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        radius = i &lt; <span class="number">3</span> ?  _arrowRadius : _cornerRadius;</span><br><span class="line">        pointA = [[points objectAtIndex:i] <span class="built_in">CGPointValue</span>];</span><br><span class="line">        pointB = [[points objectAtIndex:(i + <span class="number">1</span>) % <span class="number">7</span>] <span class="built_in">CGPointValue</span>];</span><br><span class="line">        <span class="built_in">CGContextAddArcToPoint</span>(ctx, pointA.x, pointA.y, pointB.x, pointB.y, radius);</span><br><span class="line">        i = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">CGContextClosePath</span>(ctx);</span><br><span class="line">    <span class="built_in">CGPathRef</span> path = <span class="built_in">CGContextCopyPath</span>(ctx);</span><br><span class="line">    <span class="built_in">CGContextRelease</span>(ctx);</span><br><span class="line">    <span class="keyword">return</span> path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">CAShapeLayer</span> *)layer&#123;</span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *layer = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    layer.path = [<span class="keyword">self</span> bubblePath];</span><br><span class="line">    <span class="keyword">return</span> layer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - Setup</span></span><br><span class="line">- (<span class="keyword">void</span>)setDefaultProperty &#123;</span><br><span class="line">    _cornerRadius   = CORNER_RADIUS;</span><br><span class="line">    _arrowWidth     = ARROW_WIDTH;</span><br><span class="line">    _arrowHeight    = ARROW_HEIGHT;</span><br><span class="line">    _arrowDirection = ARROW_DIRECTION;</span><br><span class="line">    _arrowPosition  = ARROW_POSITION;</span><br><span class="line">    _arrowRadius    = ARROW_RADIUS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - Init</span></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithSize:(<span class="built_in">CGSize</span>)size &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">self</span> = [<span class="keyword">super</span> init]) &#123;</span><br><span class="line">        [<span class="keyword">self</span> setDefaultProperty];</span><br><span class="line">        _size = size;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h2 id="单元格默认样式"><a href="#单元格默认样式" class="headerlink" title="单元格默认样式"></a>单元格默认样式</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, WDPopMenuType) &#123;</span><br><span class="line">    WDPopMenuTypeNormal,</span><br><span class="line">    WDPopMenuTypeOnlyTitle,</span><br><span class="line">    WDPopMenuTypeOnlyIcon,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">WDPopMenuCell</span> : <span class="title">UITableViewCell</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIImageView</span> *iconImageView;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UILabel</span> *titleLabel;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) WDPopMenuType showType;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">WDPopMenuCell</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithStyle:(<span class="built_in">UITableViewCellStyle</span>)style reuseIdentifier:(<span class="built_in">NSString</span> *)reuseIdentifier &#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> initWithStyle:style reuseIdentifier:reuseIdentifier];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        [<span class="keyword">self</span> setupSubViewsProperties];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setupSubViewsProperties &#123;</span><br><span class="line">    <span class="keyword">self</span>.iconImageView                                           = [[<span class="built_in">UIImageView</span> alloc] init];</span><br><span class="line">    <span class="keyword">self</span>.iconImageView.contentMode                               = <span class="built_in">UIViewContentModeScaleAspectFit</span>;</span><br><span class="line">    <span class="keyword">self</span>.iconImageView.translatesAutoresizingMaskIntoConstraints = <span class="literal">NO</span>;</span><br><span class="line">    [<span class="keyword">self</span>.contentView addSubview:<span class="keyword">self</span>.iconImageView];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">self</span>.titleLabel                                              = [[<span class="built_in">UILabel</span> alloc] init];</span><br><span class="line">    <span class="keyword">self</span>.titleLabel.font                                         = [<span class="built_in">UIFont</span> systemFontOfSize:<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">self</span>.titleLabel.textColor                                    = [<span class="built_in">UIColor</span> blackColor];</span><br><span class="line">    <span class="keyword">self</span>.titleLabel.translatesAutoresizingMaskIntoConstraints    = <span class="literal">NO</span>;</span><br><span class="line">    [<span class="keyword">self</span>.contentView addSubview:<span class="keyword">self</span>.titleLabel];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setShowType:(WDPopMenuType)showType &#123;</span><br><span class="line">    _showType = showType;</span><br><span class="line">    [<span class="keyword">self</span> setupSubViewsConstraint];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setTitleLabel:(<span class="built_in">UILabel</span> *)titleLabel &#123;</span><br><span class="line">    _titleLabel = titleLabel;</span><br><span class="line">    titleLabel.translatesAutoresizingMaskIntoConstraints = <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setupSubViewsConstraint &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.showType == WDPopMenuTypeNormal) &#123;</span><br><span class="line">        <span class="keyword">self</span>.titleLabel.textAlignment = <span class="built_in">NSTextAlignmentLeft</span>;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span>.contentView addConstraints:@[</span><br><span class="line">                                           [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:<span class="keyword">self</span>.iconImageView attribute:<span class="built_in">NSLayoutAttributeLeading</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span>.contentView attribute:<span class="built_in">NSLayoutAttributeLeading</span> multiplier:<span class="number">1</span> constant:<span class="number">15</span>],</span><br><span class="line">                                           [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:<span class="keyword">self</span>.iconImageView attribute:<span class="built_in">NSLayoutAttributeCenterY</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span>.contentView attribute:<span class="built_in">NSLayoutAttributeCenterY</span> multiplier:<span class="number">1</span> constant:<span class="number">0</span>],</span><br><span class="line">                                           ]];</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span>.contentView addConstraints:@[</span><br><span class="line">                                           [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:<span class="keyword">self</span>.titleLabel attribute:<span class="built_in">NSLayoutAttributeLeading</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span>.iconImageView attribute:<span class="built_in">NSLayoutAttributeTrailing</span> multiplier:<span class="number">1</span> constant:<span class="number">10</span>],</span><br><span class="line">                                           [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:<span class="keyword">self</span>.titleLabel attribute:<span class="built_in">NSLayoutAttributeCenterY</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span>.contentView attribute:<span class="built_in">NSLayoutAttributeCenterY</span> multiplier:<span class="number">1</span> constant:<span class="number">0</span>],</span><br><span class="line">                                           ]];</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">self</span>.showType == WDPopMenuTypeOnlyTitle)&#123;</span><br><span class="line">        <span class="keyword">self</span>.titleLabel.textAlignment = <span class="built_in">NSTextAlignmentCenter</span>;</span><br><span class="line">        [<span class="keyword">self</span>.contentView addConstraints:@[</span><br><span class="line">                                           [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:<span class="keyword">self</span>.titleLabel attribute:<span class="built_in">NSLayoutAttributeCenterX</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span>.contentView attribute:<span class="built_in">NSLayoutAttributeCenterX</span> multiplier:<span class="number">1</span> constant:<span class="number">0</span>],</span><br><span class="line">                                           [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:<span class="keyword">self</span>.titleLabel attribute:<span class="built_in">NSLayoutAttributeCenterY</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span>.contentView attribute:<span class="built_in">NSLayoutAttributeCenterY</span> multiplier:<span class="number">1</span> constant:<span class="number">0</span>],</span><br><span class="line">                                           ]];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        [<span class="keyword">self</span>.contentView addConstraints:@[</span><br><span class="line">                                           [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:<span class="keyword">self</span>.iconImageView attribute:<span class="built_in">NSLayoutAttributeCenterX</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span>.contentView attribute:<span class="built_in">NSLayoutAttributeCenterX</span> multiplier:<span class="number">1</span> constant:<span class="number">0</span>],</span><br><span class="line">                                           [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:<span class="keyword">self</span>.iconImageView attribute:<span class="built_in">NSLayoutAttributeCenterY</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span>.contentView attribute:<span class="built_in">NSLayoutAttributeCenterY</span> multiplier:<span class="number">1</span> constant:<span class="number">0</span>],</span><br><span class="line">                                           ]];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h2 id="接口代码"><a href="#接口代码" class="headerlink" title="接口代码"></a>接口代码</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_ASSUME_NONNULL_BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">WDPopMenu</span> : <span class="title">UIView</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">readonly</span>) <span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *titles;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">readonly</span>) <span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *iconImageNames;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 仅显示图标 + 默认样式</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param iconImageNames 图标数组</span></span><br><span class="line"><span class="comment"> @param position 初始位置</span></span><br><span class="line"><span class="comment"> @param complete 点击回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithIconImageNames:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)iconImageNames</span><br><span class="line">                       originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">                 selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 仅显示图标 + 默认样式</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param iconImageNames 图标数组</span></span><br><span class="line"><span class="comment"> @param position 初始位置</span></span><br><span class="line"><span class="comment"> @param isNeedSeparatorLine 是否显示分割线</span></span><br><span class="line"><span class="comment"> @param complete 点击回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithIconImageNames:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)iconImageNames</span><br><span class="line">                       originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">                    needSeparatorLine:(<span class="built_in">BOOL</span>)isNeedSeparatorLine</span><br><span class="line">                 selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 仅显示标题 + 默认样式</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param titles 标题数组</span></span><br><span class="line"><span class="comment"> @param position 初始位置</span></span><br><span class="line"><span class="comment"> @param complete 点击回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithTitles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)titles</span><br><span class="line">               originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">         selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 仅显示标题 + 默认样式</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param titles 标题数组</span></span><br><span class="line"><span class="comment"> @param position 初始位置</span></span><br><span class="line"><span class="comment"> @param isNeedSeparatorLine 是否显示分割线</span></span><br><span class="line"><span class="comment"> @param complete 点击回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithTitles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)titles</span><br><span class="line">               originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">            needSeparatorLine:(<span class="built_in">BOOL</span>)isNeedSeparatorLine</span><br><span class="line">         selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 显示文字和图标 + 默认样式</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param iconImageNames 图标数组</span></span><br><span class="line"><span class="comment"> @param titles 标题数组</span></span><br><span class="line"><span class="comment"> @param position 初始位置</span></span><br><span class="line"><span class="comment"> @param complete 点击回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithIconImageNames:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)iconImageNames</span><br><span class="line">                               titles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)titles</span><br><span class="line">                       originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">                 selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 显示文字和图标 + 默认样式</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param iconImageNames 图标数组</span></span><br><span class="line"><span class="comment"> @param titles 标题数组</span></span><br><span class="line"><span class="comment"> @param position 初始位置</span></span><br><span class="line"><span class="comment"> @param isNeedSeparatorLine 是否显示分割线</span></span><br><span class="line"><span class="comment"> @param complete 点击回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithIconImageNames:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)iconImageNames</span><br><span class="line">                               titles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)titles</span><br><span class="line">                       originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">                    needSeparatorLine:(<span class="built_in">BOOL</span>)isNeedSeparatorLine</span><br><span class="line">                 selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 可选显示图标、标题</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param iconImageNames 图片数组 可以为空</span></span><br><span class="line"><span class="comment"> @param titles 标题数组 可以为空</span></span><br><span class="line"><span class="comment"> @param position 初始位置</span></span><br><span class="line"><span class="comment"> @param height 单个item高度 默认为45</span></span><br><span class="line"><span class="comment"> @param width 显示View的高度 默认为屏幕宽度的一半</span></span><br><span class="line"><span class="comment"> @param color 显示View的背景颜色</span></span><br><span class="line"><span class="comment"> @param isNeedSeparatorLine 是否显示分割线</span></span><br><span class="line"><span class="comment"> @param complete 点击回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithIconImageNames:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)iconImageNames</span><br><span class="line">                               titles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)titles</span><br><span class="line">                       originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">                         heightOfItem:(<span class="built_in">CGFloat</span>)height</span><br><span class="line">                          widthOfView:(<span class="built_in">CGFloat</span>)width</span><br><span class="line">                backgroundColorOfView:(<span class="built_in">UIColor</span> *)color</span><br><span class="line">                    needSeparatorLine:(<span class="built_in">BOOL</span>)isNeedSeparatorLine</span><br><span class="line">                 selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 可选显示图标、标题</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param iconImageNames 图片数组 可以为空</span></span><br><span class="line"><span class="comment"> @param titles 标题数组 可以为空</span></span><br><span class="line"><span class="comment"> @param position 初始位置</span></span><br><span class="line"><span class="comment"> @param height 单个item高度 默认为45</span></span><br><span class="line"><span class="comment"> @param width 显示View的高度 默认为屏幕宽度的一半</span></span><br><span class="line"><span class="comment"> @param color 显示View的背景颜色</span></span><br><span class="line"><span class="comment"> @param isNeedSeparatorLine 是否显示分割线</span></span><br><span class="line"><span class="comment"> @param titleLabel 自定义Item的Label样式</span></span><br><span class="line"><span class="comment"> @param complete 点击回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithIconImageNames:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)iconImageNames</span><br><span class="line">                               titles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)titles</span><br><span class="line">                       originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">                         heightOfItem:(<span class="built_in">CGFloat</span>)height</span><br><span class="line">                          widthOfView:(<span class="built_in">CGFloat</span>)width</span><br><span class="line">                backgroundColorOfView:(<span class="built_in">UIColor</span> *)color</span><br><span class="line">                     titleLabelOfItem:(<span class="built_in">UILabel</span> * _Nullable)titleLabel</span><br><span class="line">                    needSeparatorLine:(<span class="built_in">BOOL</span>)isNeedSeparatorLine</span><br><span class="line">                 selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_ASSUME_NONNULL_END</span></span><br></pre></td></tr></table></figure><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#define WD_SCREEN_WIDTH ([[UIScreen mainScreen] bounds].size.width)</span></span><br><span class="line"><span class="meta">#define WD_SCREEN_HEIGHT ([[UIScreen mainScreen] bounds].size.height)</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">WDPopMenu</span> () &lt;<span class="title">UITableViewDataSource</span>, <span class="title">UITableViewDelegate</span>&gt;</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="keyword">void</span> (^selectedItemComplete)(<span class="built_in">NSInteger</span> currentIndex);</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *backgroundView;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UITableView</span> *tableView;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UILabel</span> *titleLabel;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGFloat</span> viewWidth;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGFloat</span> itemHeight;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGPoint</span> beginPosition;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIColor</span> *cellColor;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">readwrite</span>) <span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *titles;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">readwrite</span>) <span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *iconImageNames;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">WDPopMenu</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)init &#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> init];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        [<span class="keyword">self</span> addSubview:<span class="keyword">self</span>.tableView];</span><br><span class="line">        <span class="built_in">UITapGestureRecognizer</span> *tap = [[<span class="built_in">UITapGestureRecognizer</span> alloc] initWithTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(backgroundTappedTarget:)];</span><br><span class="line">        [<span class="keyword">self</span>.backgroundView addGestureRecognizer:tap];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithIconImageNames:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)iconImageNames</span><br><span class="line">                       originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">                 selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> showPopMenuWithIconImageNames:iconImageNames</span><br><span class="line">                         originPosition:position</span><br><span class="line">                      needSeparatorLine:<span class="literal">YES</span></span><br><span class="line">                   selectedItemComplete:complete];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithIconImageNames:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)iconImageNames</span><br><span class="line">                       originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">                    needSeparatorLine:(<span class="built_in">BOOL</span>)isNeedSeparatorLine</span><br><span class="line">                 selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> showPopMenuWithIconImageNames:iconImageNames</span><br><span class="line">                                 titles:<span class="literal">nil</span></span><br><span class="line">                         originPosition:position</span><br><span class="line">                      needSeparatorLine:isNeedSeparatorLine</span><br><span class="line">                   selectedItemComplete:complete];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithTitles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)titles</span><br><span class="line">               originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">         selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> showPopMenuWithTitles:titles</span><br><span class="line">                 originPosition:position</span><br><span class="line">              needSeparatorLine:<span class="literal">YES</span></span><br><span class="line">           selectedItemComplete:complete];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithTitles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)titles</span><br><span class="line">               originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">            needSeparatorLine:(<span class="built_in">BOOL</span>)isNeedSeparatorLine</span><br><span class="line">         selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> showPopMenuWithIconImageNames:<span class="literal">nil</span></span><br><span class="line">                                 titles:titles</span><br><span class="line">                         originPosition:position</span><br><span class="line">                      needSeparatorLine:isNeedSeparatorLine</span><br><span class="line">                   selectedItemComplete:complete];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithIconImageNames:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)iconImageNames</span><br><span class="line">                               titles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)titles</span><br><span class="line">                       originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">                 selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> showPopMenuWithIconImageNames:iconImageNames</span><br><span class="line">                                 titles:titles</span><br><span class="line">                         originPosition:position</span><br><span class="line">                      needSeparatorLine:<span class="literal">YES</span></span><br><span class="line">                   selectedItemComplete:complete];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithIconImageNames:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)iconImageNames</span><br><span class="line">                               titles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)titles</span><br><span class="line">                       originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">                    needSeparatorLine:(<span class="built_in">BOOL</span>)isNeedSeparatorLine</span><br><span class="line">                 selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> showPopMenuWithIconImageNames:iconImageNames</span><br><span class="line">                                 titles:titles</span><br><span class="line">                         originPosition:position</span><br><span class="line">                           heightOfItem:<span class="number">0</span></span><br><span class="line">                            widthOfView:<span class="number">0</span></span><br><span class="line">                  backgroundColorOfView:[<span class="built_in">UIColor</span> whiteColor]</span><br><span class="line">                      needSeparatorLine:isNeedSeparatorLine</span><br><span class="line">                   selectedItemComplete:complete];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithIconImageNames:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)iconImageNames</span><br><span class="line">                               titles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)titles</span><br><span class="line">                       originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">                         heightOfItem:(<span class="built_in">CGFloat</span>)height</span><br><span class="line">                          widthOfView:(<span class="built_in">CGFloat</span>)width</span><br><span class="line">                backgroundColorOfView:(<span class="built_in">UIColor</span> *)color</span><br><span class="line">                    needSeparatorLine:(<span class="built_in">BOOL</span>)isNeedSeparatorLine</span><br><span class="line">                 selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> showPopMenuWithIconImageNames:iconImageNames</span><br><span class="line">                                 titles:titles</span><br><span class="line">                         originPosition:position</span><br><span class="line">                           heightOfItem:height</span><br><span class="line">                            widthOfView:width</span><br><span class="line">                  backgroundColorOfView:color</span><br><span class="line">                       titleLabelOfItem:<span class="literal">nil</span></span><br><span class="line">                      needSeparatorLine:isNeedSeparatorLine</span><br><span class="line">                   selectedItemComplete:complete];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)showPopMenuWithIconImageNames:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)iconImageNames</span><br><span class="line">                               titles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; * _Nullable)titles</span><br><span class="line">                       originPosition:(<span class="built_in">CGPoint</span>)position</span><br><span class="line">                         heightOfItem:(<span class="built_in">CGFloat</span>)height</span><br><span class="line">                          widthOfView:(<span class="built_in">CGFloat</span>)width</span><br><span class="line">                backgroundColorOfView:(<span class="built_in">UIColor</span> *)color</span><br><span class="line">                     titleLabelOfItem:(<span class="built_in">UILabel</span> * _Nullable)titleLabel</span><br><span class="line">                    needSeparatorLine:(<span class="built_in">BOOL</span>)isNeedSeparatorLine</span><br><span class="line">                 selectedItemComplete:(<span class="keyword">void</span>(^)(<span class="built_in">NSInteger</span> currentIndex))complete &#123;</span><br><span class="line">    </span><br><span class="line">    WDPopMenu *v                = [[WDPopMenu alloc] init];</span><br><span class="line">    v.iconImageNames            = iconImageNames;</span><br><span class="line">    v.titles                    = titles;</span><br><span class="line">    v.beginPosition             = position;</span><br><span class="line">    v.itemHeight                = height == <span class="number">0</span> ? <span class="number">45</span> : height;</span><br><span class="line">    v.viewWidth                 = width == <span class="number">0</span> ? [[<span class="built_in">UIScreen</span> mainScreen] bounds].size.width / <span class="number">2</span> : width;</span><br><span class="line">    v.tableView.backgroundColor = color;</span><br><span class="line">    v.cellColor                 = color;</span><br><span class="line">    v.titleLabel                = titleLabel;</span><br><span class="line">    v.selectedItemComplete      = complete;</span><br><span class="line">    v.tableView.rowHeight       = v.itemHeight;</span><br><span class="line">    <span class="keyword">if</span> (isNeedSeparatorLine) &#123;</span><br><span class="line">        v.tableView.separatorStyle  = <span class="built_in">UITableViewCellSeparatorStyleSingleLine</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        v.tableView.separatorStyle  = <span class="built_in">UITableViewCellSeparatorStyleNone</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    [v.tableView reloadData];</span><br><span class="line">    [v showView];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)backgroundTappedTarget:(<span class="keyword">id</span>)sender &#123;</span><br><span class="line">    [<span class="keyword">self</span> hidenView];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)showView &#123;</span><br><span class="line">    [[[<span class="built_in">UIApplication</span> sharedApplication] keyWindow] addSubview:<span class="keyword">self</span>.backgroundView];</span><br><span class="line">    [[[<span class="built_in">UIApplication</span> sharedApplication] keyWindow] addSubview:<span class="keyword">self</span>];</span><br><span class="line">    [<span class="keyword">self</span> setupViewAndArrowShape];</span><br><span class="line">    [<span class="keyword">self</span> showAnimation];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setupViewAndArrowShape &#123;</span><br><span class="line">    <span class="built_in">CGRect</span> toFrame = <span class="built_in">CGRectZero</span>;</span><br><span class="line">    toFrame.size.width = <span class="keyword">self</span>.viewWidth;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.iconImageNames.count == <span class="number">0</span> || <span class="keyword">self</span>.iconImageNames == <span class="literal">nil</span>) &#123;</span><br><span class="line">        toFrame.size.height = <span class="keyword">self</span>.itemHeight * <span class="keyword">self</span>.titles.count + <span class="number">15</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">self</span>.titles == <span class="literal">nil</span> || <span class="keyword">self</span>.titles.count == <span class="number">0</span>) &#123;</span><br><span class="line">        toFrame.size.height = <span class="keyword">self</span>.itemHeight * <span class="keyword">self</span>.iconImageNames.count + <span class="number">15</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        toFrame.size.height = <span class="keyword">self</span>.itemHeight * <span class="keyword">self</span>.titles.count + <span class="number">15</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    WudanLayer *bbLayer = [[WudanLayer alloc] initWithSize:toFrame.size];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.beginPosition.x + <span class="keyword">self</span>.viewWidth / <span class="number">2</span> &gt; WD_SCREEN_WIDTH) &#123;</span><br><span class="line">        toFrame.origin.x = WD_SCREEN_WIDTH - <span class="number">10</span> - <span class="keyword">self</span>.viewWidth;</span><br><span class="line">        bbLayer.arrowDirection = ArrowDirectionTop;</span><br><span class="line">        bbLayer.arrowPosition = (<span class="keyword">self</span>.beginPosition.x - toFrame.origin.x + <span class="number">15</span>) / <span class="keyword">self</span>.viewWidth;</span><br><span class="line">        <span class="keyword">self</span>.layer.anchorPoint = <span class="built_in">CGPointMake</span>(bbLayer.arrowPosition, <span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">self</span>.beginPosition.x - <span class="keyword">self</span>.viewWidth / <span class="number">2</span> &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        toFrame.origin.x = <span class="number">10</span>;</span><br><span class="line">        bbLayer.arrowDirection = ArrowDirectionTop;</span><br><span class="line">        bbLayer.arrowPosition = (<span class="keyword">self</span>.beginPosition.x - toFrame.origin.x - <span class="number">15</span>) / <span class="keyword">self</span>.viewWidth;</span><br><span class="line">        <span class="keyword">self</span>.layer.anchorPoint = <span class="built_in">CGPointMake</span>(bbLayer.arrowPosition, <span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        toFrame.origin.x = <span class="keyword">self</span>.beginPosition.x - <span class="keyword">self</span>.viewWidth / <span class="number">2</span>;</span><br><span class="line">        bbLayer.arrowDirection = ArrowDirectionTop;</span><br><span class="line">        bbLayer.arrowPosition = (<span class="keyword">self</span>.beginPosition.x - toFrame.origin.x) / <span class="keyword">self</span>.viewWidth;</span><br><span class="line">        <span class="keyword">self</span>.layer.anchorPoint = <span class="built_in">CGPointMake</span>(bbLayer.arrowPosition, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.beginPosition.y + toFrame.size.height &gt; WD_SCREEN_HEIGHT) &#123;</span><br><span class="line">        toFrame.origin.y = <span class="keyword">self</span>.beginPosition.y - toFrame.size.height - <span class="number">15</span>;</span><br><span class="line">        bbLayer.arrowDirection = ArrowDirectionBottom;</span><br><span class="line">        <span class="keyword">self</span>.layer.anchorPoint = <span class="built_in">CGPointMake</span>(bbLayer.arrowPosition, <span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        toFrame.origin.y = <span class="keyword">self</span>.beginPosition.y + <span class="number">15</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.tableView.frame = <span class="built_in">CGRectZero</span>;</span><br><span class="line">    <span class="keyword">self</span>.frame = <span class="built_in">CGRectMake</span>(<span class="keyword">self</span>.beginPosition.x, <span class="keyword">self</span>.beginPosition.y, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">self</span>.alpha = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">self</span>.frame = toFrame;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.beginPosition.y + toFrame.size.height &gt; WD_SCREEN_HEIGHT) &#123;</span><br><span class="line">        <span class="keyword">self</span>.tableView.contentInset = <span class="built_in">UIEdgeInsetsZero</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.tableView.contentInset = <span class="built_in">UIEdgeInsetsMake</span>(<span class="number">15</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">self</span>.tableView.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, toFrame.size.width, toFrame.size.height);</span><br><span class="line">    </span><br><span class="line">    bbLayer.cornerRadius = <span class="number">8</span>;</span><br><span class="line">    bbLayer.arrowHeight = <span class="number">15</span>;</span><br><span class="line">    bbLayer.arrowWidth = <span class="number">30</span>;</span><br><span class="line">    bbLayer.arrowRadius = <span class="number">0</span>;</span><br><span class="line">    [<span class="keyword">self</span>.layer setMask:[bbLayer layer]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)showAnimation &#123;</span><br><span class="line">    <span class="keyword">self</span>.layer.affineTransform = <span class="built_in">CGAffineTransformMakeScale</span>(<span class="number">0.1</span>, <span class="number">0.1</span>);</span><br><span class="line">    [<span class="built_in">UIView</span> animateWithDuration:<span class="number">0.35</span> animations:^&#123;</span><br><span class="line">        <span class="keyword">self</span>.backgroundView.backgroundColor = [<span class="built_in">UIColor</span> colorWithWhite:<span class="number">0</span> alpha:<span class="number">0.1</span>];</span><br><span class="line">        <span class="keyword">self</span>.alpha = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">self</span>.layer.affineTransform = <span class="built_in">CGAffineTransformIdentity</span>;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)hidenView &#123;</span><br><span class="line">    [<span class="built_in">UIView</span> animateWithDuration:<span class="number">0.35</span> animations:^&#123;</span><br><span class="line">        <span class="keyword">self</span>.alpha = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">self</span>.layer.affineTransform = <span class="built_in">CGAffineTransformMakeScale</span>(<span class="number">0.1</span>, <span class="number">0.1</span>);</span><br><span class="line">        <span class="keyword">self</span>.backgroundView.backgroundColor = [<span class="built_in">UIColor</span> colorWithWhite:<span class="number">0</span> alpha:<span class="number">0</span>];</span><br><span class="line">    &#125; completion:^(<span class="built_in">BOOL</span> finished) &#123;</span><br><span class="line">        [<span class="keyword">self</span> removeFromSuperview];</span><br><span class="line">        <span class="keyword">self</span>.layer.affineTransform = <span class="built_in">CGAffineTransformIdentity</span>;</span><br><span class="line">        [<span class="keyword">self</span>.backgroundView removeFromSuperview];</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - UITableView DataSource Method</span></span><br><span class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.titles.count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.titles.count;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.iconImageNames.count &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.iconImageNames.count;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">    WDPopMenuCell *cell = [tableView dequeueReusableCellWithIdentifier:<span class="string">@"WDPopMenuCell"</span>];</span><br><span class="line">    <span class="keyword">if</span> (!cell) &#123;</span><br><span class="line">        cell = [[WDPopMenuCell alloc] initWithStyle:<span class="built_in">UITableViewCellStyleDefault</span> reuseIdentifier:<span class="string">@"WDPopMenuCell"</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.iconImageNames.count == <span class="number">0</span> || <span class="keyword">self</span>.iconImageNames == <span class="literal">nil</span>) &#123;</span><br><span class="line">        cell.showType = WDPopMenuTypeOnlyTitle;</span><br><span class="line">        cell.titleLabel.text = <span class="keyword">self</span>.titles[indexPath.row];</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">self</span>.titles == <span class="literal">nil</span> || <span class="keyword">self</span>.titles.count == <span class="number">0</span>) &#123;</span><br><span class="line">        cell.showType = WDPopMenuTypeOnlyIcon;</span><br><span class="line">        cell.iconImageView.image = [<span class="built_in">UIImage</span> imageNamed:<span class="keyword">self</span>.iconImageNames[indexPath.row]];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cell.showType = WDPopMenuTypeNormal;</span><br><span class="line">        cell.iconImageView.image = [<span class="built_in">UIImage</span> imageNamed:<span class="keyword">self</span>.iconImageNames[indexPath.row]];</span><br><span class="line">        cell.titleLabel.text = <span class="keyword">self</span>.titles[indexPath.row];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.titleLabel) &#123;</span><br><span class="line">        cell.titleLabel.textColor = <span class="keyword">self</span>.titleLabel.textColor;</span><br><span class="line">        cell.titleLabel.textAlignment = <span class="keyword">self</span>.titleLabel.textAlignment;</span><br><span class="line">        cell.titleLabel.font = <span class="keyword">self</span>.titleLabel.font;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cell.contentView.backgroundColor = <span class="keyword">self</span>.cellColor;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (indexPath.row == [tableView numberOfRowsInSection:indexPath.section] - <span class="number">1</span>) &#123;</span><br><span class="line">        cell.separatorInset = <span class="built_in">UIEdgeInsetsMake</span>(<span class="number">0</span>, <span class="keyword">self</span>.bounds.size.width, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cell.separatorInset = <span class="built_in">UIEdgeInsetsMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - UITableView Delegate Method</span></span><br><span class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didSelectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">    [tableView deselectRowAtIndexPath:indexPath animated:<span class="literal">YES</span>];</span><br><span class="line">    [<span class="keyword">self</span> hidenView];</span><br><span class="line">    <span class="keyword">self</span>.selectedItemComplete(indexPath.row);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - Setter</span></span><br><span class="line">- (<span class="built_in">UITableView</span> *)tableView &#123;</span><br><span class="line">    <span class="keyword">if</span> (!_tableView) &#123;</span><br><span class="line">        _tableView                 = [[<span class="built_in">UITableView</span> alloc] initWithFrame:<span class="built_in">CGRectZero</span> style:<span class="built_in">UITableViewStylePlain</span>];</span><br><span class="line">        _tableView.tableFooterView = [[<span class="built_in">UIView</span> alloc] init];</span><br><span class="line">        _tableView.dataSource      = <span class="keyword">self</span>;</span><br><span class="line">        _tableView.delegate        = <span class="keyword">self</span>;</span><br><span class="line">        _tableView.scrollEnabled   = <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _tableView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UIView</span> *)backgroundView &#123;</span><br><span class="line">    <span class="keyword">if</span> (!_backgroundView) &#123;</span><br><span class="line">        _backgroundView = [[<span class="built_in">UIView</span> alloc] initWithFrame:[[<span class="built_in">UIScreen</span> mainScreen] bounds]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _backgroundView;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h2 id="实现效果图"><a href="#实现效果图" class="headerlink" title="实现效果图"></a>实现效果图</h2><p><img src="https://upload-images.jianshu.io/upload_images/3334769-31da61cc372f13af.gif?imageMogr2/auto-orient/strip" alt="效果图"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;现在很多的应用都有类似的弹窗控件，最出名应该是企鹅和微信了吧。想着为了满足自己的效果就动手写了这个。首先要感谢写出弹窗箭头的代码的人&lt;a href=&quot;https://github.com/iHandle/BubbleLayer&quot; target=&quot;_blank&quot; rel=&quot;n
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Flutter-GridView(UICollectionView)</title>
    <link href="https://wudan-ios.github.io/2019/04/26/Flutter-GridView(UICollectionView)/"/>
    <id>https://wudan-ios.github.io/2019/04/26/Flutter-GridView(UICollectionView)/</id>
    <published>2019-04-26T01:59:16.675Z</published>
    <updated>2019-04-26T01:59:16.867Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-7a78181ca9b9d37c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Flutter"><br><code>ListView</code>列表视图，类似iOS中的<code>UITableView</code>，使用更加方便和个性化，里面<code>children</code>视图可以是任意的<code>Widge</code>。<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">void main() =&gt; runApp(<span class="type">WudanTableViewPage</span>());</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WudanTableViewPage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Class</span> <span class="type">Name</span>',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(title: <span class="type">Text</span>(<span class="symbol">'UITableVie</span>w')),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">ListView</span>(</span><br><span class="line">            scrollDirection: <span class="type">Axis</span>.vertical, <span class="comment">// 滚动方向</span></span><br><span class="line">            children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">              <span class="keyword">new</span> <span class="type">ListTile</span>(</span><br><span class="line">                title: <span class="type">Text</span>(<span class="string">"标题"</span>),</span><br><span class="line">                subtitle: <span class="type">Text</span>(<span class="string">"副标题"</span>),</span><br><span class="line">                leading: <span class="type">Icon</span>(<span class="type">Icons</span>.add_box),<span class="comment">// 左边Widge</span></span><br><span class="line">                trailing: <span class="type">Icon</span>(<span class="type">Icons</span>.airline_seat_flat), <span class="comment">// 右边Widge</span></span><br><span class="line">                isThreeLine: <span class="literal">true</span>, <span class="comment">// 是否默认3行高度，subtitle不为空时才能使用</span></span><br><span class="line">                dense: <span class="literal">false</span>, <span class="comment">// 设置为true后字体变小</span></span><br><span class="line">                selected: <span class="literal">false</span>, <span class="comment">// 展示是否默认显示选中</span></span><br><span class="line">              ),</span><br><span class="line">              <span class="keyword">new</span> <span class="type">Image</span>.network(</span><br><span class="line">                <span class="string">"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1554110093883&amp;di=9db9b92f1e6ee0396b574a093cc987d6&amp;imgtype=0&amp;src=http%3A%2F%2Fn.sinaimg.cn%2Fsinacn20%2F151%2Fw2048h1303%2F20180429%2F37c0-fzvpatr1915813.jpg"</span>,</span><br><span class="line">                height: <span class="number">60</span>,</span><br><span class="line">                fit: <span class="type">BoxFit</span>.fitWidth,</span><br><span class="line">              ),</span><br><span class="line">              <span class="keyword">new</span> <span class="type">Container</span>(</span><br><span class="line">                margin: <span class="type">EdgeInsets</span>.all(<span class="number">10</span>),</span><br><span class="line">                color: <span class="type">Colors</span>.orange,</span><br><span class="line">                height: <span class="number">100</span>,</span><br><span class="line">              )</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="属性介绍"><a href="#属性介绍" class="headerlink" title="属性介绍"></a>属性介绍</h4><ul><li>padding：内边距</li><li>scrollDirection：滚动方向</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/3334769-68ec5c06933f5639.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/370" alt="示例图"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-7a78181ca9b9d37c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Flutter-ListView(UITableView)</title>
    <link href="https://wudan-ios.github.io/2019/04/26/Flutter-ListView(UITableView)/"/>
    <id>https://wudan-ios.github.io/2019/04/26/Flutter-ListView(UITableView)/</id>
    <published>2019-04-26T01:58:43.145Z</published>
    <updated>2019-04-26T01:58:43.334Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-7a78181ca9b9d37c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Flutter"><br><code>ListView</code>列表视图，类似iOS中的<code>UITableView</code>，使用更加方便和个性化，里面<code>children</code>视图可以是任意的<code>Widge</code>。<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">void main() =&gt; runApp(<span class="type">WudanTableViewPage</span>());</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WudanTableViewPage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Class</span> <span class="type">Name</span>',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(title: <span class="type">Text</span>(<span class="symbol">'UITableVie</span>w')),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">ListView</span>(</span><br><span class="line">            scrollDirection: <span class="type">Axis</span>.vertical, <span class="comment">// 滚动方向</span></span><br><span class="line">            children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">              <span class="keyword">new</span> <span class="type">ListTile</span>(</span><br><span class="line">                title: <span class="type">Text</span>(<span class="string">"标题"</span>),</span><br><span class="line">                subtitle: <span class="type">Text</span>(<span class="string">"副标题"</span>),</span><br><span class="line">                leading: <span class="type">Icon</span>(<span class="type">Icons</span>.add_box),<span class="comment">// 左边Widge</span></span><br><span class="line">                trailing: <span class="type">Icon</span>(<span class="type">Icons</span>.airline_seat_flat), <span class="comment">// 右边Widge</span></span><br><span class="line">                isThreeLine: <span class="literal">true</span>, <span class="comment">// 是否默认3行高度，subtitle不为空时才能使用</span></span><br><span class="line">                dense: <span class="literal">false</span>, <span class="comment">// 设置为true后字体变小</span></span><br><span class="line">                selected: <span class="literal">false</span>, <span class="comment">// 展示是否默认显示选中</span></span><br><span class="line">              ),</span><br><span class="line">              <span class="keyword">new</span> <span class="type">Image</span>.network(</span><br><span class="line">                <span class="string">"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1554110093883&amp;di=9db9b92f1e6ee0396b574a093cc987d6&amp;imgtype=0&amp;src=http%3A%2F%2Fn.sinaimg.cn%2Fsinacn20%2F151%2Fw2048h1303%2F20180429%2F37c0-fzvpatr1915813.jpg"</span>,</span><br><span class="line">                height: <span class="number">60</span>,</span><br><span class="line">                fit: <span class="type">BoxFit</span>.fitWidth,</span><br><span class="line">              ),</span><br><span class="line">              <span class="keyword">new</span> <span class="type">Container</span>(</span><br><span class="line">                margin: <span class="type">EdgeInsets</span>.all(<span class="number">10</span>),</span><br><span class="line">                color: <span class="type">Colors</span>.orange,</span><br><span class="line">                height: <span class="number">100</span>,</span><br><span class="line">              )</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="属性介绍"><a href="#属性介绍" class="headerlink" title="属性介绍"></a>属性介绍</h4><ul><li>padding：内边距</li><li>scrollDirection：滚动方向</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/3334769-68ec5c06933f5639.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/370" alt="示例图"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-7a78181ca9b9d37c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Flutter-Image(UIImageView)</title>
    <link href="https://wudan-ios.github.io/2019/04/26/Flutter-Image(UIImageView)/"/>
    <id>https://wudan-ios.github.io/2019/04/26/Flutter-Image(UIImageView)/</id>
    <published>2019-04-26T01:57:44.237Z</published>
    <updated>2019-04-26T01:57:44.425Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-7a78181ca9b9d37c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Flutter"><br><code>Image</code>就是相对于iOS开发中的<code>UIImageView</code>，把与UIImageView设置差别很大的点拎出来说明一下。<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">void main() =&gt; runApp(<span class="type">WudanImageViewPage</span>());</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WudanImageViewPage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Class</span> <span class="type">Name</span>',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(title: <span class="type">Text</span>(<span class="symbol">'UIImageVie</span>w')),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">Image</span>.network(</span><br><span class="line">            <span class="string">"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1554110093883&amp;di=9db9b92f1e6ee0396b574a093cc987d6&amp;imgtype=0&amp;src=http%3A%2F%2Fn.sinaimg.cn%2Fsinacn20%2F151%2Fw2048h1303%2F20180429%2F37c0-fzvpatr1915813.jpg"</span>,</span><br><span class="line">            fit: <span class="type">BoxFit</span>.cover,</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="加载方式"><a href="#加载方式" class="headerlink" title="加载方式"></a>加载方式</h4><ul><li>Image.asset：加载资源图片，就是加载项目资源目录中的图片,加入图片后会增大打包的包体体积，用的是相对路径。</li><li>Image.network：网络资源图片</li><li>Image.file：加载本地图片，就是加载本地文件中的图片，这个是一个绝对路径，跟包体无关。</li><li>Image.memory：加载Uint8List资源图片<h4 id="fit属性的设置"><a href="#fit属性的设置" class="headerlink" title="fit属性的设置"></a>fit属性的设置</h4></li><li>BoxFit.fill:全图显示，图片会被拉伸，并充满父容器。</li><li>BoxFit.contain:全图显示，显示原比例，可能会有空隙。<br>BoxFit.cover：显示可能拉伸，可能裁切，充满（图片要充满整个容器，还不变形）。</li><li>BoxFit.fitWidth：宽度充满（横向充满），显示可能拉伸，可能裁切。</li><li>BoxFit.fitHeight ：高度充满（竖向充满）,显示可能拉伸，可能裁切。</li><li>BoxFit.scaleDown：效果和contain差不多，但是此属性不允许显示超过源图片大小，可小不可大。<h4 id="图片的混合模式"><a href="#图片的混合模式" class="headerlink" title="图片的混合模式"></a>图片的混合模式</h4>图片混合模式（colorBlendMode）和color属性配合使用，能让图片改变颜色，里边的模式非常的多，产生的效果也是非常丰富的。<figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">child: Image.network(</span><br><span class="line">  'https://timgsa.baidu.com/timg?image&amp;quality=<span class="number">80</span>&amp;size=b<span class="number">9999</span>_<span class="number">10000</span>&amp;sec=<span class="number">1554110093883</span>&amp;di=<span class="number">9</span>db<span class="number">9</span>b<span class="number">92</span>f<span class="number">1e6</span>ee<span class="number">0396</span>b<span class="number">574</span>a<span class="number">093</span><span class="keyword">cc</span><span class="number">987</span>d<span class="number">6</span>&amp;imgtype=<span class="number">0</span>&amp;src=http<span class="symbol">%3</span>A<span class="symbol">%2</span>F<span class="symbol">%2</span>Fn.sinaimg.cn<span class="symbol">%2</span>Fsinacn<span class="number">20</span><span class="symbol">%2</span>F<span class="number">151</span><span class="symbol">%2</span>Fw<span class="number">2048</span>h<span class="number">1303</span><span class="symbol">%2</span>F<span class="number">20180429</span><span class="symbol">%2</span>F<span class="number">37</span><span class="keyword">c</span><span class="number">0</span>-fzvpatr<span class="number">1915813</span>.jpg',</span><br><span class="line">    color: Colors.greenAccent,</span><br><span class="line">    colorBlendMode: BlendMode.darken,</span><br><span class="line">),</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/3334769-1f12e0ee1a048d11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="示例图"><br><img src="https://upload-images.jianshu.io/upload_images/3334769-67fbe4a7fc4a886f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="示例图2"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-7a78181ca9b9d37c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Flutter-Container(UIView)</title>
    <link href="https://wudan-ios.github.io/2019/04/26/Flutter-Container(UIView)/"/>
    <id>https://wudan-ios.github.io/2019/04/26/Flutter-Container(UIView)/</id>
    <published>2019-04-26T01:56:58.293Z</published>
    <updated>2019-04-26T01:56:58.487Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-7a78181ca9b9d37c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Flutter"><br><code>Container</code>就是相对于iOS开发中的<code>UIView</code>，把与UIView设置差别很大的点拎出来说明一下。<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">void main() =&gt; runApp(<span class="type">WudanViewPage</span>());</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WudanViewPage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Class</span> <span class="type">Name</span>',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(title: <span class="type">Text</span>(<span class="symbol">'UIVie</span>w')),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">Container</span>(</span><br><span class="line">            height: <span class="number">300</span>,</span><br><span class="line">            color: <span class="type">Colors</span>.red,</span><br><span class="line">            padding: <span class="type">EdgeInsets</span>.fromLTRB(<span class="number">10</span>, <span class="number">30</span>, <span class="number">30</span>, <span class="number">10</span>), <span class="comment">// 内边距</span></span><br><span class="line">            margin: <span class="type">EdgeInsets</span>.fromLTRB(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>), <span class="comment">// 外边距</span></span><br><span class="line">            child: <span class="type">Container</span>(</span><br><span class="line">              color: <span class="type">Colors</span>.orange,</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="添加子视图"><a href="#添加子视图" class="headerlink" title="添加子视图"></a>添加子视图</h4><p>使用<code>child</code>，在其内部设置子视图样式</p><h4 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h4><ul><li><code>fromLTRB</code> 是<code>(Left, Top, Right, Bottom)</code> </li><li><code>padding</code>内边距</li><li><code>margin</code>外边距</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/3334769-71eec567ddeb9df1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/335" alt="实例图"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-7a78181ca9b9d37c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Flutter-Text(UILabel)</title>
    <link href="https://wudan-ios.github.io/2019/04/26/Flutter-Text(UILabel)/"/>
    <id>https://wudan-ios.github.io/2019/04/26/Flutter-Text(UILabel)/</id>
    <published>2019-04-26T01:54:14.945Z</published>
    <updated>2019-04-26T02:03:34.218Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://upload-images.jianshu.io/upload_images/3334769-7a78181ca9b9d37c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Flutter"></h2><p><code>Text</code>就是相对于iOS开发中的<code>UILabel</code>，把与UILabel设置差别很大的点拎出来说明一下。<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">void main() =&gt; runApp(<span class="type">WudanUILabel</span>());</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WudanUILabel</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">       title: <span class="symbol">'Class</span> <span class="type">Name</span>',</span><br><span class="line">       home: <span class="type">Scaffold</span>(</span><br><span class="line">         appBar: <span class="type">AppBar</span>(title: <span class="type">Text</span>(<span class="symbol">'UILabe</span>l')),</span><br><span class="line">         body: <span class="type">Center</span>(</span><br><span class="line">           child: <span class="type">Text</span>(</span><br><span class="line">             <span class="string">"Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 Flutter可以与现有的代码一起工作。在全世界，Flutter正在被越来越多的开发者和组织使用，并且Flutter是完全免费、开源的。"</span>, <span class="comment">// 内容</span></span><br><span class="line">             maxLines: <span class="number">2</span>, <span class="comment">// 最大显示行数，默认为最大</span></span><br><span class="line">             textAlign: <span class="type">TextAlign</span>.left, <span class="comment">// 对齐方式</span></span><br><span class="line">             overflow: <span class="type">TextOverflow</span>.ellipsis, <span class="comment">// 文字显示不全样式</span></span><br><span class="line">             style: <span class="type">TextStyle</span>( <span class="comment">// 字体样式</span></span><br><span class="line">               color: <span class="type">Colors</span>.pink, <span class="comment">// 颜色</span></span><br><span class="line">               fontSize: <span class="number">18</span>, <span class="comment">// 大小</span></span><br><span class="line">               decoration: <span class="type">TextDecoration</span>.underline,       <span class="comment">// 划线位置</span></span><br><span class="line">               decorationStyle: <span class="type">TextDecorationStyle</span>.solid <span class="comment">// 划线样式</span></span><br><span class="line">             ),</span><br><span class="line">           ),</span><br><span class="line">         ),</span><br><span class="line">       ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="overflow属性"><a href="#overflow属性" class="headerlink" title="overflow属性"></a>overflow属性</h4><p>类似与UILabel中的<code>lineBreakMode</code></p><ul><li>clip：直接切断，剩下的文字就没有了，感觉不太友好，体验性不好。</li><li>ellipsis: 在后边显示省略号，体验性较好，这个在工作中经常使用。</li><li>fade: 溢出的部分会进行一个渐变消失的效果，当然是上线的渐变。<h4 id="decoration"><a href="#decoration" class="headerlink" title="decoration"></a>decoration</h4>类似于<code>NSAttributedString</code>制作的划线</li><li>none：默认样式，什么都没有</li><li>underline：下划线</li><li>lineThrough：穿过文字中间</li><li>overline：文字顶部</li></ul><h4 id="decorationStyle"><a href="#decorationStyle" class="headerlink" title="decorationStyle"></a>decorationStyle</h4><p>划线的样式</p><ul><li>solid：实线</li><li>double：双线</li><li>dashed：虚线(大点)</li><li>dotted：虚线(小点)</li><li>wavy：波浪线</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/3334769-c5cbd7a84c22137a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/335" alt="示例图"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-7a78181ca9b9d37c.png?
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS自定义控件：图片浏览器</title>
    <link href="https://wudan-ios.github.io/2019/04/19/iOS%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6%EF%BC%9A%E5%9B%BE%E7%89%87%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    <id>https://wudan-ios.github.io/2019/04/19/iOS自定义控件：图片浏览器/</id>
    <published>2019-04-19T08:39:19.330Z</published>
    <updated>2019-04-26T01:45:56.865Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-32704538aebd1e35.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="镇楼专用"><br>一直想写一个自己的图片浏览器，但是自己能力又不是很够，所以一直拖这，最近趁自己时间充裕，自己研究了一下这方面的知识。感觉有以下几个难点：</p><ol><li>显示和消失的转场动画</li><li>手势拖拽</li><li>图片加载</li></ol><h2 id="加载方式和转场动画"><a href="#加载方式和转场动画" class="headerlink" title="加载方式和转场动画"></a>加载方式和转场动画</h2><ul><li>通过<code>Controller</code>加载：需要使用<code>ViewController</code>实现<code>UIViewControllerAnimatedTransitioning</code>实现转场效果</li><li>通过<code>View</code>加载：使用<code>UIView</code>动画试下转场效果</li></ul><p>转场动画必要元素</p><ol><li>显示时需要<code>fromView</code>的<code>frame</code></li><li>消失时需要<code>toView</code>的<code>frame</code><h4 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h4>通过修改当前需要显示图片的<code>CollectionViewCell</code>中<code>ImageView</code>的<code>frame</code>，同时修改当期<code>View</code>的背景颜色透明度<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">WDImageCollectionViewCell</span> <span class="meta">*cell</span> <span class="string">=</span> <span class="string">(WDImageCollectionViewCell</span> <span class="string">*)[self.collectionView</span> <span class="attr">cellForItemAtIndexPath:[NSIndexPath</span> <span class="attr">indexPathForRow:self.tappedIndex</span> <span class="attr">inSection:0]];</span></span><br><span class="line"><span class="string">CGRect</span> <span class="string">fromFrame</span>                <span class="string">=</span> <span class="string">[self.originView</span> <span class="attr">convertRect:self.originView.bounds</span> <span class="attr">toView:cell.contentView];</span></span><br><span class="line"><span class="string">cell.imageView.frame</span>            <span class="string">=</span> <span class="string">fromFrame;</span></span><br><span class="line"><span class="string">[UIView</span> <span class="attr">animateWithDuration:0.5</span> <span class="attr">animations:^&#123;</span></span><br><span class="line">    <span class="string">self.backgroundColor</span> <span class="string">=</span> <span class="string">[[UIColor</span> <span class="string">alloc]</span> <span class="attr">initWithWhite:0</span> <span class="attr">alpha:1];</span></span><br><span class="line">    <span class="string">cell.imageView.frame</span> <span class="string">=</span> <span class="string">cell.contentView.bounds;</span></span><br><span class="line"><span class="string">&#125;];</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="消失"><a href="#消失" class="headerlink" title="消失"></a>消失</h4><p>原理与显示相同<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CGRect toRect = [self.<span class="keyword">originView </span>convertRect:self.<span class="keyword">originView.bounds </span>toView:self.window]<span class="comment">;</span></span><br><span class="line">[UIView animateWithDuration:<span class="number">0</span>.<span class="number">5</span> animations:^&#123;</span><br><span class="line">    cell.imageView.clipsToBounds = YES<span class="comment">;</span></span><br><span class="line">    cell.imageView.frame         = toRect<span class="comment">;</span></span><br><span class="line">    self.<span class="keyword">backgroundColor </span>        = [[UIColor alloc] initWithWhite:<span class="number">0</span> alpha:<span class="number">0</span>]<span class="comment">;</span></span><br><span class="line">&#125; completion:^(<span class="keyword">BOOL </span>finished) &#123;</span><br><span class="line">    [self removeFromSuperview]<span class="comment">;</span></span><br><span class="line">&#125;]<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><h2 id="拖拽的手势"><a href="#拖拽的手势" class="headerlink" title="拖拽的手势"></a>拖拽的手势</h2><p>将手势添加在<code>CollectionViewCell</code>中<code>ScrollView</code>上，并遵循<code>UIGestureRecognizerDelegate</code>协议，不然会<code>CollectionView</code>无法进行滚动操作。</p><ol><li>声明一个全局属性</li></ol><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CGPoint firstTouchPoint<span class="comment">;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>实现代理</li></ol><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#pragma mark - UIGestureRecognizer Delegate Method</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)gestureRecognizer:(<span class="built_in">UIGestureRecognizer</span> *)gestureRecognizer shouldReceiveTouch:(<span class="built_in">UITouch</span> *)touch &#123;</span><br><span class="line">    firstTouchPoint = [touch locationInView:<span class="keyword">self</span>.window];</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)gestureRecognizerShouldBegin:(<span class="built_in">UIGestureRecognizer</span> *)gestureRecognizer &#123;</span><br><span class="line">    <span class="built_in">CGPoint</span> touchPoint = [gestureRecognizer locationInView:<span class="keyword">self</span>.window];</span><br><span class="line">    <span class="built_in">CGFloat</span> dirTop = firstTouchPoint.y - touchPoint.y;</span><br><span class="line">    <span class="keyword">if</span> (dirTop &gt; <span class="number">-10</span> &amp;&amp; dirTop &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">CGFloat</span> dirLift = firstTouchPoint.x - touchPoint.x;</span><br><span class="line">    <span class="keyword">if</span> (dirLift &gt; <span class="number">-10</span> &amp;&amp; dirLift &lt; <span class="number">10</span> &amp;&amp; <span class="keyword">self</span>.scrollView.frame.size.height &gt; [[<span class="built_in">UIScreen</span> mainScreen] bounds].size.height) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><ol start="3"><li>拖动手势操作，同意代理传给<code>View</code></li></ol><ul><li><p>协议方法</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"><span class="meta">@class</span> WDImageCollectionViewCell;</span><br><span class="line"><span class="meta">@protocol</span> WDImageCollectionViewCellDelegate &lt;NSObject&gt;</span><br><span class="line">- (<span class="keyword">void</span>)<span class="string">collectionViewCell:</span>(WDImageCollectionViewCell *)cell <span class="string">singleTapActionWithImageUrl:</span>(NSString *)imageUrl;</span><br><span class="line">- (<span class="keyword">void</span>)<span class="string">collectionViewCell:</span>(WDImageCollectionViewCell *)cell <span class="string">panActionWithPercent:</span>(CGFloat)percent;</span><br><span class="line">- (<span class="keyword">void</span>)<span class="string">collectionViewCell:</span>(WDImageCollectionViewCell *)cell <span class="string">dimssViewWithImageUrl:</span>(NSString *)imageUrl;</span><br><span class="line"><span class="meta">@end</span></span><br></pre></td></tr></table></figure></li><li><p>拖动手势方法</p></li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#pragma mark - UIGestureRecognizer Target Event</span></span><br><span class="line"><span class="comment">/** 滑动手势 */</span></span><br><span class="line">- (<span class="keyword">void</span>)didRecognizedPanGuesture:(<span class="built_in">UIPanGestureRecognizer</span> *)pan &#123;</span><br><span class="line">    <span class="built_in">CGPoint</span> point = [pan translationInView:<span class="keyword">self</span>.window];</span><br><span class="line">    <span class="built_in">CGFloat</span> scale = <span class="number">1.0</span> - ABS(point.y) / [[<span class="built_in">UIScreen</span> mainScreen] bounds].size.height;</span><br><span class="line">    <span class="keyword">switch</span> (pan.state) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIGestureRecognizerStateBegan</span>: &#123;&#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIGestureRecognizerStateChanged</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            scale = MAX(scale, <span class="number">0</span>);</span><br><span class="line">            <span class="built_in">CGFloat</span> s = MAX(scale, <span class="number">0.5</span>);</span><br><span class="line">            <span class="built_in">CGAffineTransform</span> translation = <span class="built_in">CGAffineTransformMakeTranslation</span>(point.x / s, point.y / s);</span><br><span class="line">            <span class="built_in">CGAffineTransform</span> translationScale = <span class="built_in">CGAffineTransformMakeScale</span>(s, s);</span><br><span class="line">            <span class="keyword">self</span>.imageView.transform = <span class="built_in">CGAffineTransformConcat</span>(translation, translationScale);</span><br><span class="line">            <span class="comment">// 传出translationScale，修改背景颜色透明度</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(collectionViewCell:panActionWithPercent:)]) &#123;</span><br><span class="line">                [<span class="keyword">self</span>.delegate collectionViewCell:<span class="keyword">self</span> panActionWithPercent:scale];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span>  <span class="built_in">UIGestureRecognizerStateCancelled</span> | <span class="built_in">UIGestureRecognizerStateFailed</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">self</span>.imageView.transform = <span class="built_in">CGAffineTransformIdentity</span>;</span><br><span class="line">            <span class="comment">// 回复初始样式，传出translationScale，修改背景颜色透明度</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(collectionViewCell:panActionWithPercent:)]) &#123;</span><br><span class="line">                [<span class="keyword">self</span>.delegate collectionViewCell:<span class="keyword">self</span> panActionWithPercent:<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIGestureRecognizerStateEnded</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            [<span class="built_in">UIView</span> animateWithDuration:<span class="number">0.5</span> animations:^&#123;</span><br><span class="line">                <span class="built_in">CGAffineTransform</span> transform1 = <span class="built_in">CGAffineTransformMakeTranslation</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">self</span>.imageView.transform = <span class="built_in">CGAffineTransformScale</span>(transform1, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">            &#125;];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 回复初始样式，传出translationScale，修改背景颜色透明度</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(collectionViewCell:panActionWithPercent:)]) &#123;</span><br><span class="line">                [<span class="keyword">self</span>.delegate collectionViewCell:<span class="keyword">self</span> panActionWithPercent:scale];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (scale &lt; <span class="number">0.7</span>) &#123;</span><br><span class="line">                <span class="comment">// 拖动结束，让页面消失</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(collectionViewCell:dimssViewWithImageUrl:)]) &#123;</span><br><span class="line">                    [<span class="keyword">self</span>.delegate collectionViewCell:<span class="keyword">self</span> dimssViewWithImageUrl:<span class="keyword">self</span>.imageUrl];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 回复初始样式，传出translationScale，修改背景颜色透明度</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(collectionViewCell:panActionWithPercent:)]) &#123;</span><br><span class="line">                    [<span class="keyword">self</span>.delegate collectionViewCell:<span class="keyword">self</span> panActionWithPercent:<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图片加载"><a href="#图片加载" class="headerlink" title="图片加载"></a>图片加载</h2><p>使用<code>SDWebImage</code>获取图片，通过<code>FLAnimatedImageView</code>加载<code>gif</code>图</p><h2 id="Github地址"><a href="#Github地址" class="headerlink" title="Github地址"></a>Github地址</h2><p><a href="https://github.com/wudan-ios/WDImageBrowser.git" target="_blank" rel="noopener">项目地址</a></p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://upload-images.jianshu.io/upload_images/3334769-daf79ce9d51e3359.gif?imageMogr2/auto-orient/strip" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-32704538aebd1e35.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript与原生交互</title>
    <link href="https://wudan-ios.github.io/2019/03/29/JavaScript%E4%B8%8E%E5%8E%9F%E7%94%9F%E4%BA%A4%E4%BA%92/"/>
    <id>https://wudan-ios.github.io/2019/03/29/JavaScript与原生交互/</id>
    <published>2019-03-29T01:19:55.918Z</published>
    <updated>2019-04-26T01:11:51.548Z</updated>
    
    <content type="html"><![CDATA[<p> <img src="https://upload-images.jianshu.io/upload_images/3334769-b397461b46272052.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="实例样式"></p><p>原生页面与HTML页面进行相互调用<br>方式 | 适用对象<br>—|—<br>拦截URL | <code>UIWebView</code>和<code>WKWebView</code><br>JavaScriptCore | <code>UIWebView</code><br>MessageHandler | <code>WKWebView</code><br>WebViewJavascriptBridge| <code>UIWebView</code>和<code>WKWebView</code></p><h3 id="实例HTML代码"><a href="#实例HTML代码" class="headerlink" title="实例HTML代码"></a>实例HTML代码</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>按钮点击<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">onclick</span>=<span class="string">"buttonEvent()"</span> <span class="attr">id</span>=<span class="string">"submitButto"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>原生注入数据<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"textField"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"getTextEvent()"</span> <span class="attr">value</span>=<span class="string">"开始注入"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">loadURL</span><span class="params">(url)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> iFrame;</span></span><br><span class="line"><span class="javascript">            iFrame = <span class="built_in">document</span>.createElement(<span class="string">"iframe"</span>);</span></span><br><span class="line"><span class="actionscript">            iFrame.setAttribute(<span class="string">"src"</span>, url);</span></span><br><span class="line"><span class="actionscript">            iFrame.setAttribute(<span class="string">"style"</span>, <span class="string">"display:none;"</span>);</span></span><br><span class="line"><span class="actionscript">            iFrame.setAttribute(<span class="string">"height"</span>, <span class="string">"0px"</span>);</span></span><br><span class="line"><span class="actionscript">            iFrame.setAttribute(<span class="string">"width"</span>, <span class="string">"0px"</span>);</span></span><br><span class="line"><span class="actionscript">            iFrame.setAttribute(<span class="string">"frameborder"</span>, <span class="string">"0"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.body.appendChild(iFrame);</span></span><br><span class="line"><span class="undefined">            iFrame.parentNode.removeChild(iFrame);</span></span><br><span class="line"><span class="actionscript">            iFrame = <span class="literal">null</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">buttonEvent</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            loadURL(<span class="string">"/buttonEvent"</span>);</span></span><br><span class="line"><span class="undefined">            buttonDidPapped();</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">getTextEvent</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            loadURL(<span class="string">"/getText"</span>);</span></span><br><span class="line"><span class="undefined">            getTextButtonDidPapped();</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">getText</span><span class="params">(text)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"textField"</span>).value = text;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="拦截URL"><a href="#拦截URL" class="headerlink" title="拦截URL"></a>拦截URL</h2><h4 id="UIWebView"><a href="#UIWebView" class="headerlink" title="UIWebView"></a>UIWebView</h4><p>遵循<code>UIWebViewDelegate</code>调用<code>- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType</code>方法，判断获取的Url地址<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用JS</span></span><br><span class="line"><span class="keyword">if</span> ([request.URL.absoluteString <span class="string">hasSuffix:</span>@<span class="string">"buttonEvent"</span>]) &#123;</span><br><span class="line">    UIAlertController *vc = [<span class="string">UIAlertControlleralertControllerWithTitle:</span>@<span class="string">"温馨提示"</span> <span class="string">message:</span>@<span class="string">"点击了提交按钮"</span> <span class="string">preferredStyle:</span>UIAlertControllerStyleAlert];</span><br><span class="line">        [vc <span class="string">addAction:</span>[UIAlertAction <span class="string">actionWithTitle:</span>@<span class="string">"确定"</span> <span class="string">style:</span>UIAlertActionStyleDefault <span class="string">handler:</span>^(UIAlertAction * _Nonnull action) &#123;</span><br><span class="line">            </span><br><span class="line">    &#125;]];</span><br><span class="line">    [self <span class="string">presentViewController:</span>vc <span class="string">animated:</span><span class="literal">true</span> <span class="string">completion:</span>nil];  </span><br><span class="line">    <span class="keyword">return</span> NO;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 注入数据给JS</span></span><br><span class="line"><span class="keyword">if</span> ([request.URL.absoluteString <span class="string">hasSuffix:</span>@<span class="string">"getText"</span>]) &#123; </span><br><span class="line">    [webView <span class="string">stringByEvaluatingJavaScriptFromString:</span>@<span class="string">"getText('哈哈')"</span>];</span><br><span class="line">     <span class="keyword">return</span> NO;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> YES;</span><br></pre></td></tr></table></figure></p><h4 id="WKWebView"><a href="#WKWebView" class="headerlink" title="WKWebView"></a>WKWebView</h4><p>遵循<code>WKNavigationDelegate</code>调用<code>- (void)webView:(WKWebView *)webView decidePolicyForNavigationAction:(WKNavigationAction *)navigationAction decisionHandler:(void (^)(WKNavigationActionPolicy))decisionHandler</code>方法判断获取的地址<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *strRequest = [navigationAction.request.URL.absoluteString stringByRemovingPercentEncoding];</span><br><span class="line"><span class="comment">// 调用JS</span></span><br><span class="line"><span class="keyword">if</span> ([strRequest hasSuffix:<span class="string">@"buttonEvent"</span>]) &#123;</span><br><span class="line">    <span class="built_in">UIAlertController</span> *vc = [<span class="built_in">UIAlertController</span> alertControllerWithTitle:<span class="string">@"温馨提示"</span> message:<span class="string">@"点击了提交按钮"</span> preferredStyle:<span class="built_in">UIAlertControllerStyleAlert</span>];</span><br><span class="line">    [vc addAction:[<span class="built_in">UIAlertAction</span> actionWithTitle:<span class="string">@"确定"</span> style:<span class="built_in">UIAlertActionStyleDefault</span> handler:^(<span class="built_in">UIAlertAction</span> * _Nonnull action) &#123;</span><br><span class="line">            </span><br><span class="line">    &#125;]];</span><br><span class="line">    [<span class="keyword">self</span> presentViewController:vc animated:<span class="literal">true</span> completion:<span class="literal">nil</span>];</span><br><span class="line">    decisionHandler(<span class="built_in">WKNavigationActionPolicyCancel</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ([strRequest hasSuffix:<span class="string">@"getText"</span>]) &#123; <span class="comment">// 注入数据给JS</span></span><br><span class="line">    [webView evaluateJavaScript:<span class="string">@"getText('哈哈')"</span> completionHandler:^(<span class="keyword">id</span> _Nullable info, <span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Error--%@, info--%@"</span>, error, info);</span><br><span class="line">    &#125;];</span><br><span class="line">    decisionHandler(<span class="built_in">WKNavigationActionPolicyCancel</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    decisionHandler(<span class="built_in">WKNavigationActionPolicyAllow</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="JavaScriptCore"><a href="#JavaScriptCore" class="headerlink" title="JavaScriptCore"></a>JavaScriptCore</h2><ol><li>导入<code>&lt;JavaScriptCore/JavaScriptCore.h&gt;</code></li><li>遵循<code>&lt;UIWebViewDelegate&gt;</code>并实现<code>- (void)webViewDidFinishLoad:(UIWebView *)webView</code>方法。</li></ol><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对JSContext对象进行初始化</span></span><br><span class="line">JSContext *context = [self.webView <span class="string">valueForKeyPath:</span>@<span class="string">"documentView.webView.mainFrame.javaScriptContext"</span>];</span><br><span class="line"><span class="comment">// 验证JSContext对象是否初始化成功</span></span><br><span class="line">context.exceptionHandler = ^(JSContext *context, JSValue *exceptionValue)&#123;</span><br><span class="line">    context.exception = exceptionValue;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 调用JS  </span></span><br><span class="line">context[@<span class="string">"buttonDidPapped"</span>] = ^&#123;</span><br><span class="line">    UIAlertController *vc = [UIAlertController <span class="string">alertControllerWithTitle:</span>@<span class="string">"温馨提示"</span> <span class="string">message:</span>@<span class="string">"点击了提交按钮"</span> <span class="string">preferredStyle:</span>UIAlertControllerStyleAlert];</span><br><span class="line">    [vc <span class="string">addAction:</span>[UIAlertAction <span class="string">actionWithTitle:</span>@<span class="string">"确定"</span> <span class="string">style:</span>UIAlertActionStyleDefault <span class="string">handler:</span>^(UIAlertAction * _Nonnull action) &#123;</span><br><span class="line">            </span><br><span class="line">    &#125;]];</span><br><span class="line">    [self <span class="string">presentViewController:</span>vc <span class="string">animated:</span><span class="literal">true</span> <span class="string">completion:</span>nil];</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 注入数据给JS   </span></span><br><span class="line">context[@<span class="string">"getTextButtonDidPapped"</span>] = ^&#123;</span><br><span class="line">    dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">      [self.webView <span class="string">stringByEvaluatingJavaScriptFromString:</span>@<span class="string">"getText('哈哈')"</span>];</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="MessageHandler"><a href="#MessageHandler" class="headerlink" title="MessageHandler"></a>MessageHandler</h2><ol><li>修改js中的方法， 通过<code>window.webkit.messageHandlers</code>+操作方法</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">buttonEvent</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.webkit.messageHandlers.buttonEvent.postMessage(<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTextEvent</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.webkit.messageHandlers.getTextEvent.postMessage(<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>遵循<code>WKScriptMessageHandler</code></p></li><li><p>在<code>- (void)viewWillAppear:(BOOL)animated</code>中添加<code>scriptMessageHandler</code></p></li><li><p>在<code>- (void)viewWillDisappear:(BOOL)animated</code>中移除<code>scriptMessageHandler</code></p></li><li><p>实现<code>WKScriptMessageHandler</code>方法</p></li></ol><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewWillAppear:(<span class="built_in">BOOL</span>)animated &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewWillAppear:animated];</span><br><span class="line">    [<span class="keyword">self</span>.webView.configuration.userContentController addScriptMessageHandler:<span class="keyword">self</span> name:<span class="string">@"buttonEvent"</span>];</span><br><span class="line">    [<span class="keyword">self</span>.webView.configuration.userContentController addScriptMessageHandler:<span class="keyword">self</span> name:<span class="string">@"getTextEvent"</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewWillDisappear:(<span class="built_in">BOOL</span>)animated &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewWillDisappear:animated];</span><br><span class="line">    [<span class="keyword">self</span>.webView.configuration.userContentController removeScriptMessageHandlerForName:<span class="string">@"buttonEvent"</span>];</span><br><span class="line">    [<span class="keyword">self</span>.webView.configuration.userContentController removeScriptMessageHandlerForName:<span class="string">@"getTextEvent"</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - WKScriptMessageHandler Method</span></span><br><span class="line">- (<span class="keyword">void</span>)userContentController:(<span class="built_in">WKUserContentController</span> *)userContentController didReceiveScriptMessage:(<span class="built_in">WKScriptMessage</span> *)message &#123;</span><br><span class="line">    <span class="comment">// 调用JS</span></span><br><span class="line">    <span class="keyword">if</span> ([message.name isEqualToString:<span class="string">@"buttonEvent"</span>]) &#123;</span><br><span class="line">        <span class="built_in">UIAlertController</span> *vc = [<span class="built_in">UIAlertController</span> alertControllerWithTitle:<span class="string">@"温馨提示"</span> message:<span class="string">@"点击了提交按钮"</span> preferredStyle:<span class="built_in">UIAlertControllerStyleAlert</span>];</span><br><span class="line">        [vc addAction:[<span class="built_in">UIAlertAction</span> actionWithTitle:<span class="string">@"确定"</span> style:<span class="built_in">UIAlertActionStyleDefault</span> handler:^(<span class="built_in">UIAlertAction</span> * _Nonnull action) &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;]];</span><br><span class="line">        [<span class="keyword">self</span> presentViewController:vc animated:<span class="literal">true</span> completion:<span class="literal">nil</span>];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 注入数据给JS</span></span><br><span class="line">    <span class="keyword">if</span>  ([message.name isEqualToString:<span class="string">@"getTextEvent"</span>]) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.webView evaluateJavaScript:<span class="string">@"getText('哈哈')"</span> completionHandler:^(<span class="keyword">id</span> _Nullable info, <span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"Error--%@, info--%@"</span>, error, info);</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="WebViewJavascriptBridge"><a href="#WebViewJavascriptBridge" class="headerlink" title="WebViewJavascriptBridge"></a>WebViewJavascriptBridge</h2><p>HTML代码<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>按钮点击<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span> = <span class="string">'submitBtn'</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"提交按钮"</span> <span class="attr">onclick</span>=<span class="string">"submitClick()"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>文件选择<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"image"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>注入数据<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"getTextField"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"开始获取"</span> <span class="attr">id</span> = <span class="string">'startGet'</span> <span class="attr">onclick</span>=<span class="string">"getTextClick()"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">setupWebViewJavascriptBridge</span><span class="params">(callback)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (<span class="built_in">window</span>.WebViewJavascriptBridge) &#123; <span class="keyword">return</span> callback(WebViewJavascriptBridge); &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (<span class="built_in">window</span>.WVJBCallbacks) &#123; <span class="keyword">return</span> <span class="built_in">window</span>.WVJBCallbacks.push(callback); &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.WVJBCallbacks = [callback];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> WVJBIframe = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span></span><br><span class="line"><span class="actionscript">        WVJBIframe.style.display = <span class="string">'none'</span>;</span></span><br><span class="line"><span class="actionscript">        WVJBIframe.src = <span class="string">'https://__bridge_loaded__'</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.documentElement.appendChild(WVJBIframe);</span></span><br><span class="line"><span class="javascript">        setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="built_in">document</span>.documentElement.removeChild(WVJBIframe) &#125;, <span class="number">0</span>)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        setupWebViewJavascriptBridge(<span class="function"><span class="keyword">function</span><span class="params">(bridge)</span> </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">submitClick</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            WebViewJavascriptBridge.callHandler(<span class="string">'submitClick'</span>, <span class="literal">null</span>, <span class="function"><span class="keyword">function</span><span class="params">(response)</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">                </span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">getTextClick</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            WebViewJavascriptBridge.callHandler(<span class="string">'getTextClick'</span>, <span class="literal">null</span>, <span class="function"><span class="keyword">function</span><span class="params">(response)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">"getTextField"</span>).value = response;</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>第三方库：<a href="https://github.com/marcuswestin/WebViewJavascriptBridge" target="_blank" rel="noopener">地址</a></p><ol><li>添加<code>WebViewJavascriptBridge</code>库</li><li>导入头文件<code>#import &lt;WebViewJavascriptBridge.h&gt;</code></li><li>声明方法<code>@property WebViewJavascriptBridge* bridge;</code></li><li>与WebView关联</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">_bridge</span> = [WebViewJavascriptBridge bridgeForWebView:self.webView];</span><br><span class="line"></span><br><span class="line"><span class="section">[_bridge setWebViewDelegate:self]</span><span class="comment">;</span></span><br></pre></td></tr></table></figure><ol start="5"><li><p>调用js</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="name">_bridge</span> registerHandler:@<span class="string">"submitClick"</span> handler:^(<span class="name">id</span> data, WVJBResponseCallback responseCallback) &#123;</span><br><span class="line">        UIAlertController *vc = [<span class="name">UIAlertController</span> alertControllerWithTitle:@<span class="string">"温馨提示"</span> message:@<span class="string">"点击了提交按钮"</span> preferredStyle:UIAlertControllerStyleAlert]<span class="comment">;</span></span><br><span class="line">        [<span class="name">vc</span> addAction:[<span class="name">UIAlertAction</span> actionWithTitle:@<span class="string">"确定"</span> style:UIAlertActionStyleDefault handler:^(<span class="name">UIAlertAction</span> * _Nonnull action) &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;]]<span class="comment">;</span></span><br><span class="line">        [<span class="name">self</span> presentViewController:vc animated:true completion:nil]<span class="comment">;</span></span><br><span class="line">&#125;]<span class="comment">;</span></span><br></pre></td></tr></table></figure></li><li><p>注入数据</p></li></ol><figure class="highlight hy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[_bridge registerHandler:@<span class="string">"getTextClick"</span> handler:^(<span class="name"><span class="builtin-name">id</span></span> data, WVJBResponseCallback responseCallback) &#123;</span><br><span class="line">        responseCallback(@<span class="string">"哈哈哈"</span>)<span class="comment">;</span></span><br><span class="line">&#125;]<span class="comment">;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; &lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-b397461b46272052.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS 单元测试</title>
    <link href="https://wudan-ios.github.io/2019/03/27/iOS%20%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    <id>https://wudan-ios.github.io/2019/03/27/iOS 单元测试/</id>
    <published>2019-03-27T07:58:09.443Z</published>
    <updated>2019-04-26T01:15:22.325Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-4eef772205a43353.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="镇楼专用"></p><h2 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><p>以测试ViewController为例。</p><h5 id="ViewController-h文件"><a href="#ViewController-h文件" class="headerlink" title="ViewController.h文件"></a>ViewController.h文件</h5><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> : <span class="title">UIViewController</span></span></span><br><span class="line"><span class="comment">/** 逻辑测试 */</span></span><br><span class="line">- (<span class="keyword">int</span>)getSumWithNum1:(<span class="keyword">int</span>)a num2:(<span class="keyword">int</span>)b;</span><br><span class="line"><span class="comment">/** 异步测试 */</span></span><br><span class="line">- (<span class="keyword">void</span>)loadDataComplete:(<span class="keyword">void</span>(^)(<span class="keyword">id</span> info))complete;</span><br><span class="line"><span class="comment">/** 性能测试 */</span></span><br><span class="line">- (<span class="keyword">void</span>)openCamera;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h5 id="ViewController-m文件"><a href="#ViewController-m文件" class="headerlink" title="ViewController.m文件"></a>ViewController.m文件</h5><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">int</span>)getSumWithNum1:(<span class="keyword">int</span>)a num2:(<span class="keyword">int</span>)b &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)loadDataComplete:(<span class="keyword">void</span> (^)(<span class="keyword">id</span>))complete &#123;    </span><br><span class="line">    <span class="built_in">dispatch_async</span>(dispatch_get_global_queue(<span class="number">0</span>, <span class="number">0</span>), ^&#123;</span><br><span class="line">        sleep(<span class="number">2</span>);</span><br><span class="line">        <span class="built_in">NSString</span> *data = <span class="string">@"😝"</span>;</span><br><span class="line">        <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">            complete(data);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)openCamera &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; ++i) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"这是一个字符串%d"</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了进行单元化测试，所以新建一个<code>ViewControllerTest</code>文件。<br>步骤<br><img src="https://upload-images.jianshu.io/upload_images/3334769-c0d1455212a740ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="新建文件"></p><ul><li>导入测试头文件<code>#import &quot;ViewController.h&quot;</code></li><li>声明属性<code>@property (nonatomic, strong) ViewController *vc;</code></li><li>在<code>- (void)setUp;</code>进行初始化代码</li></ul><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (void)setUp &#123;</span><br><span class="line">    self.vc = <span class="comment">[<span class="comment">[ViewController alloc]</span> init]</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1、逻辑测试"><a href="#1、逻辑测试" class="headerlink" title="1、逻辑测试"></a>1、逻辑测试</h3><ol><li>给出测试数据</li><li>进行测试</li><li>使用断言进行判定</li></ol><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)testSum &#123;</span><br><span class="line"><span class="comment">// 1. given</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">22</span>;</span><br><span class="line"><span class="comment">// 2. when</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">sum</span> = [self.vc getSumWithNum1:a num2:b];</span><br><span class="line"><span class="comment">// 3. then</span></span><br><span class="line">XCTAssertEqual(<span class="keyword">sum</span>, <span class="number">32</span>, @<span class="string">"错误"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、异步测试"><a href="#2、异步测试" class="headerlink" title="2、异步测试"></a>2、异步测试</h3><ol><li>创建<code>XCTestExpectation</code>，设置错误提示</li><li><p>调用方法，在异步中调用<code>fulfill</code></p></li><li><p>进行判断时间，是否在预期时间内容</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">XCTestExpectation</span> *exp = [<span class="keyword">self</span> expectationWithDescription:<span class="string">@"超过预期时间"</span>];</span><br><span class="line">[<span class="keyword">self</span>.vc loadDataComplete:^(<span class="keyword">id</span> info) &#123;</span><br><span class="line">    <span class="built_in">XCTAssertNil</span>(info, <span class="string">@"数据为空"</span>);</span><br><span class="line">    [exp fulfill];</span><br><span class="line">&#125;];</span><br><span class="line">[<span class="keyword">self</span> waitForExpectationsWithTimeout:<span class="number">4</span> handler:^(<span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, error);</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure></li></ol><h3 id="3、性能测试"><a href="#3、性能测试" class="headerlink" title="3、性能测试"></a>3、性能测试</h3><p><img src="https://upload-images.jianshu.io/upload_images/3334769-96f0facc7307a744.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="性能测试"></p><ol><li>设置Baseline时间</li><li>Max STDDEV 最大样本标准偏差比例</li></ol><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="literal">void</span>)testPerformanceExample &#123;</span><br><span class="line">    <span class="meta">[</span><span class="built_in">self</span> measureBlock:^&#123;</span><br><span class="line">        <span class="meta">[</span><span class="built_in">self</span>.vc openCamera<span class="meta">]</span>;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="UI测试"><a href="#UI测试" class="headerlink" title="UI测试"></a>UI测试</h2><p><img src="https://upload-images.jianshu.io/upload_images/3334769-0dc163b565bdcbf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="脚本录制"><br>1、录制脚本<br><br>2、编辑脚本<br><br>3、自动化测试</p><h2 id="获取代码覆盖率"><a href="#获取代码覆盖率" class="headerlink" title="获取代码覆盖率"></a>获取代码覆盖率</h2><p>1、点击<code>Edit Secheme</code><br><img src="https://upload-images.jianshu.io/upload_images/3334769-4a5476214d38ea7d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Edit Secheme"><br>2、选择<code>Test</code>-&gt;<code>Options</code>-&gt;<code>Code Coverage</code>勾起<br><img src="https://upload-images.jianshu.io/upload_images/3334769-b1b529d4111e737b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Code Coverage"><br>3、运行代码查看结果<br><img src="https://upload-images.jianshu.io/upload_images/3334769-01e76835566d7ae7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看结果"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-4eef772205a43353.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>属性修饰词</title>
    <link href="https://wudan-ios.github.io/2019/03/27/%E5%B1%9E%E6%80%A7%E4%BF%AE%E9%A5%B0%E8%AF%8D/"/>
    <id>https://wudan-ios.github.io/2019/03/27/属性修饰词/</id>
    <published>2019-03-27T02:19:31.456Z</published>
    <updated>2019-03-27T02:19:32.272Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-f0679730c4864b7b.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="镇楼专用"></p><h3 id="property"><a href="#property" class="headerlink" title="@property"></a>@property</h3><p>默认格式：<code>@syntheszie var = _var;</code></p><p><code>ARC</code>中，默认修饰<br></p><ul><li>基本数据类型<code>@property (atomic, assign)</code><br></li><li>对象数据类型<code>@property (atomic, strong)</code></li></ul><h3 id="修饰词解释"><a href="#修饰词解释" class="headerlink" title="修饰词解释"></a>修饰词解释</h3><ul><li><p><code>nonatomic</code> 非原子性访问，不对set方法加锁，不是安全线程，但是性能高。</p></li><li><p><code>atomic</code> 原子性访问，对生成的 set 方法加互斥锁 @synchronized(锁对象），安全线程（不是绝对安全线程）,性能差。</p></li><li><code>strong</code>ARC中使用，修饰OC对象，<code>拥有关系</code>，引用计数器+1。</li><li><code>reatain</code>MRC中使用，修饰OC对象，<code>拥有关系</code>，引用计数器+1。</li><li><code>assign</code>修饰基础数据类型，直接赋值，<code>非拥有关系</code>，不使用引用计数器。</li><li><code>weak</code>修饰协议，控件，<code>非拥有关系</code>，指向的对象销毁，指针会自动置为nil，不使用引用计数器。</li><li><code>unsafe_unretained</code>与weak类似，不会自动nil化，如果所指向的内存区域被释放了，这个指针就是一个野指针。</li><li><code>copy</code>在 MRC 时是这样做的 release 旧对象( 旧对象的引用计数器 -1 ) , copy 新对象( 新对象的引用计数器 +1 ) , 然后指向新对象 .（新对象是指最终指向的那个对象，不管深拷贝还是浅拷贝），在 ARC 时是这么干的 copy 新对象( 新对象的引用计数器 +1 ) , 然后指向新对象。</li><li><code>readonly</code>只生成get方法，不想把暴露的属性被人随便替换时 , 可以使用。</li><li><code>readwrite</code>生成get/set方法。</li></ul><h3 id="dynamic"><a href="#dynamic" class="headerlink" title="@dynamic"></a>@dynamic</h3><p>告诉编译器:属性的 setter 与 getter 方法由用户自己实现,不自动生成。(当然对于 readonly 的属性只需提供 getter 即可)</p><h3 id="synthesize"><a href="#synthesize" class="headerlink" title="@synthesize"></a>@synthesize</h3><p>如果你没有手动实现 setter 方法和 getter 方法,那么编译器会自动为你加上这两个方法。</p><h3 id="synchronized"><a href="#synchronized" class="headerlink" title="@synchronized"></a>@synchronized</h3><p>线程同步锁</p><h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p>（1）什么情况使用 weak 关键字？相比 assign 有什么不同?</p><ul><li>使用<blockquote><ol><li>协议声明使用weak</li><li>IBOutlet 使用weak</li></ol></blockquote></li><li>weak 和 assign 的不同点:<blockquote><p>weak 策略在属性所指的对象遭到摧毁时,系统会将 weak 修饰的属性对象的指针指向 nil,在 OC 给 nil 发消息是不会有什么问题的;如果使用 assign 策略在属性所指的对象遭到摧毁时,属性对象指针还指向原来的对象,由于对象已经被销毁,这时候就产生了野指针,如果这时候在给此对象发送消息,很容造成程序奔溃assigin 可以用于修饰非 OC 对象,而 weak 必须用于 OC 对象。</p></blockquote></li></ul><p>（2）使用 atomic 一定是线程安全的吗?</p><ul><li>不是,atomic 的本意是指属性的存取方法是线程安全的,并不保证整个对象是线程安全的。<blockquote><p>例如： 声明一个 NSMutableArray 的原子属性 stuff,此时 self.stuff 和 self.stuff =othersulf 都是线程安全的。但是,使用[self.stuff objectAtIndex:index]就不是线程安全的,需要用互斥锁来保证线程安全性。</p></blockquote></li></ul><p>（3）@synthesize 和 @dynamic 分别有什么作用</p><ul><li><p>@property 有两个对应的词,一个是@synthesize,一个是@dynamic。<br>如果@synthesize 和@dynamic 都没写,那么默认的就是<br>@syntheszie var = _var;</p></li><li><p>@synthesize 的语义是如果你没有手动实现 setter 方法和 getter 方法,那么编译器会自动为你加上这两个方法。</p></li><li>@dynamic 告诉编译器:属性的 setter 与 getter 方法由用户自己实现,不自动生成。(当然对于 readonly 的属性只需提供 getter 即可)</li><li>假如一个属性被声明为@dynamic var；然后你没有提供@setter 方法和@getter 方法,编译的时候没问题,但是当程序运行到 instance.var = someVar,由于缺 setter方法会导致程序崩溃;<br>或者当运行到 someVar = instance.var 时,由于缺 getter 方法同样会导致崩溃。</li></ul><p>（4）ARC 下,不显式指定任何属性关键字时,默认的关键字都有哪些?</p><ul><li><p>基本数据：  <code>atomic,readwrite,assign</code></p></li><li><p>普通的 OC 对象: <code>atomic,readwrite,strong</code></p></li></ul><p>（5）用@property 声明的 NSString(或 NSArray,NSDictionary)经常使用 copy 关键字,为什么?如果改用 strong 关键字,可能造成什么问题?</p><blockquote><p>因为父类指针可以指向子类对象,使用 copy 的目的是为了让本对象的属性不受外界影响,使用 copy 无论给我传入是一个可变对象还是不可对象,我本身持有的就是一个不可变的副本.</p><p>如果我们使用是 strong,那么这个属性就有可能指向一个可变对象,如果这个可变对象在外部被修改了,那么会影响该属性.</p></blockquote><p>（6）这个写法会出什么问题: @property(copy)NSMutableArray *array;</p><blockquote><p>因为 copy 策略拷贝出来的是一个不可变对象,然而却把它当成可变对象使用,很容易造成程序奔溃这里还有一个问题,该属性使用了同步锁,会在创建时生成一些额外的代码用于帮助编写多线程程序,这会带来性能问题,通过声明 nonatomic 可以节省这些虽然<br>很小但是不必要额外开销,在 iOS 开发中应该使用 nonatomic 替代 atomic.</p></blockquote><p>（7）如何让自定义类可以用 copy 修饰符?如何重写带 copy 关键字的 setter?</p><blockquote><p>若想令自己所写的对象具有拷贝功能,则需实现 NSCopying 协议。<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现不可变版本拷贝</span></span><br><span class="line">- (<span class="keyword">id</span>)copyWithZone:(<span class="built_in">NSZone</span> *)zone; <span class="comment">// 实现可变版本拷贝</span></span><br><span class="line">- (<span class="keyword">id</span>)mutableCopyWithZone:(<span class="built_in">NSZone</span> *)zone;</span><br><span class="line"><span class="comment">// 重写带 copy 关键字的 setter</span></span><br><span class="line">- (<span class="keyword">void</span>)setName:(<span class="built_in">NSString</span> *)name &#123;</span><br><span class="line">    _name = [name <span class="keyword">copy</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="深拷贝和浅拷贝"><a href="#深拷贝和浅拷贝" class="headerlink" title="深拷贝和浅拷贝"></a>深拷贝和浅拷贝</h3><h4 id="copy-和-mutableCopy"><a href="#copy-和-mutableCopy" class="headerlink" title="copy 和 mutableCopy"></a>copy 和 mutableCopy</h4><ul><li><p><code>copy</code>拷贝出来的对象类型总是不可变类型(例如, NSString, NSDictionary, NSArray等等)</p></li><li><p><code>mutableCopy</code>拷贝出来的对象类型总是可变类型(例如, NSMutableString, NSMutableDictionary, NSMutableArray等等)</p></li></ul><hr><ul><li><code>copy</code> 对于可变对象为深拷贝，对于不可变对象为浅拷贝</li><li><code>mutableCopy</code> 始终是深拷贝</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-f0679730c4864b7b.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Block</title>
    <link href="https://wudan-ios.github.io/2019/03/26/Block/"/>
    <id>https://wudan-ios.github.io/2019/03/26/Block/</id>
    <published>2019-03-26T02:46:08.805Z</published>
    <updated>2019-03-26T02:46:08.997Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-cd0f22bd52a1e015.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="镇楼专用"></p><h3 id="Block的实质"><a href="#Block的实质" class="headerlink" title="Block的实质"></a>Block的实质</h3><p>本质上也是一个OC对象，他内部也有一个isa指针。Block是封装了函数调用以及函数调用环境的OC对象。</p><h3 id="Block三种类型"><a href="#Block三种类型" class="headerlink" title="Block三种类型"></a>Block三种类型</h3><table><thead><tr><th>类型</th><th>存储区域</th></tr></thead><tbody><tr><td>GlobalBlock</td><td>数据区</td></tr><tr><td>StackBlock</td><td>栈区</td></tr><tr><td>MallocBlock</td><td>堆区</td></tr></tbody></table><h3 id="Block避免循环引用的三种方式"><a href="#Block避免循环引用的三种方式" class="headerlink" title="Block避免循环引用的三种方式"></a>Block避免循环引用的三种方式</h3><p>1、利用 <code>__weak</code>和<code>__strong</code><br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) weakSelf = <span class="keyword">self</span>;</span><br><span class="line"><span class="keyword">self</span>.block = ^&#123;</span><br><span class="line">    __<span class="keyword">strong</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) strongSelf = weakSelf;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, <span class="built_in">NSStringFromCGRect</span>(strongSelf.view.frame));</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">self</span>.block();</span><br></pre></td></tr></table></figure></p><p>2、利用造成循环引用的临时变量<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">__block ViewController *vc = <span class="keyword">self</span>;</span><br><span class="line"><span class="keyword">self</span>.block = ^&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, <span class="built_in">NSStringFromCGRect</span>(vc.view.frame));</span><br><span class="line">    vc = <span class="literal">nil</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">self</span>.block();</span><br></pre></td></tr></table></figure></p><p>3、直接声明Block中添加造成循环引用的参数<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">void</span>(^Block)(<span class="built_in">UIViewController</span> *vc);</span><br><span class="line"></span><br><span class="line"><span class="keyword">self</span>.block = ^(<span class="built_in">UIViewController</span> *vc)&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, <span class="built_in">NSStringFromCGRect</span>(vc.view.frame));</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">self</span>.block(<span class="keyword">self</span>);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-cd0f22bd52a1e015.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>KVO</title>
    <link href="https://wudan-ios.github.io/2019/03/26/KVO/"/>
    <id>https://wudan-ios.github.io/2019/03/26/KVO/</id>
    <published>2019-03-26T02:45:39.565Z</published>
    <updated>2019-03-26T02:45:40.608Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-0c2f7bf66b38a01a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="镇楼专用"></p><h3 id="类的单个属性观察"><a href="#类的单个属性观察" class="headerlink" title="类的单个属性观察"></a>类的单个属性观察</h3><p>观察值的4中模式<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  NSKeyValueObservingOptionNew     新值</span></span><br><span class="line"><span class="comment"> *  NSKeyValueObservingOptionOld     旧值</span></span><br><span class="line"><span class="comment"> *  NSKeyValueObservingOptionInitial 注册发送通知，改变时发送通知</span></span><br><span class="line"><span class="comment"> *  NSKeyValueObservingOptionPrior   改变之前发送通知，改变后发送通知</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></p><p>针对<code>Person</code>类里面的<code>name</code>属性进行观察<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[person <span class="string">addObserver:</span>self <span class="string">forKeyPath:</span>@<span class="string">"name"</span> <span class="string">options:</span>NSKeyValueObservingOptionNew <span class="string">context:</span>nil];</span><br></pre></td></tr></table></figure></p><p>查看观察<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)observeValueForKeyPath:(<span class="built_in">NSString</span> *)keyPath ofObject:(<span class="keyword">id</span>)object change:(<span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSKeyValueChangeKey</span>,<span class="keyword">id</span>&gt; *)change context:(<span class="keyword">void</span> *)context &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, change);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>打印效果<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019-03-22</span> <span class="number">09</span>:<span class="number">20</span>:<span class="number">16.875033</span>+<span class="number">0800</span> KVO[<span class="number">1844:81256</span>] &#123;</span><br><span class="line">    kind = <span class="number">1</span><span class="comment">;</span></span><br><span class="line">    new = <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="类的里面嵌套其他的属性观察"><a href="#类的里面嵌套其他的属性观察" class="headerlink" title="类的里面嵌套其他的属性观察"></a>类的里面嵌套其他的属性观察</h3><p>观察<code>Person</code>里面<code>Dog</code>类的<code>age</code>，通过点语法直接监听<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[person <span class="string">addObserver:</span>self <span class="string">forKeyPath:</span>@<span class="string">"dog.age"</span> <span class="string">options:</span>NSKeyValueObservingOptionNew <span class="string">context:</span>nil];</span><br></pre></td></tr></table></figure></p><p>输入结果<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019-03-22</span> <span class="number">09</span>:<span class="number">23</span>:<span class="number">25.854859</span>+<span class="number">0800</span> KVO[<span class="number">1876:84141</span>] &#123;</span><br><span class="line">    kind = <span class="number">1</span><span class="comment">;</span></span><br><span class="line">    new = <span class="number">11</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="一次性观察多个值"><a href="#一次性观察多个值" class="headerlink" title="一次性观察多个值"></a>一次性观察多个值</h3><p>例如观察<code>Person</code>里面的<code>Dog</code>的<code>age</code>和<code>level</code>，则在<code>Person</code>类中重新<code>+ (NSSet&lt;NSString *&gt; *)keyPathsForValuesAffectingValueForKey:(NSString *)key</code><br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">NSSet</span>&lt;<span class="built_in">NSString</span> *&gt; *)keyPathsForValuesAffectingValueForKey:(<span class="built_in">NSString</span> *)key &#123;</span><br><span class="line">    <span class="built_in">NSSet</span> *keyPaths = [<span class="keyword">super</span> keyPathsForValuesAffectingValueForKey:key];</span><br><span class="line">    <span class="keyword">if</span> ([key isEqualToString:<span class="string">@"dog"</span>]) &#123;</span><br><span class="line">        <span class="built_in">NSArray</span> *array = @[<span class="string">@"_dog.name"</span>, <span class="string">@"_dog.level"</span>];</span><br><span class="line">        keyPaths = [keyPaths setByAddingObjectsFromArray:array];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> keyPaths;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>直接观察<code>Dog</code>类<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[person <span class="string">addObserver:</span>self <span class="string">forKeyPath:</span>@<span class="string">"dog"</span> <span class="string">options:</span>NSKeyValueObservingOptionNew <span class="string">context:</span>nil];</span><br></pre></td></tr></table></figure></p><p>打印结果<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019-03-22</span> <span class="number">09</span>:<span class="number">27:11.485240</span>+<span class="number">0800</span> KVO[<span class="number">1929:87568</span>] &#123;</span><br><span class="line">    kind = <span class="number">1</span><span class="comment">;</span></span><br><span class="line">    new = "&lt;Dog: <span class="number">0</span>x60<span class="number">00027c0b80</span>&gt;"<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="手动模式"><a href="#手动模式" class="headerlink" title="手动模式"></a>手动模式</h3><p>在Person类中重写<code>+ (BOOL)automaticallyNotifiesObserversForKey:(NSString *)key</code><br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">BOOL</span>)automaticallyNotifiesObserversForKey:(<span class="built_in">NSString</span> *)key &#123;</span><br><span class="line">    <span class="comment">// 修改为手动模式</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>手动触发<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="name">self.person</span> willChangeValueForKey:@<span class="string">"name"</span>]<span class="comment">;</span></span><br><span class="line">[<span class="name">self.person</span> didChangeValueForKey:@<span class="string">"name"</span>]<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><h3 id="观察容器类"><a href="#观察容器类" class="headerlink" title="观察容器类"></a>观察容器类</h3><p>需要利用<code>KVC</code><br>例如观察<code>person</code>中的<code>array</code><br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="name">self.person</span> mutableArrayValueForKey:@<span class="string">"array"</span>] addObject:@<span class="string">"obj"</span>]<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>输出结果<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019-03-22</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">13.996095</span>+<span class="number">0800</span> KVO[<span class="number">5521:170395</span>] &#123;</span><br><span class="line">    indexes = "&lt;_NSCachedIndexSet: <span class="number">0</span>x<span class="number">600002216160</span>&gt;[number of indexes: <span class="number">1</span> (in <span class="number">1</span> ranges), indexes: (<span class="number">0</span>)]"<span class="comment">;</span></span><br><span class="line">    kind = <span class="number">2</span><span class="comment">;</span></span><br><span class="line">    new =     (</span><br><span class="line">        obj</span><br><span class="line">    )<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h3 id="KVO的底层实现"><a href="#KVO的底层实现" class="headerlink" title="KVO的底层实现"></a>KVO的底层实现</h3><p>实质：观察值的setter方法<br>通过runtime，新建一个子类继承于观察类（NSKVONotifing_类名），动态的修改了观察类的类型为子类的类型,在子类里面重写set方法，调用<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)<span class="string">setName:</span>(NSString *)name &#123;</span><br><span class="line">    [self <span class="string">willChangeValueForKey:</span>@<span class="string">"name"</span>];</span><br><span class="line">    [<span class="keyword">super</span> <span class="string">setName:</span>name];</span><br><span class="line">    [self <span class="string">didChangeValueForKey:</span>@<span class="string">"name"</span>];   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-0c2f7bf66b38a01a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS-3D Touch</title>
    <link href="https://wudan-ios.github.io/2019/03/21/iOS-3D%20Touch/"/>
    <id>https://wudan-ios.github.io/2019/03/21/iOS-3D Touch/</id>
    <published>2019-03-21T01:51:49.822Z</published>
    <updated>2019-03-21T02:05:23.145Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-f28947056b8dfe49.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="镇楼专用"></p><h3 id="桌面图标点击"><a href="#桌面图标点击" class="headerlink" title="桌面图标点击"></a>桌面图标点击</h3><p>需要在<code>AppDelegate</code>里面进行代码编写。<br>1、创建方式<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** type  唯一标示r符</span></span><br><span class="line"><span class="comment">*  localizedTitle 标题</span></span><br><span class="line"><span class="comment">*  localizedSubtitle 副标题</span></span><br><span class="line"><span class="comment">*  icon UIApplicationShortcutIcon对象</span></span><br><span class="line"><span class="comment">*  userInfo 传递信息</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用系统提供的图标生成UIApplicationShortcutIcon对象</span></span><br><span class="line">UIApplicationShortcutItem *shoreItem1 = [[UIApplicationShortcutItem alloc] <span class="string">initWithType:</span>@<span class="string">"type1"</span></span><br><span class="line"><span class="string">localizedTitle:</span>@<span class="string">"标题"</span></span><br><span class="line"><span class="string">localizedSubtitle:</span>@<span class="string">"副标题"</span></span><br><span class="line"><span class="string">icon:</span>[UIApplicationShortcutIcon <span class="string">iconWithType:</span>UIApplicationShortcutIconTypeCompose]</span><br><span class="line"><span class="string">userInfo:</span>nil];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用自定义图片生成UIApplicationShortcutIcon对象</span></span><br><span class="line">UIApplicationShortcutItem *shoreItem2 = [[UIApplicationShortcutItem alloc] <span class="string">initWithType:</span>@<span class="string">"type2"</span></span><br><span class="line"><span class="string">localizedTitle:</span>@<span class="string">"标题2"</span></span><br><span class="line"><span class="string">localizedSubtitle:</span>@<span class="string">"副标题2"</span></span><br><span class="line"><span class="string">icon:</span>[UIApplicationShortcutIcon <span class="string">iconWithTemplateImageName:</span>@<span class="string">"验证码"</span>]</span><br><span class="line"><span class="string">userInfo:</span>nil];</span><br><span class="line">[UIApplication sharedApplication].shortcutItems = @[shoreItem1, shoreItem2];</span><br></pre></td></tr></table></figure></p><blockquote><p>注：系统的UIApplicationShortcutIcon样式，自己去研究吧！<a href="https://developer.apple.com/documentation/uikit/uiapplicationshortcuticontype?language=objc" target="_blank" rel="noopener">点击这个是官方地址</a></p></blockquote><p>2、点击回调，可以根据<code>shortcutItem.type</code> 进行判断点击的是哪个item<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span> (void)<span class="selector-tag">application</span><span class="selector-pseudo">:(UIApplication</span> *)<span class="selector-tag">application</span> <span class="selector-tag">performActionForShortcutItem</span><span class="selector-pseudo">:(UIApplicationShortcutItem</span> *)<span class="selector-tag">shortcutItem</span> <span class="selector-tag">completionHandler</span><span class="selector-pseudo">:(void</span> (^)(BOOL))<span class="selector-tag">completionHandler</span> &#123;</span><br><span class="line"><span class="selector-tag">NSLog</span>(@<span class="string">"点击了%@"</span>, shortcutItem);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="应用内，点击进行页面操作"><a href="#应用内，点击进行页面操作" class="headerlink" title="应用内，点击进行页面操作"></a>应用内，点击进行页面操作</h3><p>1、遵循代理<code>UIViewControllerPreviewingDelegate</code></p><p>2、判断设备是否支持<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">self</span>.traitCollection.forceTouchCapability == <span class="built_in">UIForceTouchCapabilityAvailable</span>)&#123;</span><br><span class="line">[<span class="keyword">self</span> registerForPreviewingWithDelegate:<span class="keyword">self</span> sourceView:<span class="keyword">self</span>.view];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"3D Touch  可用!"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"3D Touch  不可用!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3、实现代理方法<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIViewController</span> *)previewingContext:(<span class="keyword">id</span> &lt;<span class="built_in">UIViewControllerPreviewing</span>&gt;)previewingContext viewControllerForLocation:(<span class="built_in">CGPoint</span>)location &#123;</span><br><span class="line">NextViewController *vc = [[NextViewController alloc] init];</span><br><span class="line"><span class="keyword">return</span> vc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)previewingContext:(<span class="keyword">id</span>&lt;<span class="built_in">UIViewControllerPreviewing</span>&gt;)previewingContext commitViewController:(<span class="built_in">UIViewController</span> *)viewControllerToCommit &#123;</span><br><span class="line">[<span class="keyword">self</span> showViewController:viewControllerToCommit sender:<span class="keyword">self</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>4、在需要显示的页面里面调用<code>- (NSArray&lt;id&lt;UIPreviewActionItem&gt;&gt; *)previewActionItems</code>添加Items<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSArray</span>&lt;<span class="keyword">id</span>&lt;<span class="built_in">UIPreviewActionItem</span>&gt;&gt; *)previewActionItems &#123;</span><br><span class="line"><span class="built_in">UIPreviewAction</span> *action1 = [<span class="built_in">UIPreviewAction</span> actionWithTitle:<span class="string">@"标题1"</span> style:<span class="built_in">UIPreviewActionStyleDefault</span> handler:^(<span class="built_in">UIPreviewAction</span> * _Nonnull action, <span class="built_in">UIViewController</span> * _Nonnull previewViewController) &#123;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"click---标题1"</span>);</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="built_in">UIPreviewAction</span> *action2 = [<span class="built_in">UIPreviewAction</span> actionWithTitle:<span class="string">@"标题2"</span> style:<span class="built_in">UIPreviewActionStyleSelected</span> handler:^(<span class="built_in">UIPreviewAction</span> * _Nonnull action, <span class="built_in">UIViewController</span> * _Nonnull previewViewController) &#123;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"click---标题2"</span>);</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="built_in">UIPreviewAction</span> *action3 = [<span class="built_in">UIPreviewAction</span> actionWithTitle:<span class="string">@"标题3"</span> style:<span class="built_in">UIPreviewActionStyleDestructive</span> handler:^(<span class="built_in">UIPreviewAction</span> * _Nonnull action, <span class="built_in">UIViewController</span> * _Nonnull previewViewController) &#123;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"click---标题3"</span>);</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSArray</span> *actions = @[action1,action2,action3];</span><br><span class="line"><span class="keyword">return</span> actions;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="温馨提示"><a href="#温馨提示" class="headerlink" title="温馨提示"></a>温馨提示</h3><ul><li>点击App图标显示最分享按钮，是苹果给上架App添加的<br><img src="https://upload-images.jianshu.io/upload_images/3334769-cffec3aa7180b169.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/680" alt="IMG_2873.PNG"></li><li>点击分享的效果<br><img src="https://upload-images.jianshu.io/upload_images/3334769-ec648a2fc0916645.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/680" alt="IMG_2872.PNG"></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-f28947056b8dfe49.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Runtime-消息转发</title>
    <link href="https://wudan-ios.github.io/2019/03/19/Runtime-%E6%B6%88%E6%81%AF%E8%BD%AC%E5%8F%91/"/>
    <id>https://wudan-ios.github.io/2019/03/19/Runtime-消息转发/</id>
    <published>2019-03-19T05:15:50.881Z</published>
    <updated>2019-03-19T05:15:51.093Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://poldw0h4y.bkt.clouddn.com/%E6%B6%88%E6%81%AF%E8%BD%AC%E5%8F%91%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg" alt="消息转发流程图"></p><p>iOS 方法的动态解析和消息转发</p><p>以创建的Message类为示例<br>Message.h<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@interface</span> <span class="string">Message :</span> NSObject</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)<span class="string">sendMessage:</span>(NSString *)message;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)<span class="string">sendClassMessage:</span>(NSString *)message;</span><br><span class="line"></span><br><span class="line"><span class="meta">@end</span></span><br></pre></td></tr></table></figure></p><p>Message.m<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@implementation</span> Message</span><br><span class="line"></span><br><span class="line"><span class="variable">@end</span></span><br></pre></td></tr></table></figure></p><h3 id="动态方法解析"><a href="#动态方法解析" class="headerlink" title="动态方法解析"></a>动态方法解析</h3><p>征询接收者所属的类，是否需要动态添加类方法或实例方法，来处理这个未找到的方法。</p><ol><li>首先判断是否实现了 <code>resolveInstanceMethod</code>，如果没有实现，进入下一步处理；</li><li>如果实现了，调用 <code>resolveInstanceMethod</code>，获取返回值；</li><li>如果返回值为 YES，表示 <code>resolveInstanceMethod</code> 声称它已经提供了 <code>selector</code> 的实现，因此再次查找 method list，如果找到对应的 <code>IMP</code>，则返回该实现，否则提示警告信息，进入下一步处理；</li><li>如果返回值为 NO，进入下一步处理；<h4 id="1-对象方法"><a href="#1-对象方法" class="headerlink" title="1. 对象方法"></a>1. 对象方法</h4>通过<code>+ (BOOL)resolveInstanceMethod:(SEL)sel;</code>方法进行解析<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+ (BOOL)resolveInstanceMethod:(SEL)sel &#123;</span><br><span class="line">    <span class="keyword">if</span> (sel == <span class="meta">@selector(sendMessage:)</span>) &#123;</span><br><span class="line">        class_addMethod([self <span class="class"><span class="keyword">class</span>], <span class="type">sel</span>, <span class="type"></span></span>(IMP)innerSenderMessageMetod, <span class="string">"v@:@"</span>);</span><br><span class="line">        <span class="keyword">return</span> YES;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">super</span> resolveInstanceMethod:sel];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void innerSenderMessageMetod(id obj, SEL _cmd) &#123;</span><br><span class="line">    NSLog(@<span class="string">"对象方法，动态解析"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="2-类方法"><a href="#2-类方法" class="headerlink" title="2. 类方法"></a>2. 类方法</h4><p>通过<code>+ (BOOL)resolveClassMethod:(SEL)sel;</code>方法进行解析<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">BOOL</span>)resolveClassMethod:(SEL)sel &#123;</span><br><span class="line">    <span class="keyword">if</span> (sel == <span class="keyword">@selector</span>(sendClassMessage:)) &#123;</span><br><span class="line">        class_addMethod(object_getClass(<span class="keyword">self</span>), sel, (IMP)innerSenderClassMessageMetod, <span class="string">"v@:@"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">super</span> resolveClassMethod:sel];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> innerSenderClassMessageMetod(<span class="keyword">id</span> obj, SEL _cmd) &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"类方法，动态解析"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>如果没有动态添加方法，则会进入此阶段，此时询问是否要将这条消息转发给其他的对象，来处理这个方法。如果返回nil，即表示不转发给其他对象，此时会进入第3阶段<br>创建了一个备用类<code>MessageTemp</code><br>MessageTemp.h<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@interface</span> <span class="string">MessageTemp :</span> NSObject</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)<span class="string">sendMessage:</span>(NSString *)message;</span><br><span class="line">- (<span class="keyword">void</span>)<span class="string">sendClassMessage:</span>(NSString *)message;</span><br><span class="line"><span class="meta">@end</span></span><br></pre></td></tr></table></figure></p><p>MessageTemp.m<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">MessageTemp</span></span></span><br><span class="line">- (<span class="keyword">void</span>)sendMessage:(<span class="built_in">NSString</span> *)message &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"备用Message，解析对象方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line">- (<span class="keyword">void</span>)sendClassMessage:(<span class="built_in">NSString</span> *)message &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"备用Message，解析类方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></p><h4 id="1-对象方法-1"><a href="#1-对象方法-1" class="headerlink" title="1. 对象方法"></a>1. 对象方法</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span> (id)<span class="selector-tag">forwardingTargetForSelector</span><span class="selector-pseudo">:(SEL)aSelector</span> &#123;</span><br><span class="line">    <span class="selector-tag">if</span> (aSelector == <span class="variable">@selector</span>(<span class="attribute">sendMessage</span>:)) &#123;</span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-attr">[MessageTemp new]</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-attr">[super forwardingTargetForSelector:aSelector]</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-类方法-1"><a href="#2-类方法-1" class="headerlink" title="2. 类方法"></a>2. 类方法</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+ (id)<span class="string">forwardingTargetForSelector:</span>(SEL)aSelector &#123;</span><br><span class="line">    <span class="keyword">if</span> (aSelector == <span class="meta">@selector</span>(<span class="string">sendClassMessage:</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> [MessageTemp <span class="keyword">new</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">super</span> <span class="string">forwardingTargetForSelector:</span>aSelector];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="消息转发"><a href="#消息转发" class="headerlink" title="消息转发"></a>消息转发</h3><p>当 <code>forwardingTargetForSelector:</code> 方法未做出任何响应的话，会来到消息转发流程。消息转发时会首先调用 <code>methodSignatureForSelector:</code> 方法，在方法内部生成 <code>NSMethodSignature</code> 类型的方法签名对象。在生成签名对象时，可以指定 <code>target</code> 和 <code>SEL</code>，可以将这两个参数换成其他参数，将消息转发给其他对象。</p><h4 id="1-对象方法-2"><a href="#1-对象方法-2" class="headerlink" title="1. 对象方法"></a>1. 对象方法</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span> (void)<span class="selector-tag">forwardInvocation</span><span class="selector-pseudo">:(NSInvocation</span> *)<span class="selector-tag">anInvocation</span> &#123;</span><br><span class="line">    <span class="selector-tag">if</span> ([anInvocation selector] == <span class="variable">@selector</span>(<span class="attribute">sendMessage</span>:)) &#123;</span><br><span class="line">        <span class="selector-attr">[anInvocation invokeWithTarget:[MessageTemp new]</span>];</span><br><span class="line">    &#125; <span class="selector-tag">else</span> &#123;</span><br><span class="line">        <span class="selector-attr">[super forwardInvocation:anInvocation]</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">-</span> (NSMethodSignature *)<span class="selector-tag">methodSignatureForSelector</span><span class="selector-pseudo">:(SEL)aSelector</span> &#123;</span><br><span class="line">    <span class="selector-tag">if</span> (aSelector == <span class="variable">@selector</span>(<span class="attribute">sendMessage</span>:)) &#123;</span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-attr">[NSMethodSignature signatureWithObjCTypes:"v@:@"]</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-attr">[super methodSignatureForSelector:aSelector]</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-类方法-2"><a href="#2-类方法-2" class="headerlink" title="2. 类方法"></a>2. 类方法</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="keyword">void</span>)<span class="string">forwardInvocation:</span>(NSInvocation *)anInvocation &#123;</span><br><span class="line">    <span class="keyword">if</span> ([anInvocation selector] == <span class="meta">@selector</span>(<span class="string">sendClassMessage:</span>)) &#123;</span><br><span class="line">        [anInvocation <span class="string">invokeWithTarget:</span>[MessageTemp <span class="keyword">new</span>]];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        [<span class="keyword">super</span> <span class="string">forwardInvocation:</span>anInvocation];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (NSMethodSignature *)<span class="string">methodSignatureForSelector:</span>(SEL)aSelector &#123;</span><br><span class="line">    <span class="keyword">if</span> (aSelector == <span class="meta">@selector</span>(<span class="string">sendClassMessage:</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> [NSMethodSignature <span class="string">signatureWithObjCTypes:</span><span class="string">"v@:@"</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">super</span> <span class="string">methodSignatureForSelector:</span>aSelector];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ul><li>适用于把操作给另外一个类来实现</li><li>利用分类，防止应用程序因为未处理消息而崩溃</li><li>Jspatch </li><li>Aspects</li><li>BlocksKit</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://poldw0h4y.bkt.clouddn.com/%E6%B6%88%E6%81%AF%E8%BD%AC%E5%8F%91%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg&quot; alt=&quot;消息转发流程图&quot;&gt;&lt;/p&gt;
&lt;p&gt;iOS
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS代码块(Snippet)</title>
    <link href="https://wudan-ios.github.io/2019/03/13/%E4%BB%A3%E7%A0%81%E5%9D%97(Snippet)/"/>
    <id>https://wudan-ios.github.io/2019/03/13/代码块(Snippet)/</id>
    <published>2019-03-13T03:03:18.597Z</published>
    <updated>2019-04-04T05:45:32.416Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-b07622a36a646add.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="镇楼专用"></p><p>代码块(Snippet)，方便了代码快速创建。</p><h4 id="管理：在新版Xcode中管理页面在编译器的右上角"><a href="#管理：在新版Xcode中管理页面在编译器的右上角" class="headerlink" title="管理：在新版Xcode中管理页面在编译器的右上角"></a>管理：在新版Xcode中管理页面在编译器的右上角</h4><p><img src="https://upload-images.jianshu.io/upload_images/3334769-80379a923c19ef74.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="代码块管理"></p><h4 id="添加：选中代码鼠标右击"><a href="#添加：选中代码鼠标右击" class="headerlink" title="添加：选中代码鼠标右击"></a>添加：选中代码鼠标右击</h4><p><img src="https://upload-images.jianshu.io/upload_images/3334769-52aa3439524de38c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加"></p><h4 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h4><p><img src="https://upload-images.jianshu.io/upload_images/3334769-df39d293cbb6e8b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="编辑"></p><ol><li>Title：标题。 </li><li>Summary：描述文字。 </li><li>Platform：可以使用的平台（如iOS、Mac OS）。 </li><li>Language：可以在哪些语言中使用（如 Objective-C、Swift）。 </li><li>Completion Shortcut：快捷方式，以字母开头（支持少数符号，如@）。 </li><li>Completion Scopes：作用范围，一般写在正确的位置拖动即可，Xcode会自行选择好。<h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) &lt;<span class="meta">#ClassName#&gt; *<span class="meta-string">&lt;#class#&gt;</span>; ///<span class="meta-string">&lt; &lt;#注释#&gt;</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) &lt;<span class="meta">#DataType#&gt; <span class="meta-string">&lt;#name#&gt;</span>; ///<span class="meta-string">&lt; &lt;#注释#&gt;</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) &lt;<span class="meta">#ClassName#&gt; *<span class="meta-string">&lt;#name#&gt;</span>; ///<span class="meta-string">&lt; &lt;#注释#&gt;</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="keyword">id</span>&lt;&lt;<span class="meta">#delegateOrDataSouce#&gt;&gt; <span class="meta-string">&lt;#delegateOrDataSouce#&gt;</span>; ///<span class="meta-string">&lt; &lt;#注释#&gt;</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) &lt;<span class="meta">#Class#&gt; *<span class="meta-string">&lt;#name#&gt;</span>; ///<span class="meta-string">&lt; &lt;#注释#&gt;</span></span></span><br></pre></td></tr></table></figure></li></ol><h4 id="常用注释"><a href="#常用注释" class="headerlink" title="常用注释"></a>常用注释</h4><ol><li><p>顶部注释</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/** &lt;<span class="meta">#属性注释#&gt; */</span></span><br></pre></td></tr></table></figure></li><li><p>右侧注释</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span><span class="doctag">&lt; &lt;#注释#&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>简述顶部注释</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/** &lt;<span class="meta">#简要描述#&gt;</span></span><br><span class="line"> * &lt;<span class="meta">#详细描述#&gt;</span></span><br><span class="line"> */</span><br></pre></td></tr></table></figure></li><li><p>Pragma</p></li></ol><ul><li><p>有分割线</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#pragma</span> <span class="selector-tag">mark</span> &lt;#mark#&gt;</span><br></pre></td></tr></table></figure></li><li><p>无分割线</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#pragma</span> <span class="selector-tag">mark</span> - &lt;#mark&gt; 或 <span class="comment">// MARK: &lt;#mark#&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="5"><li><p>Warning(警告)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">warning</span> <span class="meta-string">&lt;#message#&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>???(不确定)</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span> ???: &lt;<span class="comment">#???#&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>!!!(警告)</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">// !!!: &lt;#???#&gt;</span><br></pre></td></tr></table></figure></li><li><p>FIXME(需要修改的地方)</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span> FIXME: &lt;<span class="comment">#Fix详情#&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>常用方法</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#pragma</span> <span class="selector-tag">mark</span> - 页面控件配置</span><br><span class="line">- (void)setupSubViewsProperties &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#pragma</span> <span class="selector-tag">mark</span> - 页面控件布局</span><br><span class="line">- (void)setupSubViewsConstraint &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>枚举</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">typedef <span class="type">NS_ENUM</span>(<span class="type">NSInteger</span>, &lt;#<span class="type">TypeName</span>#&gt;) &#123;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">typedef <span class="type">NS_OPTIONS</span>(<span class="type">NSUInteger</span>, &lt;#<span class="type">TypeName</span>#&gt;) &#123;</span><br><span class="line">                </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>IFDEBUG</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">if</span> DEBUG</span><br><span class="line">&lt;#TODO#&gt;</span><br><span class="line">#else</span><br><span class="line">&lt;#TODO#&gt;</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure></li><li><p>快捷初始化UILabel</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">UILabel *<span class="attr">l</span> = [[UILabel alloc] init];</span><br><span class="line">l.<span class="attr">font</span> = [UIFont &lt;<span class="comment">#font#&gt;];</span></span><br><span class="line">l.<span class="attr">text</span> = @<span class="string">"&lt;#conent#&gt;"</span>;</span><br><span class="line">l.<span class="attr">textColor</span> = [UIColor &lt;<span class="comment">#textColor#&gt;];</span></span><br><span class="line">l.<span class="attr">numberOfLines</span> = <span class="number">0</span>;</span><br><span class="line">[&lt;<span class="comment">#view#&gt; addSubview:l];</span></span><br></pre></td></tr></table></figure></li><li><p>快捷初始化UIButton</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">UIButton *<span class="keyword">b </span>= [UIButton <span class="keyword">buttonWithType:UIButtonTypeCustom];</span></span><br><span class="line"><span class="keyword">b.backgroundColor </span>= [UIColor &lt;<span class="comment">#backgroundColor#&gt;];</span></span><br><span class="line"><span class="keyword">b.titleLabel.font </span>= [UIFont &lt;<span class="comment">#font#&gt;];</span></span><br><span class="line">[<span class="keyword">b </span>setTitle:&lt;<span class="comment">#title#&gt; forState:UIControlStateNormal];</span></span><br><span class="line">[<span class="keyword">b </span>setTitleColor:[UIColor &lt;<span class="comment">#titleColor#&gt;] forState:UIControlStateNormal];</span></span><br><span class="line">[<span class="keyword">b </span>setImage:[UIImage imageNamed:&lt;<span class="comment">#(nonnull NSString *)#&gt;] forState:UIControlStateNormal]</span></span><br><span class="line">[<span class="keyword">b </span><span class="keyword">addTarget:self </span>action:@selector(<span class="keyword">didTapped&lt;#Button </span>Name<span class="comment">#&gt;:) forControlEvents:UIControlEventTouchUpInside];</span></span><br><span class="line">[&lt;<span class="comment">#view#&gt; addSubview:b];</span></span><br></pre></td></tr></table></figure></li><li><p>UIButton 点击事件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** &lt;#ButtonName#&gt;点击事件 */</span></span><br><span class="line"><span class="selector-tag">-</span> (<span class="selector-tag">void</span>)<span class="selector-tag">didTapped</span>&lt;<span class="selector-id">#ButtonName</span>#&gt;<span class="selector-pseudo">:(UIButton</span> *)<span class="selector-tag">sender</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Notification事件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** &lt;#Notification Name#&gt;通知事件 */</span></span><br><span class="line"><span class="selector-tag">-</span> (<span class="selector-tag">void</span>)<span class="selector-tag">didReceive</span>&lt;<span class="selector-id">#Notification</span> <span class="selector-tag">Name</span>#&gt;<span class="selector-pseudo">:(NSNotification</span> *)<span class="selector-tag">notification</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UIGestureRecognizer触摸事件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** &lt;#GestureRecognizer Name#&gt;触摸事件 */</span></span><br><span class="line"><span class="selector-tag">-</span> (<span class="selector-tag">void</span>)<span class="selector-tag">didRecognized</span>&lt;<span class="selector-id">#GestureRecognizer</span> <span class="selector-tag">Name</span>#&gt;<span class="selector-pseudo">:(UIGestureRecognizer</span> *)<span class="selector-tag">recognizer</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h4><p>这也是为了个人意见，其他还有很多可以做成代码块的，例如CGD，TableViewDataSource等等，希望短短的文章可以让你代码可以写的更好。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-b07622a36a646add.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS工具类-时间差</title>
    <link href="https://wudan-ios.github.io/2019/02/26/iOS%E5%B7%A5%E5%85%B7%E7%B1%BB-%E6%97%B6%E9%97%B4%E5%B7%AE/"/>
    <id>https://wudan-ios.github.io/2019/02/26/iOS工具类-时间差/</id>
    <published>2019-02-26T06:56:01.346Z</published>
    <updated>2019-02-26T07:48:48.016Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-073af85178d8c456.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="镇楼专用"></p><p>最近想写点日常使用的工具类，方便开发。<br>首先想到就是时间之类的问题，所以打开<code>Xocde</code>，进行代码编辑。<br>这个代码考虑不是很完全，日后有时间再进行修改补充。</p><h3 id="接口文件"><a href="#接口文件" class="headerlink" title="接口文件"></a>接口文件</h3><p>我使用的类名称为<code>DateHandleUtils</code><br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NS_ASSUME_NONNULL_BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, WeiBoTimeStyle) &#123;</span><br><span class="line">    WeiBoTimeStyleSecond,</span><br><span class="line">    WeiBoTimeStyleMillisecond</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">DateHandleUtils</span> : <span class="title">NSObject</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 根据时间返回文字时间戳</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param timeInterval 比较时间</span></span><br><span class="line"><span class="comment"> @param style 时间戳格式</span></span><br><span class="line"><span class="comment"> @return `刚刚`、`10秒前`、`10分钟前`、`1小时前`等等</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="built_in">NSString</span> *)weiboTimeWithPublicTime:(<span class="built_in">NSTimeInterval</span>)timeInterval timeStyel:(WeiBoTimeStyle)style;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 当前时间时间戳</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> @return 毫秒的时间戳</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="built_in">NSTimeInterval</span>)currentMilliSecondTimeInterval;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 当前时间时间戳</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> @return 秒的时间戳</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="built_in">NSTimeInterval</span>)currentSecondTimeInterval;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据时间戳获取时间差</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> @param startTime 开始时间的时间戳</span></span><br><span class="line"><span class="comment"> @param endTime 结束时间的时间戳</span></span><br><span class="line"><span class="comment"> @return 返回差值，单位为秒</span></span><br><span class="line"><span class="comment"> @warning 传值格式为：毫秒级时间戳</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="built_in">NSTimeInterval</span>)timeDifferenceOfMillisecondWithStartTimeInterval:(<span class="built_in">NSTimeInterval</span>)startTime endTimeInterval:(<span class="built_in">NSTimeInterval</span>)endTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据时间戳获取时间差</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> @param startTime 开始时间的时间戳</span></span><br><span class="line"><span class="comment"> @param endTime 结束时间的时间戳</span></span><br><span class="line"><span class="comment"> @return 返回差值，单位为秒</span></span><br><span class="line"><span class="comment"> @warning 传值格式为：秒级时间戳</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="built_in">NSTimeInterval</span>)timeDifferenceOfSecondsWithStartTimeInterval:(<span class="built_in">NSTimeInterval</span>)startTime endTimeInterval:(<span class="built_in">NSTimeInterval</span>)endTime;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_ASSUME_NONNULL_END</span></span><br></pre></td></tr></table></figure></p><h3 id="实现文件"><a href="#实现文件" class="headerlink" title="实现文件"></a>实现文件</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@implementation</span> DateHandleUtils</span><br><span class="line"></span><br><span class="line">+ (NSString *)<span class="string">weiboTimeWithPublicTime:</span>(NSTimeInterval)timeInterval <span class="string">timeStyel:</span>(WeiBoTimeStyle)style &#123;</span><br><span class="line">    NSTimeInterval interval;</span><br><span class="line">        <span class="keyword">switch</span> (style) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">WeiBoTimeStyleSecond:</span></span><br><span class="line">            interval = [DateHandleUtils <span class="string">timeDifferenceOfSecondsWithStartTimeInterval:</span>timeInterval <span class="string">endTimeInterval:</span>[DateHandleUtils currentSecondTimeInterval]];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">WeiBoTimeStyleMillisecond:</span></span><br><span class="line">            interval = [DateHandleUtils <span class="string">timeDifferenceOfMillisecondWithStartTimeInterval:</span>timeInterval <span class="string">endTimeInterval:</span>[DateHandleUtils currentMilliSecondTimeInterval]];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"><span class="symbol">        default:</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (interval &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> @<span class="string">"刚刚"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (interval &lt; <span class="number">60</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [NSString <span class="string">stringWithFormat:</span>@<span class="string">"%.f秒前"</span>, interval];</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (interval / <span class="number">60</span> &lt; <span class="number">60</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [NSString <span class="string">stringWithFormat:</span>@<span class="string">"%.f分钟前"</span>, interval / <span class="number">60</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (interval <span class="regexp">/ 60 /</span> <span class="number">60</span> &lt; <span class="number">24</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [NSString <span class="string">stringWithFormat:</span>@<span class="string">"%.f小时前"</span>, interval <span class="regexp">/ 60 /</span> <span class="number">60</span> - <span class="number">1</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (interval <span class="regexp">/ 60 /</span> <span class="number">60</span> / <span class="number">24</span> &lt; <span class="number">30</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [NSString <span class="string">stringWithFormat:</span>@<span class="string">"%.f天前"</span>, interval <span class="regexp">/ 60 /</span> <span class="number">60</span> / <span class="number">24</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (interval <span class="regexp">/ 60 /</span> <span class="number">60</span> <span class="regexp">/ 24 /</span> <span class="number">30</span> &lt; <span class="number">12</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [NSString <span class="string">stringWithFormat:</span>@<span class="string">"%.f月前"</span>, interval <span class="regexp">/ 60 /</span> <span class="number">60</span> <span class="regexp">/ 24 /</span> <span class="number">30</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (interval <span class="regexp">/ 60 /</span> <span class="number">60</span> <span class="regexp">/ 24 /</span> <span class="number">30</span> / <span class="number">12</span> &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> [NSString <span class="string">stringWithFormat:</span>@<span class="string">"%.f年前"</span>, interval <span class="regexp">/ 60 /</span> <span class="number">60</span> <span class="regexp">/ 24 /</span> <span class="number">30</span> / <span class="number">12</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> @<span class="string">"未知时间"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (NSTimeInterval)currentMilliSecondTimeInterval &#123;</span><br><span class="line">    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];</span><br><span class="line">    [formatter <span class="string">setDateStyle:</span> NSDateFormatterMediumStyle];</span><br><span class="line">    [formatter <span class="string">setTimeStyle:</span> NSDateFormatterShortStyle];</span><br><span class="line">    [formatter <span class="string">setDateFormat:</span> @<span class="string">"YYYY-MM-dd HH:mm:ss SSS"</span>];</span><br><span class="line">    </span><br><span class="line">    NSTimeZone *timeZone = [NSTimeZone <span class="string">timeZoneWithName:</span> @<span class="string">"Asia/Shanghai"</span>];</span><br><span class="line">    [formatter <span class="string">setTimeZone:</span> timeZone];</span><br><span class="line">    NSDate *datenow = [NSDate date];</span><br><span class="line">    <span class="keyword">return</span> [datenow timeIntervalSince1970] * <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (NSTimeInterval)currentSecondTimeInterval &#123;</span><br><span class="line">    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];</span><br><span class="line">    [formatter <span class="string">setDateStyle:</span> NSDateFormatterMediumStyle];</span><br><span class="line">    [formatter <span class="string">setTimeStyle:</span> NSDateFormatterShortStyle];</span><br><span class="line">    [formatter <span class="string">setDateFormat:</span> @<span class="string">"YYYY-MM-dd HH:mm:ss SSS"</span>];</span><br><span class="line">    </span><br><span class="line">    NSTimeZone *timeZone = [NSTimeZone <span class="string">timeZoneWithName:</span> @<span class="string">"Asia/Shanghai"</span>];</span><br><span class="line">    [formatter <span class="string">setTimeZone:</span> timeZone];</span><br><span class="line">    NSDate *datenow = [NSDate date];</span><br><span class="line">    <span class="keyword">return</span> [datenow timeIntervalSince1970];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (NSTimeInterval)<span class="string">timeDifferenceOfMillisecondWithStartTimeInterval:</span>(NSTimeInterval)startTime <span class="string">endTimeInterval:</span>(NSTimeInterval)endTime &#123;</span><br><span class="line">    <span class="keyword">if</span> (startTime &lt; endTime) &#123;</span><br><span class="line">        <span class="keyword">return</span> (endTime - startTime) / <span class="number">1000</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (startTime - endTime) / <span class="number">1000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (NSTimeInterval)<span class="string">timeDifferenceOfSecondsWithStartTimeInterval:</span>(NSTimeInterval)startTime <span class="string">endTimeInterval:</span>(NSTimeInterval)endTime &#123;</span><br><span class="line">    <span class="keyword">if</span> (startTime &lt; endTime) &#123;</span><br><span class="line">        <span class="keyword">return</span> (endTime - startTime);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (startTime - endTime);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@end</span></span><br></pre></td></tr></table></figure><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>都是类方法，用的时候直接使用类名调用就可以了(实例：<code>[DateHandleUtils currentMilliSecondTimeInterval];</code>);</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-073af85178d8c456.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS开发技巧-不断更新中</title>
    <link href="https://wudan-ios.github.io/2019/01/24/%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/"/>
    <id>https://wudan-ios.github.io/2019/01/24/开发技巧/</id>
    <published>2019-01-24T06:23:46.585Z</published>
    <updated>2019-04-19T08:28:20.726Z</updated>
    
    <content type="html"><![CDATA[<p>1、PrefixHeader导入位置写法<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$(</span>SRCROOT)/<span class="variable">$(</span>PROJECT_NAME)/&lt;<span class="comment">#文件所在文件夹名称#&gt;/PrefixHeader.pch</span></span><br></pre></td></tr></table></figure></p><p>2、隐藏导航栏的两种方式<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一 《推荐》</span></span><br><span class="line"><span class="comment">//在需要隐藏的viewController中遵循&lt;UINavigationControllerDelegate&gt;</span></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line"> <span class="comment">// 设置导航控制器的代理为self</span></span><br><span class="line">    <span class="keyword">self</span>.navigationController.delegate = <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - UINavigationControllerDelegate</span></span><br><span class="line"><span class="comment">// 将要显示控制器</span></span><br><span class="line">- (<span class="keyword">void</span>)navigationController:(<span class="built_in">UINavigationController</span> *)navigationController willShowViewController:(<span class="built_in">UIViewController</span> *)viewController animated:(<span class="built_in">BOOL</span>)animated &#123;</span><br><span class="line">    <span class="comment">// 判断要显示的控制器是否是自己</span></span><br><span class="line">    <span class="built_in">BOOL</span> isShowHomePage = [viewController isKindOfClass:[<span class="keyword">self</span> <span class="keyword">class</span>]];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.navigationController setNavigationBarHidden:isShowHomePage animated:<span class="literal">YES</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式二</span></span><br><span class="line">- (<span class="keyword">void</span>)viewWillAppear:(<span class="built_in">BOOL</span>)animated &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewWillAppear:animated];</span><br><span class="line"></span><br><span class="line">    [<span class="keyword">self</span>.navigationController setNavigationBarHidden:<span class="literal">YES</span> animated:<span class="literal">YES</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewWillDisappear:(<span class="built_in">BOOL</span>)animated &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewWillDisappear:animated];</span><br><span class="line"></span><br><span class="line">    [<span class="keyword">self</span>.navigationController setNavigationBarHidden:<span class="literal">NO</span> animated:<span class="literal">YES</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3、TabBarItem要求只显示图片不显示文字<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// self 表示需要设置样式的控制器</span></span><br><span class="line">[<span class="keyword">self</span>.tabBarItem setImageInsets:<span class="built_in">UIEdgeInsetsMake</span>(<span class="number">6</span>, <span class="number">0</span>, <span class="number">-6</span>, <span class="number">0</span>)];</span><br></pre></td></tr></table></figure></p><p>4、TableView或CollectionView单选<br><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--步骤一、 声明一个全局变量--&gt;</span></span></span><br><span class="line"><span class="xml">@property (nonatomic, assign) NSInteger selectedIndex;</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--步骤二、TableView或CollectionView点击事件的方法中保存点击的index，并刷新--&gt;</span></span></span><br><span class="line"><span class="xml">self.selectedIndex = indexPath.row;</span></span><br><span class="line"><span class="xml">[collectionView reloadData];或[tableView reloadData];</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--步骤三、在cellForItemAtIndexPath或cellForRowAtIndexPath方法中判断是否是所保存的index--&gt;</span></span></span><br><span class="line"><span class="xml">if (self.selectedIndex == indexPath.row) </span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">    // 设置选中样式</span></span><br><span class="line"><span class="template-variable">&#125;</span><span class="xml"> else </span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">    // 设置成默认样式    </span></span><br><span class="line"><span class="template-variable">&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>5、怎么区分真机还是模拟器<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> TARGET_IPHONE_SIMULATOR  </span></span><br><span class="line">    NSLog(@<span class="string">"run on simulator"</span>);  </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIMULATOR_TEST</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span>  </span></span><br><span class="line"><span class="comment">//不定义SIMULATOR_TEST这个宏</span></span><br><span class="line">    NSLog(@<span class="string">"run on device"</span>);  </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p><p>6、if Debug<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG    </span></span><br><span class="line"><span class="comment">// do sth</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span>   </span></span><br><span class="line"><span class="comment">// do sth</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p><p>7、一键清理所有模拟器安装过的APP<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先关闭所有模拟器 在终端中输入下面命令即可</span></span><br><span class="line">xcrun simctl erase <span class="keyword">all</span></span><br></pre></td></tr></table></figure></p><p>8、SDWebImage清理缓存<br><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (void)didReceiveMemoryWarning &#123;</span><br><span class="line">    <span class="comment">[super didReceiveMemoryWarning]</span>;</span><br><span class="line">    <span class="comment">[<span class="comment">[<span class="comment">[SDWebImageManager sharedManager]</span> imageCache]</span> clearMemory]</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>9、UITableView的HeaderView下拉放大<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、View1:作为显示View</span><br><span class="line"><span class="number">2</span>、View2:作为tableView的tableHeaderView，并添加View1，View2的大小和View1大小相同.</span><br><span class="line"><span class="number">3</span>、在<span class="built_in">UIScrollViewDelegate</span>方法中进行设计</span><br><span class="line">- (<span class="keyword">void</span>)scrollViewDidScroll:(<span class="built_in">UIScrollView</span> *)scrollView &#123;</span><br><span class="line">    <span class="built_in">CGFloat</span> width = <span class="built_in">UIScreen</span>.mainScreen.bounds.size.width;</span><br><span class="line">    <span class="built_in">CGFloat</span> viewHeight = kScreenWidth * <span class="number">0.5</span>; <span class="comment">// View1的初始高度</span></span><br><span class="line">    <span class="built_in">CGFloat</span> yOffset = scrollView.contentOffset.y;</span><br><span class="line">    <span class="keyword">if</span> (yOffset &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">CGFloat</span> totalOffset = viewHeight + ABS(yOffset);</span><br><span class="line">        <span class="built_in">CGFloat</span> f = totalOffset / viewHeight;</span><br><span class="line">        <span class="keyword">self</span>.headerView.frame = <span class="built_in">CGRectMake</span>(- (width * f - width) / <span class="number">2</span>, yOffset, width * f, totalOffset);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>10、Masonry制作就宫格<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Objective-C ----&gt; Masonry</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 多视图布局</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param viewArray 视图数组</span></span><br><span class="line"><span class="comment"> @param column 列数</span></span><br><span class="line"><span class="comment"> @param tbSpeace 视图上下间距</span></span><br><span class="line"><span class="comment"> @param lrSpeace 视图左右间距</span></span><br><span class="line"><span class="comment"> @param topSpeace 和父视图上间距</span></span><br><span class="line"><span class="comment"> @param lrSuperViewSpeace 父视图左右间距</span></span><br><span class="line"><span class="comment"> @param superView 父视图</span></span><br><span class="line"><span class="comment"> @param viewHeight 视图高度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)wd_masLayoutSubViewsWithViewArray:(<span class="built_in">NSArray</span>&lt;<span class="built_in">UIView</span> *&gt; *)viewArray</span><br><span class="line">                              columnOfRow:(<span class="built_in">NSInteger</span>)column</span><br><span class="line">                    topBottomOfItemSpeace:(<span class="built_in">CGFloat</span>)tbSpeace</span><br><span class="line">                      leftRightItemSpeace:(<span class="built_in">CGFloat</span>)lrSpeace</span><br><span class="line">                     topOfSuperViewSpeace:(<span class="built_in">CGFloat</span>)topSpeace</span><br><span class="line">                 leftRightSuperViewSpeace:(<span class="built_in">CGFloat</span>)lrSuperViewSpeace</span><br><span class="line">                          addToSubperView:(<span class="built_in">UIView</span> *)superView</span><br><span class="line">                               viewHeight:(<span class="built_in">CGFloat</span>)viewHeight&#123;</span><br><span class="line">  </span><br><span class="line">                    <span class="built_in">CGFloat</span> viewWidth = superView.bounds.size.width;</span><br><span class="line">                    <span class="built_in">CGFloat</span> itemWidth = (viewWidth - lrSuperViewSpeace * <span class="number">2</span> - (column - <span class="number">1</span>) * lrSpeace) / column * <span class="number">1.0</span>f;</span><br><span class="line">                    <span class="built_in">CGFloat</span> itemHeight = viewHeight;</span><br><span class="line">                    <span class="built_in">UIView</span> *last = <span class="literal">nil</span>;</span><br><span class="line">  </span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; viewArray.count; i++) &#123;</span><br><span class="line">                        <span class="built_in">UIView</span> *item = viewArray[i];</span><br><span class="line">                        [superView addSubview:item];</span><br><span class="line"></span><br><span class="line">                        [item mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">                            make.width.mas_equalTo(itemWidth);</span><br><span class="line">                            make.height.mas_equalTo(itemHeight);</span><br><span class="line">                          </span><br><span class="line">                            <span class="built_in">CGFloat</span> top = topSpeace + (i / column) * (itemHeight + tbSpeace);</span><br><span class="line">                            make.top.mas_offset(top);</span><br><span class="line">                            <span class="keyword">if</span> (!last || (i % column) == <span class="number">0</span>) &#123;</span><br><span class="line">                                make.left.mas_offset(lrSuperViewSpeace);</span><br><span class="line">                            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                                make.left.mas_equalTo(last.mas_right).mas_offset(lrSpeace);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;];</span><br><span class="line">                      </span><br><span class="line">                        last = item;</span><br><span class="line">                    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>11、Snapkit制作九宫格<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Swift ----&gt; SnapKit</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// 多视图布局</span></span><br><span class="line">    <span class="comment">///</span></span><br><span class="line">    <span class="comment">/// - Parameters:</span></span><br><span class="line">    <span class="comment">///   - viewArray: 视图数组</span></span><br><span class="line">    <span class="comment">///   - columnOfRow: 列数</span></span><br><span class="line">    <span class="comment">///   - topBottomOfItemSpeace: 视图上下间距</span></span><br><span class="line">    <span class="comment">///   - leftRightItemSpeace: 视图左右间距</span></span><br><span class="line">    <span class="comment">///   - topOfSuperViewSpeace: 和父视图上间距</span></span><br><span class="line">    <span class="comment">///   - leftRightSuperViewSpeace: 父视图左右间距</span></span><br><span class="line">    <span class="comment">///   - addToSubperView: 父视图</span></span><br><span class="line">    <span class="comment">///   - viewHeight: 视图高度</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">wd_masLayoutSubViews</span><span class="params">(viewArray:Array&lt;UIView&gt;,</span></span></span><br><span class="line"><span class="function"><span class="params">                              columnOfRow:Int,</span></span></span><br><span class="line"><span class="function"><span class="params">                              topBottomOfItemSpeace:CGFloat,</span></span></span><br><span class="line"><span class="function"><span class="params">                              leftRightItemSpeace:CGFloat,</span></span></span><br><span class="line"><span class="function"><span class="params">                              topOfSuperViewSpeace:CGFloat,</span></span></span><br><span class="line"><span class="function"><span class="params">                              leftRightSuperViewSpeace:CGFloat,</span></span></span><br><span class="line"><span class="function"><span class="params">                              addToSubperView:UIView,</span></span></span><br><span class="line"><span class="function"><span class="params">                              viewHeight:CGFloat)</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> viewWidth = addToSubperView.bounds.width</span><br><span class="line">        <span class="keyword">let</span> tempW = leftRightSuperViewSpeace * <span class="number">2</span> + <span class="type">CGFloat</span>(columnOfRow - <span class="number">1</span>) * leftRightItemSpeace</span><br><span class="line">        <span class="keyword">let</span> itemWidth = (viewWidth - tempW) / <span class="type">CGFloat</span>(columnOfRow)</span><br><span class="line">        <span class="keyword">let</span> itemHeight = viewHeight</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">print</span>(leftRightSuperViewSpeace,leftRightItemSpeace,itemWidth)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> lastView:<span class="type">UIView</span>?</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (index) <span class="keyword">in</span> viewArray.enumerated() &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> item = viewArray[i]</span><br><span class="line">            addToSubperView.addSubview(item)</span><br><span class="line">            </span><br><span class="line">            item.snp.makeConstraints &#123; (make) <span class="keyword">in</span></span><br><span class="line">                make.width.equalTo(itemWidth)</span><br><span class="line">                make.height.equalTo(itemHeight)</span><br><span class="line">                <span class="keyword">let</span> top = topOfSuperViewSpeace + <span class="type">CGFloat</span>(i / columnOfRow) * (itemHeight + topBottomOfItemSpeace)</span><br><span class="line">                make.top.equalTo(top)</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> !(lastView != <span class="literal">nil</span>) || i%columnOfRow == <span class="number">0</span> &#123;</span><br><span class="line">                    make.<span class="keyword">left</span>.equalTo(leftRightSuperViewSpeace)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    make.<span class="keyword">left</span>.equalTo((lastView?.snp.<span class="keyword">right</span>)!).offset(leftRightItemSpeace)</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                lastView = item</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>12、沉浸式TableView(ScrollView、CollectionView)<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (@available(iOS <span class="number">11.0</span>, *)) &#123;</span><br><span class="line">    <span class="keyword">self</span>.tableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">self</span>.automaticallyAdjustsScrollViewInsets = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>13、通过身份证计算年龄<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** 通过身份证计算年龄 */</span></span><br><span class="line">- (<span class="built_in">NSString</span> *)calculationAgeWithBirthday: (<span class="built_in">NSString</span> *)birthday &#123;</span><br><span class="line">    <span class="built_in">NSCalendar</span> *calendar = [<span class="built_in">NSCalendar</span> currentCalendar];</span><br><span class="line">    <span class="built_in">NSDate</span> *nowDate = [<span class="built_in">NSDate</span> date];</span><br><span class="line">    <span class="built_in">NSString</span> *birth = birthday;</span><br><span class="line">    <span class="built_in">NSDateFormatter</span> *dateFormatter = [[<span class="built_in">NSDateFormatter</span> alloc]init];</span><br><span class="line">    [dateFormatter setDateFormat:<span class="string">@"yyyy-MM-dd"</span>];</span><br><span class="line">    <span class="built_in">NSDate</span> *birthDay = [dateFormatter dateFromString:birth];</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> unitFlags = <span class="built_in">NSCalendarUnitYear</span> | <span class="built_in">NSCalendarUnitMonth</span> | <span class="built_in">NSCalendarUnitDay</span>;</span><br><span class="line">    <span class="built_in">NSDateComponents</span> *date = [calendar components:unitFlags fromDate:birthDay toDate:nowDate options:<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> ([date year] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%ld岁"</span>, (<span class="keyword">long</span>)[date year]];</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>([date month] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%ld月"</span>, (<span class="keyword">long</span>)[date month]];</span><br><span class="line">    &#125;  <span class="keyword">else</span> <span class="keyword">if</span>([date day] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%ld天"</span>, (<span class="keyword">long</span>)[date day]];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">@"0天"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span> *)ageStrFromIdentityCard:(<span class="built_in">NSString</span> *)numberStr &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *dateSt;</span><br><span class="line">    <span class="built_in">NSMutableString</span> *dateS;</span><br><span class="line">    <span class="keyword">if</span> (numberStr.length &gt; <span class="number">15</span>) &#123;</span><br><span class="line">        dateSt = [numberStr substringWithRange:<span class="built_in">NSMakeRange</span>(<span class="number">6</span>, <span class="number">8</span>)];</span><br><span class="line">        dateS = [<span class="built_in">NSMutableString</span> stringWithFormat:<span class="string">@"%@"</span>, dateSt];</span><br><span class="line">        [dateS insertString:<span class="string">@"-"</span> atIndex:<span class="number">4</span>];</span><br><span class="line">        [dateS insertString:<span class="string">@"-"</span> atIndex:<span class="number">7</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 只考虑 19开头的15位的身份证号</span></span><br><span class="line">        dateSt = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"19%@"</span>,[numberStr substringWithRange:<span class="built_in">NSMakeRange</span>(<span class="number">6</span>, <span class="number">6</span>)]];</span><br><span class="line">        dateS = [<span class="built_in">NSMutableString</span> stringWithFormat:<span class="string">@"%@"</span>, dateSt];</span><br><span class="line">        [dateS insertString:<span class="string">@"-"</span> atIndex:<span class="number">4</span>];</span><br><span class="line">        [dateS insertString:<span class="string">@"-"</span> atIndex:<span class="number">7</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> calculationAgeWithBirthday:dateS];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>14、利用<code>runtime</code>自动归档<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入头文件</span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;objc/runtime.h&gt;</span></span></span><br><span class="line"><span class="comment">// 遵循协议</span></span><br><span class="line">&lt;<span class="built_in">NSCoding</span>&gt;</span><br><span class="line"><span class="comment">// 实现方法</span></span><br><span class="line">- (<span class="keyword">id</span>)initWithCoder:(<span class="built_in">NSCoder</span> *)aDecoder &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> init]) &#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> outCount;</span><br><span class="line">        Ivar * ivars = class_copyIvarList([<span class="keyword">self</span> <span class="keyword">class</span>], &amp;outCount);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; outCount; i ++) &#123;</span><br><span class="line">            Ivar ivar = ivars[i];</span><br><span class="line">            <span class="built_in">NSString</span> * key = [<span class="built_in">NSString</span> stringWithUTF8String:ivar_getName(ivar)];</span><br><span class="line">            [<span class="keyword">self</span> setValue:[aDecoder decodeObjectForKey:key] forKey:key];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)encodeWithCoder:(<span class="built_in">NSCoder</span> *)aCoder &#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> outCount;</span><br><span class="line">    Ivar * ivars = class_copyIvarList([<span class="keyword">self</span> <span class="keyword">class</span>], &amp;outCount);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; outCount; i ++) &#123;</span><br><span class="line">        Ivar ivar = ivars[i];</span><br><span class="line">        <span class="built_in">NSString</span> * key = [<span class="built_in">NSString</span> stringWithUTF8String:ivar_getName(ivar)];</span><br><span class="line">        [aCoder encodeObject:[<span class="keyword">self</span> valueForKey:key] forKey:key];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>15、优化Snipkit 没有<code>distributeViewsAlong</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、PrefixHeader导入位置写法&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AVPlayer封装</title>
    <link href="https://wudan-ios.github.io/2019/01/11/AVPlayer%E5%B0%81%E8%A3%85/"/>
    <id>https://wudan-ios.github.io/2019/01/11/AVPlayer封装/</id>
    <published>2019-01-11T07:41:50.499Z</published>
    <updated>2019-01-11T07:45:56.494Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/3334769-066df343391a04f5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="60920ddb4ccdca50074568b5ea54679f.jpg"></p><p>最近在写关于音视频播放的案例，所以就趁机会研究了一下AVPlayer的内容。我封装的目前只能播放网络音视频。还未添加缓存，以后找机会研究一下再更新。代码中提供了音视频的上一曲、下一曲、暂停、开始、停止、单曲播放、顺序播放、随机播放等功能。代码写的不好，仅供参考~</p><h3 id="代码接口文件"><a href="#代码接口文件" class="headerlink" title="代码接口文件"></a>代码接口文件</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;AVFoundation/AVFoundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_ASSUME_NONNULL_BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 当前播放器的播放形式</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, MediaPlayType) &#123;</span><br><span class="line">    MediaPlayTypeCycle,   <span class="comment">///&lt; 顺序</span></span><br><span class="line">    MediaPlayTypeSingle,  <span class="comment">///&lt; 单曲循环</span></span><br><span class="line">    MediaPlayTypeRandom   <span class="comment">///&lt; 随机播放</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当前播放器的播放状态</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, MediaPlayStatus) &#123;</span><br><span class="line">    MediaPlayStatusStop,        <span class="comment">///&lt; 停止播放</span></span><br><span class="line">    MediaPlayStatusPause,       <span class="comment">///&lt; 暂停播放</span></span><br><span class="line">    MediaPlayStatusPlaying      <span class="comment">///&lt; 正在播放</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 媒体加载状态</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, MediaLoadStatus) &#123;</span><br><span class="line">    MediaLoadStatusReadyToPlay,  <span class="comment">///&lt; 准备播放</span></span><br><span class="line">    MediaLoadStatusUnknown,      <span class="comment">///&lt; 未知</span></span><br><span class="line">    MediaPlayStatusFailed        <span class="comment">///&lt; 失败</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@class</span> <span class="title">MediaPlyerManager</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">MediaPlyerManagerDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"><span class="keyword">@optional</span></span><br><span class="line"><span class="comment">// 数据加载状态 根据状态进行播放或其他操作</span></span><br><span class="line">- (<span class="keyword">void</span>)MediaPlayer:(MediaPlyerManager *)playerManager playerItemStatus:(MediaLoadStatus)status;</span><br><span class="line"><span class="comment">// 缓冲进度</span></span><br><span class="line">- (<span class="keyword">void</span>)MediaPlayer:(MediaPlyerManager *)playerManager netBufferValue:(<span class="built_in">CGFloat</span>)value;</span><br><span class="line"><span class="comment">// 缓冲是否足够播放</span></span><br><span class="line">- (<span class="keyword">void</span>)MediaPlayer:(MediaPlyerManager *)playerManager bufferHasEnough:(<span class="built_in">BOOL</span>)enough;</span><br><span class="line"><span class="comment">// 当前播放的时间</span></span><br><span class="line">- (<span class="keyword">void</span>)MediaPlayer:(MediaPlyerManager *)playerManager currentPlayTime:(<span class="built_in">NSString</span> *)time currentPlayTimeValue:(<span class="built_in">CGFloat</span>)value;</span><br><span class="line"><span class="comment">// 播放总时间</span></span><br><span class="line">- (<span class="keyword">void</span>)MediaPlayer:(MediaPlyerManager *)playerManager mediaEndTime:(<span class="built_in">NSString</span> *)time mediaEndTimeValue:(<span class="built_in">CGFloat</span>)value;</span><br><span class="line"><span class="comment">// 播放结束</span></span><br><span class="line">- (<span class="keyword">void</span>)MediaPlayerCurrentMediaPlayFinish:(MediaPlyerManager *)playerManager;</span><br><span class="line"><span class="comment">// 播放状态</span></span><br><span class="line">- (<span class="keyword">void</span>)MediaPlayer:(MediaPlyerManager *)playerManager playeStatus:(MediaPlayStatus)status;</span><br><span class="line"><span class="comment">// 获取数据切换时获取正在播放的URL和当前的index</span></span><br><span class="line">- (<span class="keyword">void</span>)MediaPlayer:(MediaPlyerManager *)playerManager currentUrl:(<span class="built_in">NSString</span> *)url currentIndex:(<span class="built_in">NSInteger</span>)index;</span><br><span class="line"><span class="comment">// 为了配合手机后台播放 实时获取播放的进度，总的时间，当前的index&lt;通过index获取图片等信息&gt;</span></span><br><span class="line">- (<span class="keyword">void</span>)MediaPlayer:(MediaPlyerManager *)playerManager currentProgressValue:(<span class="built_in">CGFloat</span>)value totalValue:(<span class="built_in">CGFloat</span>)totalValue currentIndex:(<span class="built_in">NSInteger</span>)index;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> MediaPlyerManager *(^playerCurrentTime)(<span class="built_in">NSString</span> *time);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">MediaPlyerManager</span> : <span class="title">NSObject</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) <span class="built_in">AVPlayer</span>                  *mediaPlayer;          <span class="comment">///&lt; 播放器</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) <span class="built_in">AVPlayerItem</span>              *meidaPlayerItem;      <span class="comment">///&lt; 播放器的CurrentItem</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) <span class="built_in">NSMutableArray</span>&lt;<span class="built_in">NSString</span>*&gt; *dataUrlArray;         <span class="comment">///&lt; 正在播放的列表数据</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>, <span class="keyword">readonly</span>) MediaPlayType              playType;             <span class="comment">///&lt; 当前播放类型</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>, <span class="keyword">readonly</span>) MediaPlayStatus            playStatus;           <span class="comment">///&lt; 当前播放状态</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>, <span class="keyword">readonly</span>) <span class="built_in">NSInteger</span>                  currentIndex;         <span class="comment">///&lt; 当前播放的索引</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>, <span class="keyword">readonly</span>) <span class="built_in">BOOL</span>                       isPlaying;            <span class="comment">///&lt; 是否在播放</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>, <span class="keyword">readonly</span>) <span class="built_in">CGFloat</span>                    curentPlayTimeValue;  <span class="comment">///&lt; 当前播放时间值</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">readonly</span>) <span class="built_in">NSString</span>                    *curentPlayTime;       <span class="comment">///&lt; 当前播放时间</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>, <span class="keyword">readonly</span>) <span class="built_in">CGFloat</span>                    endPlayTimeValue;     <span class="comment">///&lt; 当前播放时间值</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">readonly</span>) <span class="built_in">NSString</span>                    *endPlayTime;          <span class="comment">///&lt; 当前播放时间</span></span><br><span class="line">+ (<span class="keyword">instancetype</span>)defaultManager;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 列表播放 ⚠️&lt;默认不自动播放&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param urls 文件路径数组</span></span><br><span class="line"><span class="comment"> @param delegate 回调代理</span></span><br><span class="line"><span class="comment"> @return MediaPlyerManager</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (MediaPlyerManager *)playerWithUrls:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)urls actionWithDelegate:(<span class="keyword">id</span>&lt;MediaPlyerManagerDelegate&gt;)delegate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 单个音视频播放 ⚠️&lt;默认不自动播放&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param url 文件路径</span></span><br><span class="line"><span class="comment"> @param delegate 回调代理</span></span><br><span class="line"><span class="comment"> @return MediaPlyerManager</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (MediaPlyerManager *)playerWithUrl:(<span class="built_in">NSString</span> *)url actionWithDelegate:(<span class="keyword">id</span>&lt;MediaPlyerManagerDelegate&gt;)delegate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    开始播放</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)play;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    暂停播放</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)pause;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    停止播放</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)stop;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    下一曲</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)next;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    上一曲</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)previous;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 指定进度开始播放</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param progress 进度百分比</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)setupPlayerSeekToProgress:(<span class="built_in">CGFloat</span>)progress;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 制定播放类型</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param type 类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)setupMediaPlayerType:(MediaPlayType)type;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 指定播放的index</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param index 索引</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)setupPlayerIndex:(<span class="built_in">NSInteger</span>)index;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 添加数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param files 文件数组</span></span><br><span class="line"><span class="comment"> @param index 索引</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)insertMediaFile:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)files atIndex:(<span class="built_in">NSInteger</span>)index;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    移除全部数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)removeAllFiles;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 移除索引中的单个数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param index 索引</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)removeObjectAtIndex:(<span class="built_in">NSInteger</span>)index;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 设置锁屏样式</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param coverImage 专辑图片</span></span><br><span class="line"><span class="comment"> @param size 显示大小</span></span><br><span class="line"><span class="comment"> @param title 标题</span></span><br><span class="line"><span class="comment"> @param author 专辑作者</span></span><br><span class="line"><span class="comment"> @param album 专辑名称</span></span><br><span class="line"><span class="comment"> @param currentTime 当前播放时间</span></span><br><span class="line"><span class="comment"> @param duration 播放总时长</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)setupLockScreenPlayInfo:(<span class="built_in">UIImage</span> *)coverImage</span><br><span class="line">                      imageSize:(<span class="built_in">CGSize</span>)size</span><br><span class="line">                          title:(<span class="built_in">NSString</span> *)title</span><br><span class="line">                         ahthor:(<span class="built_in">NSString</span> *)author</span><br><span class="line">                         album:(<span class="built_in">NSString</span> *)album</span><br><span class="line">                currentPlayTime:(<span class="built_in">CGFloat</span>)currentTime</span><br><span class="line">                       duration:(<span class="built_in">CGFloat</span>)duration;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_ASSUME_NONNULL_END</span></span><br></pre></td></tr></table></figure><h3 id="代码实现文件"><a href="#代码实现文件" class="headerlink" title="代码实现文件"></a>代码实现文件</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"MediaPlyerManager.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;MediaPlayer/MediaPlayer.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">MediaPlyerManager</span> ()</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readwrite</span>) <span class="built_in">NSMutableArray</span>&lt;<span class="built_in">NSString</span> *&gt; *dataUrlArray;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readwrite</span>) <span class="built_in">AVPlayer</span>                  *mediaPlayer;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>, <span class="keyword">readwrite</span>) <span class="built_in">BOOL</span>                      isPlaying;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readwrite</span>) <span class="built_in">AVPlayerItem</span>              *meidaPlayerItem;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>, <span class="keyword">readwrite</span>) MediaPlayType             playeType;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>, <span class="keyword">readwrite</span>) <span class="built_in">NSInteger</span>                 currentIndex;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>, <span class="keyword">readwrite</span>) MediaPlayStatus           playStatus;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>, <span class="keyword">readwrite</span>) <span class="built_in">CGFloat</span>                   curentPlayTimeValue;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">readwrite</span>  ) <span class="built_in">NSString</span>                  *curentPlayTime;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>, <span class="keyword">readwrite</span>) <span class="built_in">CGFloat</span>                   endPlayTimeValue;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">readwrite</span>  ) <span class="built_in">NSString</span>                  *endPlayTime;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>             ) <span class="keyword">id</span> &lt;MediaPlyerManagerDelegate&gt; delegate;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">MediaPlyerManager</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">instancetype</span>)defaultManager &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</span><br><span class="line">    <span class="keyword">static</span> MediaPlyerManager *manger;</span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</span><br><span class="line">        manger = [[MediaPlyerManager alloc] init];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> manger;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 初始化</span></span><br><span class="line"></span><br><span class="line">- (MediaPlyerManager *)playerWithUrl:(<span class="built_in">NSString</span> *)url actionWithDelegate:(<span class="keyword">id</span>&lt;MediaPlyerManagerDelegate&gt;)delegate &#123;</span><br><span class="line">    [<span class="keyword">self</span> playerWithUrls:@[url] actionWithDelegate:delegate];</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (MediaPlyerManager *)playerWithUrls:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)urls actionWithDelegate:(<span class="keyword">id</span>&lt;MediaPlyerManagerDelegate&gt;)delegate &#123;</span><br><span class="line">    <span class="keyword">self</span>.delegate         = delegate;</span><br><span class="line">    <span class="keyword">self</span>.currentIndex     = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">self</span>.dataUrlArray     = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">    <span class="built_in">NSMutableArray</span> *array = [<span class="built_in">NSMutableArray</span> arrayWithCapacity:urls.count];</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *urlStr <span class="keyword">in</span> urls) &#123;</span><br><span class="line">        [array addObject:[<span class="keyword">self</span> createPlayerItemWithUrl:urlStr]];</span><br><span class="line">        [<span class="keyword">self</span>.dataUrlArray addObject:urlStr];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">self</span>.playeType = MediaPlayTypeCycle;</span><br><span class="line">    <span class="keyword">self</span>.mediaPlayer = [[<span class="built_in">AVPlayer</span> alloc] initWithPlayerItem:array.firstObject];</span><br><span class="line">    <span class="keyword">self</span>.meidaPlayerItem = <span class="keyword">self</span>.mediaPlayer.currentItem;</span><br><span class="line">    [<span class="keyword">self</span> getCurrentIndex:<span class="keyword">self</span>.currentIndex];</span><br><span class="line">    [<span class="keyword">self</span> addObserver];</span><br><span class="line">    </span><br><span class="line">    __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) weakself = <span class="keyword">self</span>;</span><br><span class="line">    [<span class="keyword">self</span>.mediaPlayer addPeriodicTimeObserverForInterval:<span class="built_in">CMTimeMake</span>(<span class="number">1</span>, <span class="number">1</span>) queue:<span class="literal">NULL</span> usingBlock:^(<span class="built_in">CMTime</span> time) &#123;</span><br><span class="line">        <span class="built_in">NSString</span> *currentString = [weakself getStringFromCMTime:time];</span><br><span class="line">        weakself.curentPlayTime = currentString;</span><br><span class="line">        weakself.curentPlayTimeValue = (<span class="built_in">CGFloat</span>)time.value/time.timescale;        </span><br><span class="line"><span class="meta">#pragma mark - 获取当前播放时间</span></span><br><span class="line">        <span class="keyword">if</span> (weakself.delegate &amp;&amp; [weakself.delegate respondsToSelector:<span class="keyword">@selector</span>(MediaPlayer:currentPlayTime:currentPlayTimeValue:)]) &#123;</span><br><span class="line">            [weakself.delegate MediaPlayer:weakself currentPlayTime:currentString currentPlayTimeValue:(<span class="built_in">CGFloat</span>)time.value/time.timescale];</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#pragma mark - 实时获取播放信息</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(MediaPlayer:currentProgressValue:totalValue:currentIndex:)]) &#123;</span><br><span class="line">            [weakself.delegate MediaPlayer:weakself currentProgressValue:weakself.curentPlayTimeValue totalValue:weakself.endPlayTimeValue currentIndex:weakself.currentIndex];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 播放结束</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)playFinish:(<span class="built_in">NSNotification</span> *)notification &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(MediaPlayerCurrentMediaPlayFinish:)]) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.delegate MediaPlayerCurrentMediaPlayFinish:<span class="keyword">self</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.playeType == MediaPlayTypeSingle) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.mediaPlayer seekToTime:kCMTimeZero];</span><br><span class="line">        [<span class="keyword">self</span> play];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.currentIndex &lt; <span class="keyword">self</span>.dataUrlArray.count - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">self</span>.currentIndex += <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">self</span>.currentIndex = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        [<span class="keyword">self</span>.mediaPlayer replaceCurrentItemWithPlayerItem:[<span class="keyword">self</span> createPlayerItemWithUrl:<span class="keyword">self</span>.dataUrlArray[<span class="keyword">self</span>.currentIndex]]];</span><br><span class="line">        <span class="keyword">self</span>.meidaPlayerItem = <span class="keyword">self</span>.mediaPlayer.currentItem;</span><br><span class="line">        [<span class="keyword">self</span> getCurrentIndex:<span class="keyword">self</span>.currentIndex];</span><br><span class="line">        [<span class="keyword">self</span> play];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - KVO</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)observeValueForKeyPath:(<span class="built_in">NSString</span> *)keyPath</span><br><span class="line">                      ofObject:(<span class="keyword">id</span>)object</span><br><span class="line">                        change:(<span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSKeyValueChangeKey</span>,<span class="keyword">id</span>&gt; *)change</span><br><span class="line">                       context:(<span class="keyword">void</span> *)context &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">AVPlayerItem</span> *playerItem = object;</span><br><span class="line">    <span class="keyword">if</span> ([keyPath isEqualToString:<span class="string">@"status"</span>]) &#123;</span><br><span class="line">        MediaLoadStatus status = [change[<span class="string">@"new"</span>] integerValue];</span><br><span class="line"><span class="meta">#pragma mark - 获取媒体加载状态</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(MediaPlayer:playerItemStatus:)]) &#123;</span><br><span class="line">            [<span class="keyword">self</span>.delegate MediaPlayer:<span class="keyword">self</span> playerItemStatus:status];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([keyPath isEqualToString:<span class="string">@"loadedTimeRanges"</span>]) &#123;</span><br><span class="line">        <span class="built_in">NSArray</span> * timeRanges         = playerItem.loadedTimeRanges;</span><br><span class="line">        <span class="built_in">CMTimeRange</span> timeRange        = [timeRanges.firstObject <span class="built_in">CMTimeRangeValue</span>];</span><br><span class="line">        <span class="built_in">NSTimeInterval</span> totalLoadTime = <span class="built_in">CMTimeGetSeconds</span>(timeRange.start) \</span><br><span class="line">                                                + <span class="built_in">CMTimeGetSeconds</span>(timeRange.duration);</span><br><span class="line">        <span class="built_in">NSTimeInterval</span> duration      = <span class="built_in">CMTimeGetSeconds</span>(playerItem.duration);</span><br><span class="line">        <span class="built_in">NSTimeInterval</span> scale         = totalLoadTime/duration;</span><br><span class="line">        </span><br><span class="line"><span class="meta">#pragma mark - 获取媒体总时间</span></span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">CGFloat</span>)duration/scale &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">self</span>.endPlayTime = [<span class="keyword">self</span> getStringFromCMTime:playerItem.duration];</span><br><span class="line">            <span class="keyword">self</span>.endPlayTimeValue = (<span class="built_in">CGFloat</span>)duration/scale;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(MediaPlayer:mediaEndTime:mediaEndTimeValue:)]) &#123;</span><br><span class="line">                [<span class="keyword">self</span>.delegate MediaPlayer:<span class="keyword">self</span> mediaEndTime:[<span class="keyword">self</span> getStringFromCMTime:playerItem.duration] mediaEndTimeValue:(<span class="built_in">CGFloat</span>)duration/scale];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="meta">#pragma mark - 缓冲百分比</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(MediaPlayer:netBufferValue:)]) &#123;</span><br><span class="line">            [<span class="keyword">self</span>.delegate MediaPlayer:<span class="keyword">self</span> netBufferValue:scale];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([keyPath isEqualToString:<span class="string">@"playbackBufferEmpty"</span>]) &#123;</span><br><span class="line">        </span><br><span class="line"><span class="meta">#pragma mark - 缓冲不足够播放</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(MediaPlayer:bufferHasEnough:)]) &#123;</span><br><span class="line">            [<span class="keyword">self</span>.delegate MediaPlayer:<span class="keyword">self</span> bufferHasEnough:<span class="literal">false</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([keyPath isEqualToString:<span class="string">@"playbackLikelyToKeepUp"</span>]) &#123;</span><br><span class="line">        </span><br><span class="line"><span class="meta">#pragma mark - 缓冲足够播放</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(MediaPlayer:bufferHasEnough:)]) &#123;</span><br><span class="line">            [<span class="keyword">self</span>.delegate MediaPlayer:<span class="keyword">self</span> bufferHasEnough:<span class="literal">true</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 开始播放</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)play &#123;</span><br><span class="line">    [<span class="keyword">self</span>.mediaPlayer play];</span><br><span class="line">    [<span class="keyword">self</span> getPlayStatus:MediaPlayStatusPlaying];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 暂停播放</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)pause &#123;</span><br><span class="line">    [<span class="keyword">self</span>.mediaPlayer pause];</span><br><span class="line">    [<span class="keyword">self</span> getPlayStatus:MediaPlayStatusPause];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 停止播放</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)stop &#123;</span><br><span class="line">    [<span class="keyword">self</span>.mediaPlayer replaceCurrentItemWithPlayerItem:<span class="literal">nil</span>];</span><br><span class="line">    [<span class="keyword">self</span> getPlayStatus:MediaPlayStatusStop];</span><br><span class="line">    [<span class="keyword">self</span> removeObserver];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 下一个</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)next &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.playeType == MediaPlayTypeRandom) &#123;</span><br><span class="line">        <span class="keyword">self</span>.currentIndex = (<span class="built_in">NSInteger</span>)arc4random_uniform((int32_t)(<span class="keyword">self</span>.dataUrlArray.count - <span class="number">1</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.currentIndex == <span class="keyword">self</span>.dataUrlArray.count - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">self</span>.currentIndex = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">self</span>.currentIndex += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="keyword">self</span>.mediaPlayer replaceCurrentItemWithPlayerItem:[<span class="keyword">self</span> createPlayerItemWithUrl:<span class="keyword">self</span>.dataUrlArray[<span class="keyword">self</span>.currentIndex]]];</span><br><span class="line">    <span class="keyword">self</span>.meidaPlayerItem = <span class="keyword">self</span>.mediaPlayer.currentItem;</span><br><span class="line">    [<span class="keyword">self</span> getCurrentIndex:<span class="keyword">self</span>.currentIndex];</span><br><span class="line">    [<span class="keyword">self</span> addObserver];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 上一个</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)previous &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.playeType == MediaPlayTypeRandom) &#123;</span><br><span class="line">        <span class="keyword">self</span>.currentIndex = (<span class="built_in">NSInteger</span>)arc4random_uniform((int32_t)(<span class="keyword">self</span>.dataUrlArray.count - <span class="number">1</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.currentIndex == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">self</span>.currentIndex = <span class="keyword">self</span>.dataUrlArray.count - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">self</span>.currentIndex -= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="keyword">self</span>.mediaPlayer replaceCurrentItemWithPlayerItem:[<span class="keyword">self</span> createPlayerItemWithUrl:<span class="keyword">self</span>.dataUrlArray[<span class="keyword">self</span>.currentIndex]]];</span><br><span class="line">    <span class="keyword">self</span>.meidaPlayerItem = <span class="keyword">self</span>.mediaPlayer.currentItem;</span><br><span class="line">    [<span class="keyword">self</span> getCurrentIndex:<span class="keyword">self</span>.currentIndex];</span><br><span class="line">    [<span class="keyword">self</span> addObserver];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 播放状态</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)getPlayStatus:(MediaPlayStatus)status &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(MediaPlayer:playeStatus:)]) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.delegate MediaPlayer:<span class="keyword">self</span> playeStatus:status];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">self</span>.playStatus = status;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (status == MediaPlayStatusPlaying) &#123;</span><br><span class="line">        <span class="keyword">self</span>.isPlaying = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.isPlaying = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 根据index进行回调</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)getCurrentIndex:(<span class="built_in">NSInteger</span>)index &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(MediaPlayer:currentUrl:currentIndex:)]) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.delegate MediaPlayer:<span class="keyword">self</span> currentUrl:<span class="keyword">self</span>.dataUrlArray[index] currentIndex:index];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 设置播放进度百分比</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setupPlayerSeekToProgress:(<span class="built_in">CGFloat</span>)progress &#123;</span><br><span class="line">    <span class="keyword">float</span> timeValue = progress * <span class="built_in">CMTimeGetSeconds</span>(<span class="keyword">self</span>.mediaPlayer.currentItem.duration);</span><br><span class="line">    [<span class="keyword">self</span>.mediaPlayer seekToTime:<span class="built_in">CMTimeMake</span>(timeValue, <span class="number">1</span>)];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 设置播放形式</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setupMediaPlayerType:(MediaPlayType)type &#123;</span><br><span class="line">    <span class="keyword">self</span>.playeType = type;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 播放指定index的媒体</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setupPlayerIndex:(<span class="built_in">NSInteger</span>)index &#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt; (<span class="keyword">self</span>.dataUrlArray.count - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">@throw</span> [<span class="built_in">NSException</span> exceptionWithName:<span class="string">@"越界错误"</span> reason:<span class="string">@"index 不能超出URL数组的长度"</span> userInfo:<span class="literal">nil</span>];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">self</span>.currentIndex = index;</span><br><span class="line">    [<span class="keyword">self</span>.mediaPlayer replaceCurrentItemWithPlayerItem:[<span class="keyword">self</span> createPlayerItemWithUrl:<span class="keyword">self</span>.dataUrlArray[<span class="keyword">self</span>.currentIndex]]];</span><br><span class="line">    <span class="keyword">self</span>.meidaPlayerItem = <span class="keyword">self</span>.mediaPlayer.currentItem;</span><br><span class="line">    [<span class="keyword">self</span> getCurrentIndex:<span class="keyword">self</span>.currentIndex];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 插入数据</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)insertMediaFile:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)files atIndex:(<span class="built_in">NSInteger</span>)index &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *urlStr <span class="keyword">in</span> files) &#123;</span><br><span class="line">        <span class="built_in">NSInteger</span> i = [files indexOfObject:urlStr];</span><br><span class="line">        [<span class="keyword">self</span>.dataUrlArray insertObject:urlStr atIndex:index + i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="keyword">self</span>.currentIndex) &#123;</span><br><span class="line">        <span class="keyword">self</span>.currentIndex += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 删除数据</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)removeAllFiles &#123;</span><br><span class="line">    [<span class="keyword">self</span> stop];</span><br><span class="line">    [<span class="keyword">self</span>.dataUrlArray removeAllObjects];</span><br><span class="line">    <span class="keyword">self</span>.dataUrlArray = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">    <span class="keyword">self</span>.currentIndex = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)removeObjectAtIndex:(<span class="built_in">NSInteger</span>)index &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.dataUrlArray.count == <span class="number">1</span>) &#123;</span><br><span class="line">        [<span class="keyword">self</span> removeAllFiles];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        [<span class="keyword">self</span>.dataUrlArray removeObjectAtIndex:index];</span><br><span class="line">        <span class="keyword">if</span> (index == <span class="keyword">self</span>.currentIndex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (index == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">self</span>.currentIndex = <span class="number">0</span>;</span><br><span class="line">                [<span class="keyword">self</span> next];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">self</span>.currentIndex -= <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">self</span>.currentIndex &gt; index) &#123;</span><br><span class="line">                <span class="keyword">self</span>.currentIndex -= <span class="number">1</span>;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - Utils</span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span> *)getStringFromCMTime:(<span class="built_in">CMTime</span>)time &#123;</span><br><span class="line">    <span class="keyword">float</span> currentTimeValue       = (<span class="built_in">CGFloat</span>)time.value/time.timescale;</span><br><span class="line">    <span class="built_in">NSDate</span> * currentDate         = [<span class="built_in">NSDate</span> dateWithTimeIntervalSince1970:currentTimeValue];</span><br><span class="line">    <span class="built_in">NSCalendar</span> *calendar         = [[<span class="built_in">NSCalendar</span> alloc] initWithCalendarIdentifier:<span class="built_in">NSCalendarIdentifierGregorian</span>];</span><br><span class="line">    <span class="built_in">NSInteger</span> unitFlags          = <span class="built_in">NSCalendarUnitHour</span> | <span class="built_in">NSCalendarUnitMinute</span> | <span class="built_in">NSCalendarUnitSecond</span>;</span><br><span class="line">    <span class="built_in">NSDateComponents</span> *components = [calendar components:unitFlags fromDate:currentDate];</span><br><span class="line">    <span class="keyword">if</span> (currentTimeValue &gt;= <span class="number">3600</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%02ld:%02ld:%02ld"</span>, (<span class="keyword">long</span>)components.hour, (<span class="keyword">long</span>)components.minute, (<span class="keyword">long</span>)components.second];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%02ld:%02ld"</span>, (<span class="keyword">long</span>)components.minute, (<span class="keyword">long</span>)components.second];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)addObserver &#123;</span><br><span class="line">    <span class="comment">// 监控状态属性</span></span><br><span class="line">    [<span class="keyword">self</span>.meidaPlayerItem addObserver:<span class="keyword">self</span></span><br><span class="line">                           forKeyPath:<span class="string">@"status"</span></span><br><span class="line">                              options:(<span class="built_in">NSKeyValueObservingOptionOld</span>|<span class="built_in">NSKeyValueObservingOptionNew</span>)</span><br><span class="line">                              context:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 监控缓冲加载情况属性</span></span><br><span class="line">    [<span class="keyword">self</span>.meidaPlayerItem addObserver:<span class="keyword">self</span></span><br><span class="line">                           forKeyPath:<span class="string">@"loadedTimeRanges"</span></span><br><span class="line">                              options:(<span class="built_in">NSKeyValueObservingOptionOld</span>|<span class="built_in">NSKeyValueObservingOptionNew</span>)</span><br><span class="line">                              context:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 监听缓冲不足够播放</span></span><br><span class="line">    [<span class="keyword">self</span>.meidaPlayerItem addObserver:<span class="keyword">self</span></span><br><span class="line">                           forKeyPath:<span class="string">@"playbackBufferEmpty"</span></span><br><span class="line">                              options:<span class="built_in">NSKeyValueObservingOptionNew</span></span><br><span class="line">                              context:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 监听缓冲足够播放</span></span><br><span class="line">    [<span class="keyword">self</span>.meidaPlayerItem addObserver:<span class="keyword">self</span></span><br><span class="line">                           forKeyPath:<span class="string">@"playbackLikelyToKeepUp"</span></span><br><span class="line">                              options:<span class="built_in">NSKeyValueObservingOptionNew</span></span><br><span class="line">                              context:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取是否播放结束</span></span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span></span><br><span class="line">                                             selector:<span class="keyword">@selector</span>(playFinish:)</span><br><span class="line">                                                 name:<span class="built_in">AVPlayerItemDidPlayToEndTimeNotification</span></span><br><span class="line">                                               object:<span class="keyword">self</span>.meidaPlayerItem];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)removeObserver &#123;</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:<span class="keyword">self</span>];</span><br><span class="line">    <span class="keyword">@try</span> &#123;</span><br><span class="line">        [<span class="keyword">self</span>.meidaPlayerItem removeObserver:<span class="keyword">self</span> forKeyPath:<span class="string">@"loadedTimeRanges"</span>];</span><br><span class="line">        [<span class="keyword">self</span>.meidaPlayerItem removeObserver:<span class="keyword">self</span> forKeyPath:<span class="string">@"playbackBufferEmpty"</span>];</span><br><span class="line">        [<span class="keyword">self</span>.meidaPlayerItem removeObserver:<span class="keyword">self</span> forKeyPath:<span class="string">@"playbackLikelyToKeepUp"</span>];</span><br><span class="line">        [<span class="keyword">self</span>.meidaPlayerItem removeObserver:<span class="keyword">self</span> forKeyPath:<span class="string">@"status"</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">@catch</span>(<span class="built_in">NSException</span> *exception) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, exception);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 设置锁屏样式</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setupLockScreenPlayInfo:(<span class="built_in">UIImage</span> *)coverImage</span><br><span class="line">                      imageSize:(<span class="built_in">CGSize</span>)size</span><br><span class="line">                          title:(<span class="built_in">NSString</span> *)title</span><br><span class="line">                         ahthor:(<span class="built_in">NSString</span> *)author</span><br><span class="line">                          album:(<span class="built_in">NSString</span> *)album</span><br><span class="line">                currentPlayTime:(<span class="built_in">CGFloat</span>)currentTime</span><br><span class="line">                       duration:(<span class="built_in">CGFloat</span>)duration &#123;</span><br><span class="line">    </span><br><span class="line">    Class playingInfoCenter = <span class="built_in">NSClassFromString</span>(<span class="string">@"MPNowPlayingInfoCenter"</span>);</span><br><span class="line">    <span class="keyword">if</span> (playingInfoCenter) &#123;</span><br><span class="line">        <span class="built_in">NSMutableDictionary</span> *songInfo = [[<span class="built_in">NSMutableDictionary</span> alloc] init];</span><br><span class="line">        <span class="built_in">MPMediaItemArtwork</span> *albumArt = [[<span class="built_in">MPMediaItemArtwork</span> alloc] initWithBoundsSize:size requestHandler:^<span class="built_in">UIImage</span> * _Nonnull(<span class="built_in">CGSize</span> size) &#123;</span><br><span class="line">            <span class="keyword">return</span> coverImage;</span><br><span class="line">        &#125;];</span><br><span class="line">        [songInfo setObject:title forKey:<span class="built_in">MPMediaItemPropertyTitle</span>];</span><br><span class="line">        [songInfo setObject:author forKey:<span class="built_in">MPMediaItemPropertyArtist</span>];</span><br><span class="line">        [songInfo setObject:album forKey:<span class="built_in">MPMediaItemPropertyAlbumTitle</span>];</span><br><span class="line">        [songInfo setObject:albumArt forKey:<span class="built_in">MPMediaItemPropertyArtwork</span>];</span><br><span class="line">        [songInfo setObject:[<span class="built_in">NSNumber</span> numberWithDouble:currentTime] forKey:<span class="built_in">MPNowPlayingInfoPropertyElapsedPlaybackTime</span>];</span><br><span class="line">        [songInfo setObject:[<span class="built_in">NSNumber</span> numberWithDouble:duration] forKey:<span class="built_in">MPMediaItemPropertyPlaybackDuration</span>];</span><br><span class="line">        [[<span class="built_in">MPNowPlayingInfoCenter</span> defaultCenter] setNowPlayingInfo:songInfo];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">AVPlayerItem</span> *)createPlayerItemWithUrl:(<span class="built_in">NSString</span> *)url &#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">AVPlayerItem</span> playerItemWithURL:[<span class="built_in">NSURL</span> URLWithString:url]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h3 id="提问"><a href="#提问" class="headerlink" title="提问"></a>提问</h3><p>本来相同使用AVQueuePlayer来进行列表播放的，但是当做单曲循环的时候遇到问题：通过通知监听播放完成，在通知的方法里进行具体操作，但是设置无效，直接播放的还是下一个文件。如果有人知道如何解决，帮忙回复一下。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3334769-066df343391a04f5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>RxSwift学习日常</title>
    <link href="https://wudan-ios.github.io/2019/01/03/RxSwift%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%B8%B8%EF%BC%88%E5%9F%BA%E7%A1%80%E4%BB%8B%E7%BB%8D%EF%BC%89/"/>
    <id>https://wudan-ios.github.io/2019/01/03/RxSwift学习日常（基础介绍）/</id>
    <published>2019-01-03T01:52:22.730Z</published>
    <updated>2019-01-03T01:52:23.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Observable-介绍"><a href="#Observable-介绍" class="headerlink" title="Observable 介绍"></a>Observable 介绍</h1><h2 id="Observable"><a href="#Observable" class="headerlink" title="Observable"></a>Observable<t></t></h2><ul><li>Observable<t> 这个类就是 Rx 框架的基础，我们可以称它为可观察序列。它的作用就是可以异步地产生一系列的 Event（事件），即一个 Observable<t> 对象会随着时间推移不定期地发出 event(element : T) 这样一个东西。</t></t></li><li>而且这些 Event 还可以携带数据，它的泛型 <t> 就是用来指定这个 Event 携带的数据的类型。</t></li><li>有了可观察序列，我们还需要有一个 Observer（订阅者）来订阅它，这样这个订阅者才能收到 Observable<t> 不时发出的 Event。<h2 id="Event"><a href="#Event" class="headerlink" title="Event"></a>Event</h2>查看 RxSwift 源码可以发现，事件 Event 的定义如下：</t></li></ul><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">enum</span> <span class="title">Event</span>&lt;<span class="title">Element</span>&gt; &#123;</span></span><br><span class="line">    /<span class="regexp">//</span> Next element is produced.</span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">next</span>(Element)</span><br><span class="line"> </span><br><span class="line">    /<span class="regexp">//</span> Sequence terminated <span class="keyword">with</span> an error.</span><br><span class="line">    <span class="keyword">case</span> error(Swift.Error)</span><br><span class="line"> </span><br><span class="line">    /<span class="regexp">//</span> Sequence completed successfully.</span><br><span class="line">    <span class="keyword">case</span> completed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到 Event 就是一个枚举，也就是说一个 Observable 是可以发出 3 种不同类型的 Event 事件：</p><ul><li>next：next 事件就是那个可以携带数据 <t> 的事件，可以说它就是一个“最正常”的事件。</t></li><li>error：error 事件表示一个错误，它可以携带具体的错误内容，一旦 Observable 发出了 error event，则这个 Observable 就等于终止了，以后它再也不会发出 event 事件了。</li><li>completed：completed 事件表示 Observable 发出的事件正常地结束了，跟 error 一样，一旦 Observable 发出了 completed event，则这个 Observable 就等于终止了，以后它再也不会发出 event 事件了<h2 id="Observable-与-Sequence比较"><a href="#Observable-与-Sequence比较" class="headerlink" title="Observable 与 Sequence比较"></a>Observable 与 Sequence比较</h2>(1)、为更好地理解，我们可以把每一个 Observable 的实例想象成于一个 Swift 中的 Sequence：</li><li>即一个 Observable（ObservableType）相当于一个序列 Sequence（SequenceType）。</li><li>ObservableType.subscribe(_:) 方法其实就相当于 SequenceType.generate()。</li></ul><p>(2)、但它们之间还是有许多区别的：</p><ul><li>Swift 中的 SequenceType 是同步的循环，而 Observable 是异步的。</li><li>Observable 对象会在有任何 Event 时候，自动将 Event 作为一个参数通过 ObservableType.subscribe(_:) 发出，并不需要使用 next 方法。<h2 id="创建-Observable-序列"><a href="#创建-Observable-序列" class="headerlink" title="创建 Observable 序列"></a>创建 Observable 序列</h2><h3 id="just-方法"><a href="#just-方法" class="headerlink" title="just() 方法"></a>just() 方法</h3>（1）该方法通过传入一个默认值来初始化。<br><br>（2）下面样例我们显式地标注出了 observable 的类型为 Observable<int>，即指定了这个 Observable 所发出的事件携带的数据类型必须是 Int 类型的。</int></li></ul><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> observable = <span class="keyword">Observable</span>&lt;Int&gt;.just(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><h3 id="of-方法"><a href="#of-方法" class="headerlink" title="of() 方法"></a>of() 方法</h3><p>（1）该方法可以接受可变数量的参数（必需要是同类型的）<br><br>（2）下面样例中我没有显式地声明出 Observable 的泛型类型，Swift 也会自动推断类型。<br><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> observable = Observable.<span class="keyword">of</span>(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>)</span><br></pre></td></tr></table></figure></p><h3 id="from-方法"><a href="#from-方法" class="headerlink" title="from() 方法"></a>from() 方法</h3><p>（1）该方法需要一个数组参数。<br><br>（2）下面样例中数据里的元素就会被当做这个 Observable 所发出 event 携带的数据内容，最终效果同上面饿 of() 样例是一样的。<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> observable = Observable.<span class="keyword">from</span>([<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>])</span><br></pre></td></tr></table></figure></p><h3 id="empty-方法"><a href="#empty-方法" class="headerlink" title="empty() 方法"></a>empty() 方法</h3><p>该方法创建一个空内容的 Observable 序列。<br><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> observable = Observable&lt;<span class="built_in">Int</span>&gt;.<span class="literal">empty</span>()</span><br></pre></td></tr></table></figure></p><h3 id="never-方法"><a href="#never-方法" class="headerlink" title="never() 方法"></a>never() 方法</h3><p>该方法创建一个永远不会发出 Event（也不会终止）的 Observable 序列。<br><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> observable = <span class="keyword">Observable</span>&lt;Int&gt;.never()</span><br></pre></td></tr></table></figure></p><h3 id="error-方法"><a href="#error-方法" class="headerlink" title="error() 方法"></a>error() 方法</h3><p>该方法创建一个不做任何操作，而是直接发送一个错误的 Observable 序列。<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">MyError</span>: <span class="title">Error</span> &#123;</span></span><br><span class="line">    <span class="keyword">case</span> A</span><br><span class="line">    <span class="keyword">case</span> B</span><br><span class="line">&#125;</span><br><span class="line">         </span><br><span class="line">let observable = Observable&lt;Int&gt;.error(MyError.A)</span><br></pre></td></tr></table></figure></p><h3 id="range-方法"><a href="#range-方法" class="headerlink" title="range() 方法"></a>range() 方法</h3><p>（1）该方法通过指定起始和结束数值，创建一个以这个范围内所有值作为初始值的 Observable 序列。<br><br>（2）下面样例中，两种方法创建的 Observable 序列都是一样的。<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//使用<span class="built_in">range</span>()</span><br><span class="line"><span class="keyword">let</span> observable = Observable.<span class="built_in">range</span>(<span class="keyword">star</span><span class="variable">t:</span> <span class="number">1</span>, coun<span class="variable">t:</span> <span class="number">5</span>)</span><br><span class="line"> </span><br><span class="line">//使用of()</span><br><span class="line"><span class="keyword">let</span> observable = Observable.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> ,<span class="number">4</span> ,<span class="number">5</span>)</span><br></pre></td></tr></table></figure></p><h3 id="repeatElement-方法"><a href="#repeatElement-方法" class="headerlink" title="repeatElement() 方法"></a>repeatElement() 方法</h3><p>该方法创建一个可以无限发出给定元素的 Event 的 Observable 序列（永不终止）。<br><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> observable = <span class="keyword">Observable</span>.repeatElement(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></p><h3 id="generate-方法"><a href="#generate-方法" class="headerlink" title="generate() 方法"></a>generate() 方法</h3><p>（1）该方法创建一个只有当提供的所有的判断条件都为 true 的时候，才会给出动作的 Observable 序列。<br><br>（2）下面样例中，两种方法创建的 Observable 序列都是一样的。<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//使用generate()方法</span><br><span class="line"><span class="keyword">let</span> observable = Observable.generate(</span><br><span class="line">    initialState: <span class="number">0</span>,</span><br><span class="line">    condition: &#123; $0 &lt;= <span class="number">10</span> &#125;,</span><br><span class="line">    iterate: &#123; $0 + <span class="number">2</span> &#125;</span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line">//使用<span class="keyword">of</span>()方法</span><br><span class="line"><span class="keyword">let</span> observable = Observable.<span class="keyword">of</span>(<span class="number">0</span> , <span class="number">2</span> ,<span class="number">4</span> ,<span class="number">6</span> ,<span class="number">8</span> ,<span class="number">10</span>)</span><br></pre></td></tr></table></figure></p><h3 id="create-方法"><a href="#create-方法" class="headerlink" title="create() 方法"></a>create() 方法</h3><p>（1）该方法接受一个 block 形式的参数，任务是对每一个过来的订阅进行处理。<br><br>（2）下面是一个简单的样例。为方便演示，这里增加了订阅相关代码（关于订阅我之后会详细介绍的）。<br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个block有一个回调参数observer就是订阅这个Observable对象的订阅者</span></span><br><span class="line"><span class="comment">//当一个订阅者订阅这个Observable对象的时候，就会将订阅者作为参数传入这个block来执行一些内容</span></span><br><span class="line"><span class="keyword">let</span> observable = Observable&lt;<span class="keyword">String</span>&gt;.<span class="keyword">create</span>&#123;observer in</span><br><span class="line">    <span class="comment">//对订阅者发出了.next事件，且携带了一个数据"hangge.com"</span></span><br><span class="line">    observer.onNext(<span class="string">"hangge.com"</span>)</span><br><span class="line">    <span class="comment">//对订阅者发出了.completed事件</span></span><br><span class="line">    observer.onCompleted()</span><br><span class="line">    <span class="comment">//因为一个订阅行为会有一个Disposable类型的返回值，所以在结尾一定要returen一个Disposable</span></span><br><span class="line">    <span class="keyword">return</span> Disposables.<span class="keyword">create</span>()</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//订阅测试</span></span><br><span class="line">observable.subscribe &#123;</span><br><span class="line">    <span class="keyword">print</span>($<span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="deferred-方法"><a href="#deferred-方法" class="headerlink" title="deferred() 方法"></a>deferred() 方法</h3><p>该个方法相当于是创建一个 Observable 工厂，通过传入一个 block 来执行延迟 Observable 序列创建的行为，而这个 block 里就是真正的实例化序列对象的地方。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用于标记是奇数、还是偶数</span></span><br><span class="line"><span class="keyword">var</span> isOdd = <span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//使用deferred()方法延迟Observable序列的初始化，通过传入的block来实现Observable序列的初始化并且返回。</span></span><br><span class="line"><span class="keyword">let</span> factory : Observable&lt;Int&gt; = Observable.deferred &#123;</span><br><span class="line">     </span><br><span class="line">    <span class="comment">//让每次执行这个block时候都会让奇、偶数进行交替</span></span><br><span class="line">    isOdd = !isOdd</span><br><span class="line">     </span><br><span class="line">    <span class="comment">//根据isOdd参数，决定创建并返回的是奇数Observable、还是偶数Observable</span></span><br><span class="line">    <span class="keyword">if</span> isOdd &#123;</span><br><span class="line">        <span class="keyword">return</span> Observable.of(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span> ,<span class="number">7</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Observable.of(<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//第1次订阅测试</span></span><br><span class="line">factory.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    print(<span class="string">"\(isOdd)"</span>, <span class="keyword">event</span>)</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//第2次订阅测试</span></span><br><span class="line">factory.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    print(<span class="string">"\(isOdd)"</span>, <span class="keyword">event</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="interval-方法"><a href="#interval-方法" class="headerlink" title="interval() 方法"></a>interval() 方法</h3><p>（1）这个方法创建的 Observable 序列每隔一段设定的时间，会发出一个索引数的元素。而且它会一直发送下去。<br><br>（2）下面方法让其每 1 秒发送一次，并且是在主线程（MainScheduler）发送。<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let observable = Observable&lt;Int&gt;.interval(<span class="number">1</span>, scheduler: MainScheduler.<span class="keyword">instance</span>)</span><br><span class="line">observable.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">print</span>(<span class="keyword">event</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="timer-方法"><a href="#timer-方法" class="headerlink" title="timer() 方法"></a>timer() 方法</h3><p>（1）这个方法有两种用法，一种是创建的 Observable 序列在经过设定的一段时间后，产生唯一的一个元素。<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//5秒种后发出唯一的一个元素0</span></span><br><span class="line">let observable = Observable&lt;Int&gt;.timer(<span class="number">5</span>, scheduler: MainScheduler.<span class="keyword">instance</span>)</span><br><span class="line">observable.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">print</span>(<span class="keyword">event</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（2）另一种是创建的 Observable 序列在经过设定的一段时间后，每隔一段时间产生一个元素。<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//延时5秒种后，每隔1秒钟发出一个元素</span></span><br><span class="line">let observable = Observable&lt;Int&gt;.timer(<span class="number">5</span>, period: <span class="number">1</span>, scheduler: MainScheduler.<span class="keyword">instance</span>)</span><br><span class="line">observable.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">print</span>(<span class="keyword">event</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="订阅-Observable"><a href="#订阅-Observable" class="headerlink" title="订阅 Observable"></a>订阅 Observable</h1><h3 id="第一种用法："><a href="#第一种用法：" class="headerlink" title="第一种用法："></a>第一种用法：</h3><p>（1）我们使用 subscribe() 订阅了一个 Observable 对象，该方法的 block 的回调参数就是被发出的 event 事件，我们将其直接打印出来。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> observable = Observable.of(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>)</span><br><span class="line">         </span><br><span class="line">observable.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    print(<span class="keyword">event</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输入结果可以看出</p><ul><li>初始化 Observable 序列时设置的默认值都按顺序通过 .next 事件发送出来。</li><li>当 Observable 序列的初始数据都发送完毕，它还会自动发一个 .completed 事件出来。<br></li></ul><p>（2）如果想要获取到这个事件里的数据，可以通过 event.element 得到。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> observable = Observable.of(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>)</span><br><span class="line">         </span><br><span class="line">observable.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    print(<span class="keyword">event</span>.element)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="第二种用法："><a href="#第二种用法：" class="headerlink" title="第二种用法："></a>第二种用法：</h3><p>（1）RxSwift 还提供了另一个 subscribe 方法，它可以把 event 进行分类：</p><ul><li>通过不同的 block 回调处理不同类型的 event。（其中 onDisposed 表示订阅行为被 dispose 后的回调，这个我后面会说）</li><li>同时会把 event 携带的数据直接解包出来作为参数，方便我们使用。<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">let observable = Observable.of(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>)</span><br><span class="line">         </span><br><span class="line">observable.subscribe(onNext: &#123; element <span class="keyword">in</span></span><br><span class="line">    <span class="builtin-name">print</span>(element)</span><br><span class="line">&#125;, onError: &#123; <span class="builtin-name">error</span> <span class="keyword">in</span></span><br><span class="line">    <span class="builtin-name">print</span>(error)</span><br><span class="line">&#125;, onCompleted: &#123;</span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">"completed"</span>)</span><br><span class="line">&#125;, onDisposed: &#123;</span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">"disposed"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><p>2）subscribe() 方法的 onNext、onError、onCompleted 和 onDisposed 这四个回调 block 参数都是有默认值的，即它们都是可选的。所以我们也可以只处理 onNext 而不管其他的情况。<br><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> observable = <span class="keyword">Observable</span>.of(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>)</span><br><span class="line">         </span><br><span class="line">observable.subscribe(onNext: &#123; element <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">print</span>(element)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h1 id="监听事件的生命周期"><a href="#监听事件的生命周期" class="headerlink" title="监听事件的生命周期"></a>监听事件的生命周期</h1><h3 id="1、-doOn-介绍"><a href="#1、-doOn-介绍" class="headerlink" title="1、 doOn 介绍"></a>1、 doOn 介绍</h3><p>（1）我们可以使用 doOn 方法来监听事件的生命周期，它会在每一次事件发送前被调用。<br><br>（2）同时它和 subscribe 一样，可以通过不同的 block 回调处理不同类型的 event。比如：</p><ul><li>do(onNext:) 方法就是在 subscribe(onNext:) 前调用</li><li>而 do(onCompleted:) 方法则会在 subscribe(onCompleted:) 前面调用。</li></ul><h3 id="使用样例"><a href="#使用样例" class="headerlink" title="使用样例"></a>使用样例</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">let observable = Observable.of(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>)</span><br><span class="line"> </span><br><span class="line">observable</span><br><span class="line">    .<span class="keyword">do</span>(onNext: &#123; element <span class="keyword">in</span></span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"Intercepted Next："</span>, element)</span><br><span class="line">    &#125;, onError: &#123; <span class="builtin-name">error</span> <span class="keyword">in</span></span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"Intercepted Error："</span>, error)</span><br><span class="line">    &#125;, onCompleted: &#123;</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"Intercepted Completed"</span>)</span><br><span class="line">    &#125;, onDispose: &#123;</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"Intercepted Disposed"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    .subscribe(onNext: &#123; element <span class="keyword">in</span></span><br><span class="line">        <span class="builtin-name">print</span>(element)</span><br><span class="line">    &#125;, onError: &#123; <span class="builtin-name">error</span> <span class="keyword">in</span></span><br><span class="line">        <span class="builtin-name">print</span>(error)</span><br><span class="line">    &#125;, onCompleted: &#123;</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"completed"</span>)</span><br><span class="line">    &#125;, onDisposed: &#123;</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"disposed"</span>)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h1 id="Observable-的销毁（Dispose）"><a href="#Observable-的销毁（Dispose）" class="headerlink" title="Observable 的销毁（Dispose）"></a>Observable 的销毁（Dispose）</h1><h3 id="1、Observable-从创建到终结流程"><a href="#1、Observable-从创建到终结流程" class="headerlink" title="1、Observable 从创建到终结流程"></a>1、Observable 从创建到终结流程</h3><p>（1）一个 Observable 序列被创建出来后它不会马上就开始被激活从而发出 Event，而是要等到它被某个人订阅了才会激活它。<br><br>（2）而 Observable 序列激活之后要一直等到它发出了 .error 或者 .completed 的 event 后，它才被终结。</p><h3 id="2、dispose-方法"><a href="#2、dispose-方法" class="headerlink" title="2、dispose() 方法"></a>2、dispose() 方法</h3><p>（1）使用该方法我们可以手动取消一个订阅行为。<br><br>（2）如果我们觉得这个订阅结束了不再需要了，就可以调用 dispose() 方法把这个订阅给销毁掉，防止内存泄漏。<br><br>（2）当一个订阅行为被 dispose 了，那么之后 observable 如果再发出 event，这个已经 dispose 的订阅就收不到消息了。下面是一个简单的使用样例。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> observable = Observable.of(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>)</span><br><span class="line">         </span><br><span class="line"><span class="comment">//使用subscription常量存储这个订阅方法</span></span><br><span class="line"><span class="keyword">let</span> subscription = observable.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    print(<span class="keyword">event</span>)</span><br><span class="line">&#125;</span><br><span class="line">         </span><br><span class="line"><span class="comment">//调用这个订阅的dispose()方法</span></span><br><span class="line">subscription.dispose()</span><br></pre></td></tr></table></figure></p><h3 id="3、DisposeBag"><a href="#3、DisposeBag" class="headerlink" title="3、DisposeBag"></a>3、DisposeBag</h3><p>除了 dispose() 方法之外，我们更经常用到的是一个叫 DisposeBag 的对象来管理多个订阅行为的销毁：<br>我们可以把一个 DisposeBag 对象看成一个垃圾袋，把用过的订阅行为都放进去。<br>而这个 DisposeBag 就会在自己快要 dealloc 的时候，对它里面的所有订阅行为都调用 dispose() 方法。<br>下面是一个简单的使用样例。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> disposeBag = DisposeBag()</span><br><span class="line">         </span><br><span class="line"><span class="comment">//第1个Observable，及其订阅</span></span><br><span class="line"><span class="keyword">let</span> observable1 = Observable.of(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>)</span><br><span class="line">observable1.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    print(<span class="keyword">event</span>)</span><br><span class="line">&#125;.disposed(<span class="keyword">by</span>: disposeBag)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//第2个Observable，及其订阅</span></span><br><span class="line"><span class="keyword">let</span> observable2 = Observable.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">observable2.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    print(<span class="keyword">event</span>)</span><br><span class="line">&#125;.disposed(<span class="keyword">by</span>: disposeBag)</span><br></pre></td></tr></table></figure></p><h1 id="观察者（Observer）介绍"><a href="#观察者（Observer）介绍" class="headerlink" title="观察者（Observer）介绍"></a>观察者（Observer）介绍</h1><p>观察者（Observer）的作用就是监听事件，然后对这个事件做出响应。或者说任何响应事件的行为都是观察者。比如：</p><ul><li>当我们点击按钮，弹出一个提示框。那么这个“弹出一个提示框”就是观察者 Observer<void></void></li><li>当我们请求一个远程的 json 数据后，将其打印出来。那么这个“打印 json 数据”就是观察者 Observer<json></json></li></ul><h1 id="直接在-subscribe、bind-方法中创建观察者"><a href="#直接在-subscribe、bind-方法中创建观察者" class="headerlink" title="直接在 subscribe、bind 方法中创建观察者"></a>直接在 subscribe、bind 方法中创建观察者</h1><h3 id="1-在-subscribe-方法中创建"><a href="#1-在-subscribe-方法中创建" class="headerlink" title="1. 在 subscribe 方法中创建"></a>1. 在 subscribe 方法中创建</h3><p>（1）创建观察者最直接的方法就是在 Observable 的 subscribe 方法后面描述当事件发生时，需要如何做出响应。<br><br>（2）比如下面的样例，观察者就是由后面的 onNext，onError，onCompleted 这些闭包构建出来的。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">let observable = Observable.of(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>)</span><br><span class="line">          </span><br><span class="line">observable.subscribe(onNext: &#123; element <span class="keyword">in</span></span><br><span class="line">    <span class="builtin-name">print</span>(element)</span><br><span class="line">&#125;, onError: &#123; <span class="builtin-name">error</span> <span class="keyword">in</span></span><br><span class="line">    <span class="builtin-name">print</span>(error)</span><br><span class="line">&#125;, onCompleted: &#123;</span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">"completed"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h3 id="2-在-bind-方法中创建"><a href="#2-在-bind-方法中创建" class="headerlink" title="2. 在 bind 方法中创建"></a>2. 在 bind 方法中创建</h3><p>下面代码我们创建一个定时生成索引数的 Observable 序列，并将索引数不断显示在 label 标签上：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"><span class="keyword">import</span> RxCocoa</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> label: <span class="type">UILabel</span>!</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">let</span> disposeBag = <span class="type">DisposeBag</span>()</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//Observable序列（每隔1秒钟发出一个索引数）</span></span><br><span class="line">        <span class="keyword">let</span> observable = <span class="type">Observable</span>&lt;<span class="type">Int</span>&gt;.interval(<span class="number">1</span>, scheduler: <span class="type">MainScheduler</span>.instance)</span><br><span class="line"> </span><br><span class="line">        observable</span><br><span class="line">            .<span class="built_in">map</span> &#123; <span class="string">"当前索引数：\($0 )"</span>&#125;</span><br><span class="line">            .bind &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>](text) <span class="keyword">in</span></span><br><span class="line">                <span class="comment">//收到发出的索引数后显示到label上</span></span><br><span class="line">                <span class="keyword">self</span>?.label.text = text</span><br><span class="line">            &#125;</span><br><span class="line">            .disposed(by: disposeBag)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="使用-AnyObserver-创建观察者"><a href="#使用-AnyObserver-创建观察者" class="headerlink" title="使用 AnyObserver 创建观察者"></a>使用 AnyObserver 创建观察者</h1><p>AnyObserver 可以用来描叙任意一种观察者。</p><h3 id="1、配合-subscribe-方法使用"><a href="#1、配合-subscribe-方法使用" class="headerlink" title="1、配合 subscribe 方法使用"></a>1、配合 subscribe 方法使用</h3><p>比如上面第一个样例我们可以改成如下代码：<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//观察者</span></span><br><span class="line">let observer: AnyObserver&lt;String&gt; = AnyObserver &#123; (<span class="keyword">event</span>) <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">switch</span> <span class="keyword">event</span> &#123;</span><br><span class="line">    <span class="keyword">case</span> .next(let data):</span><br><span class="line">        <span class="keyword">print</span>(data)</span><br><span class="line">    <span class="keyword">case</span> .<span class="keyword">error</span>(let <span class="keyword">error</span>):</span><br><span class="line">        <span class="keyword">print</span>(<span class="keyword">error</span>)</span><br><span class="line">    <span class="keyword">case</span> .completed:</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">"completed"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">let observable = Observable.of(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>)</span><br><span class="line">observable.subscribe(observer)</span><br></pre></td></tr></table></figure></p><h3 id="2、配合-bindTo-方法使用"><a href="#2、配合-bindTo-方法使用" class="headerlink" title="2、配合 bindTo 方法使用"></a>2、配合 bindTo 方法使用</h3><p>也可配合 Observable 的数据绑定方法（bindTo）使用。比如上面的第二个样例我可以改成如下代码：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"><span class="keyword">import</span> RxCocoa</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> label: <span class="type">UILabel</span>!</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">let</span> disposeBag = <span class="type">DisposeBag</span>()</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//观察者</span></span><br><span class="line">        <span class="keyword">let</span> observer: <span class="type">AnyObserver</span>&lt;<span class="type">String</span>&gt; = <span class="type">AnyObserver</span> &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] (event) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">switch</span> event &#123;</span><br><span class="line">            <span class="keyword">case</span> .next(<span class="keyword">let</span> text):</span><br><span class="line">                <span class="comment">//收到发出的索引数后显示到label上</span></span><br><span class="line">                <span class="keyword">self</span>?.label.text = text</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//Observable序列（每隔1秒钟发出一个索引数）</span></span><br><span class="line">        <span class="keyword">let</span> observable = <span class="type">Observable</span>&lt;<span class="type">Int</span>&gt;.interval(<span class="number">1</span>, scheduler: <span class="type">MainScheduler</span>.instance)</span><br><span class="line">        observable</span><br><span class="line">            .<span class="built_in">map</span> &#123; <span class="string">"当前索引数：\($0 )"</span>&#125;</span><br><span class="line">            .bind(to: observer)</span><br><span class="line">            .disposed(by: disposeBag)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="使用-Binder-创建观察者"><a href="#使用-Binder-创建观察者" class="headerlink" title="使用 Binder 创建观察者"></a>使用 Binder 创建观察者</h1><h3 id="1、基本介绍"><a href="#1、基本介绍" class="headerlink" title="1、基本介绍"></a>1、基本介绍</h3><p>（1）相较于 AnyObserver 的大而全，Binder 更专注于特定的场景。Binder 主要有以下两个特征：</p><ul><li>不会处理错误事件</li><li>确保绑定都是在给定 Scheduler 上执行（默认 MainScheduler）</li></ul><p>（2）一旦产生错误事件，在调试环境下将执行 fatalError，在发布环境下将打印错误信息。</p><h3 id="使用样例-1"><a href="#使用样例-1" class="headerlink" title="使用样例"></a>使用样例</h3><p>（1）在上面序列数显示样例中，label 标签的文字显示就是一个典型的 UI 观察者。它在响应事件时，只会处理 next 事件，而且更新 UI 的操作需要在主线程上执行。那么这种情况下更好的方案就是使用 Binder。<br><br>（2）上面的样例我们改用 Binder 会简单许多：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"><span class="keyword">import</span> RxCocoa</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> label: <span class="type">UILabel</span>!</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">let</span> disposeBag = <span class="type">DisposeBag</span>()</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">                 </span><br><span class="line">        <span class="comment">//观察者</span></span><br><span class="line">        <span class="keyword">let</span> observer: <span class="type">Binder</span>&lt;<span class="type">String</span>&gt; = <span class="type">Binder</span>(label) &#123; (view, text) <span class="keyword">in</span></span><br><span class="line">            <span class="comment">//收到发出的索引数后显示到label上</span></span><br><span class="line">            view.text = text</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//Observable序列（每隔1秒钟发出一个索引数）</span></span><br><span class="line">        <span class="keyword">let</span> observable = <span class="type">Observable</span>&lt;<span class="type">Int</span>&gt;.interval(<span class="number">1</span>, scheduler: <span class="type">MainScheduler</span>.instance)</span><br><span class="line">        observable</span><br><span class="line">            .<span class="built_in">map</span> &#123; <span class="string">"当前索引数：\($0 )"</span>&#125;</span><br><span class="line">            .bind(to: observer)</span><br><span class="line">            .disposed(by: disposeBag)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="附：Binder-在-RxCocoa-中的应用"><a href="#附：Binder-在-RxCocoa-中的应用" class="headerlink" title="附：Binder 在 RxCocoa 中的应用"></a>附：Binder 在 RxCocoa 中的应用</h3><p>（1）其实 RxCocoa 在对许多 UI 控件进行扩展时，就利用 Binder 将控件属性变成观查者，比如 UIControl+Rx.swift 中的 isEnabled 属性便是一个 observer ：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Reactive</span> <span class="title">where</span> <span class="title">Base</span>: <span class="title">UIControl</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="comment">/// Bindable sink for `enabled` property.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> isEnabled: <span class="type">Binder</span>&lt;<span class="type">Bool</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Binder</span>(<span class="keyword">self</span>.base) &#123; control, value <span class="keyword">in</span></span><br><span class="line">            control.isEnabled = value</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（2）因此我们可以将序列直接绑定到它上面。比如下面样例，button 会在可用、不可用这两种状态间交替变换（每隔一秒）。<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Observable序列（每隔1秒钟发出一个索引数）</span></span><br><span class="line"><span class="keyword">let</span> observable = Observable&lt;Int&gt;.interval(<span class="number">1</span>, scheduler: MainScheduler.instance)</span><br><span class="line">observable</span><br><span class="line">    .<span class="built_in">map</span> &#123; $<span class="number">0</span> % <span class="number">2</span> == <span class="number">0</span> &#125;</span><br><span class="line">    .bind(<span class="keyword">to</span>: button.<span class="literal">rx</span>.isEnabled)</span><br><span class="line">    .disposed(<span class="keyword">by</span>: disposeBag)</span><br></pre></td></tr></table></figure></p><h1 id="自定义可绑定属性"><a href="#自定义可绑定属性" class="headerlink" title="自定义可绑定属性"></a>自定义可绑定属性</h1><p>有时我们想让 UI 控件创建出来后默认就有一些观察者，而不必每次都为它们单独去创建观察者。比如我们想要让所有的 UIlabel 都有个 fontSize 可绑定属性，它会根据事件值自动改变标签的字体大小。</p><h3 id="方式一：通过对-UI-类进行扩展"><a href="#方式一：通过对-UI-类进行扩展" class="headerlink" title="方式一：通过对 UI 类进行扩展"></a>方式一：通过对 UI 类进行扩展</h3><p>这里我们通过对 UILabel 进行扩展，增加了一个 fontSize 可绑定属性。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"><span class="keyword">import</span> RxCocoa</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> label: <span class="type">UILabel</span>!</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">let</span> disposeBag = <span class="type">DisposeBag</span>()</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//Observable序列（每隔0.5秒钟发出一个索引数）</span></span><br><span class="line">        <span class="keyword">let</span> observable = <span class="type">Observable</span>&lt;<span class="type">Int</span>&gt;.interval(<span class="number">0.5</span>, scheduler: <span class="type">MainScheduler</span>.instance)</span><br><span class="line">        observable</span><br><span class="line">            .<span class="built_in">map</span> &#123; <span class="type">CGFloat</span>($<span class="number">0</span>) &#125;</span><br><span class="line">            .bind(to: label.fontSize) <span class="comment">//根据索引数不断变放大字体</span></span><br><span class="line">            .disposed(by: disposeBag)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UILabel</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> fontSize: <span class="type">Binder</span>&lt;<span class="type">CGFloat</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Binder</span>(<span class="keyword">self</span>) &#123; label, fontSize <span class="keyword">in</span></span><br><span class="line">            label.font = <span class="type">UIFont</span>.systemFont(ofSize: fontSize)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="方式二：通过对-Reactive-类进行扩展"><a href="#方式二：通过对-Reactive-类进行扩展" class="headerlink" title="方式二：通过对 Reactive 类进行扩展"></a>方式二：通过对 Reactive 类进行扩展</h3><p>既然使用了 RxSwift，那么更规范的写法应该是对 Reactive 进行扩展。这里同样是给 UILabel 增加了一个 fontSize 可绑定属性。<br><br>（注意：这种方式下，我们绑定属性时要写成 label.rx.fontSize）<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"><span class="keyword">import</span> RxCocoa</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> label: <span class="type">UILabel</span>!</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">let</span> disposeBag = <span class="type">DisposeBag</span>()</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//Observable序列（每隔0.5秒钟发出一个索引数）</span></span><br><span class="line">        <span class="keyword">let</span> observable = <span class="type">Observable</span>&lt;<span class="type">Int</span>&gt;.interval(<span class="number">0.5</span>, scheduler: <span class="type">MainScheduler</span>.instance)</span><br><span class="line">        observable</span><br><span class="line">            .<span class="built_in">map</span> &#123; <span class="type">CGFloat</span>($<span class="number">0</span>) &#125;</span><br><span class="line">            .bind(to: label.rx.fontSize) <span class="comment">//根据索引数不断变放大字体</span></span><br><span class="line">            .disposed(by: disposeBag)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Reactive</span> <span class="title">where</span> <span class="title">Base</span>: <span class="title">UILabel</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> fontSize: <span class="type">Binder</span>&lt;<span class="type">CGFloat</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Binder</span>(<span class="keyword">self</span>.base) &#123; label, fontSize <span class="keyword">in</span></span><br><span class="line">            label.font = <span class="type">UIFont</span>.systemFont(ofSize: fontSize)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="RxSwift-自带的可绑定属性（UI-观察者）"><a href="#RxSwift-自带的可绑定属性（UI-观察者）" class="headerlink" title="RxSwift 自带的可绑定属性（UI 观察者）"></a>RxSwift 自带的可绑定属性（UI 观察者）</h1><p>（1）其实 RxSwift 已经为我们提供许多常用的可绑定属性。比如 UILabel 就有 text 和 attributedText 这两个可绑定属性。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Reactive</span> <span class="title">where</span> <span class="title">Base</span>: <span class="title">UILabel</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="comment">/// Bindable sink for `text` property.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> text: <span class="type">Binder</span>&lt;<span class="type">String</span>?&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Binder</span>(<span class="keyword">self</span>.base) &#123; label, text <span class="keyword">in</span></span><br><span class="line">            label.text = text</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/// Bindable sink for `attributedText` property.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> attributedText: <span class="type">Binder</span>&lt;<span class="type">NSAttributedString</span>?&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Binder</span>(<span class="keyword">self</span>.base) &#123; label, text <span class="keyword">in</span></span><br><span class="line">            label.attributedText = text</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（2）那么上文那个定时显示索引数的样例，我们其实不需要自定义 UI 观察者，直接使用 RxSwift 提供的绑定属性即可。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"><span class="keyword">import</span> RxCocoa</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> label: <span class="type">UILabel</span>!</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">let</span> disposeBag = <span class="type">DisposeBag</span>()</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//Observable序列（每隔1秒钟发出一个索引数）</span></span><br><span class="line">        <span class="keyword">let</span> observable = <span class="type">Observable</span>&lt;<span class="type">Int</span>&gt;.interval(<span class="number">1</span>, scheduler: <span class="type">MainScheduler</span>.instance)</span><br><span class="line">        observable</span><br><span class="line">            .<span class="built_in">map</span> &#123; <span class="string">"当前索引数：\($0 )"</span>&#125;</span><br><span class="line">            .bind(to: label.rx.text) <span class="comment">//收到发出的索引数后显示到label上</span></span><br><span class="line">            .disposed(by: disposeBag)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="Subjects-介绍"><a href="#Subjects-介绍" class="headerlink" title="Subjects 介绍"></a>Subjects 介绍</h1><h3 id="Subjects-基本介绍"><a href="#Subjects-基本介绍" class="headerlink" title="Subjects 基本介绍"></a>Subjects 基本介绍</h3><p>（1）Subjects 既是订阅者，也是 Observable：</p><ul><li>说它是订阅者，是因为它能够动态地接收新的值。</li><li>说它又是一个 Observable，是因为当 Subjects 有了新的值之后，就会通过 Event 将新值发出给他的所有订阅者。</li></ul><p>（2）一共有四种 Subjects，分别为：PublishSubject、BehaviorSubject、ReplaySubject、Variable。他们之间既有各自的特点，也有相同之处：</p><ul><li>首先他们都是 Observable，他们的订阅者都能收到他们发出的新的 Event。</li><li>直到 Subject 发出 .complete 或者 .error 的 Event 后，该 Subject 便终结了，同时它也就不会再发出 .next 事件。</li><li>对于那些在 Subject 终结后再订阅他的订阅者，也能收到 subject 发出的一条 .complete 或 .error 的 event，告诉这个新的订阅者它已经终结了。</li><li>他们之间最大的区别只是在于：当一个新的订阅者刚订阅它的时候，能不能收到 Subject 以前发出过的旧 Event，如果能的话又能收到多少个。</li></ul><p>（3）Subject 常用的几个方法：</p><ul><li>onNext(:)：是 on(.next(:)) 的简便写法。该方法相当于 subject 接收到一个 .next 事件。</li><li>onError(:)：是 on(.error(:)) 的简便写法。该方法相当于 subject 接收到一个 .error 事件。</li><li>onCompleted()：是 on(.completed) 的简便写法。该方法相当于 subject 接收到一个 .completed 事件。</li></ul><h3 id="PublishSubject"><a href="#PublishSubject" class="headerlink" title="PublishSubject"></a>PublishSubject</h3><p>（1）基本介绍</p><ul><li>PublishSubject 是最普通的 Subject，它不需要初始值就能创建。</li><li>PublishSubject 的订阅者从他们开始订阅的时间点起，可以收到订阅后 Subject 发出的新 Event，而不会收到他们在订阅前已发出的 Event。<br>（2）时序图</li><li>最上面一条是 BehaviorSubject。<br>-下面两条分别表示两个新的订阅，它们订阅的时间点不同，可以发现 BehaviorSubject 的订阅者一开始就能收到 BehaviorSubjects 之前发出的一个 Event。<br><img src="https://upload-images.jianshu.io/upload_images/3334769-516513ae6b34d5b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="时序图"><br><br>（3）使用样例<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> disposeBag = DisposeBag()</span><br><span class="line"> </span><br><span class="line"><span class="comment">//创建一个BehaviorSubject</span></span><br><span class="line"><span class="keyword">let</span> subject = BehaviorSubject(<span class="keyword">value</span>: <span class="string">"111"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//第1次订阅subject</span></span><br><span class="line">subject.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    print(<span class="string">"第1次订阅："</span>, <span class="keyword">event</span>)</span><br><span class="line">&#125;.disposed(<span class="keyword">by</span>: disposeBag)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//发送next事件</span></span><br><span class="line">subject.onNext(<span class="string">"222"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//发送error事件</span></span><br><span class="line">subject.onError(NSError(domain: <span class="string">"local"</span>, code: <span class="number">0</span>, userInfo: nil))</span><br><span class="line"> </span><br><span class="line"><span class="comment">//第2次订阅subject</span></span><br><span class="line">subject.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    print(<span class="string">"第2次订阅："</span>, <span class="keyword">event</span>)</span><br><span class="line">&#125;.disposed(<span class="keyword">by</span>: disposeBag)</span><br></pre></td></tr></table></figure></li></ul><h3 id="ReplaySubject"><a href="#ReplaySubject" class="headerlink" title="ReplaySubject"></a>ReplaySubject</h3><p>（1）基本介绍</p><ul><li>ReplaySubject 在创建时候需要设置一个 bufferSize，表示它对于它发送过的 event 的缓存个数。</li><li>比如一个 ReplaySubject 的 bufferSize 设置为 2，它发出了 3 个 .next 的 event，那么它会将后两个（最近的两个）event 给缓存起来。此时如果有一个 subscriber 订阅了这个 ReplaySubject，那么这个 subscriber 就会立即收到前面缓存的两个 .next 的 event。</li><li>如果一个 subscriber 订阅已经结束的 ReplaySubject，除了会收到缓存的 .next 的 event 外，还会收到那个终结的 .error 或者 .complete 的 event。</li></ul><p>（2）时序图</p><ul><li>最上面一条是 ReplaySubject（bufferSize 设为为 2）。</li><li>下面两条分别表示两个新的订阅，它们订阅的时间点不同。可以发现 ReplaySubject 的订阅者一开始就能收到 ReplaySubject 之前发出的两个 Event（如果有的话）。<br><img src="https://upload-images.jianshu.io/upload_images/3334769-4dec2ddcf714e9ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="时序图"><br><br>（3）使用样例<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> disposeBag = DisposeBag()</span><br><span class="line"> </span><br><span class="line"><span class="comment">//创建一个bufferSize为2的ReplaySubject</span></span><br><span class="line"><span class="keyword">let</span> subject = ReplaySubject&lt;String&gt;.create(bufferSize: <span class="number">2</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//连续发送3个next事件</span></span><br><span class="line">subject.onNext(<span class="string">"111"</span>)</span><br><span class="line">subject.onNext(<span class="string">"222"</span>)</span><br><span class="line">subject.onNext(<span class="string">"333"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//第1次订阅subject</span></span><br><span class="line">subject.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    print(<span class="string">"第1次订阅："</span>, <span class="keyword">event</span>)</span><br><span class="line">&#125;.disposed(<span class="keyword">by</span>: disposeBag)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//再发送1个next事件</span></span><br><span class="line">subject.onNext(<span class="string">"444"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//第2次订阅subject</span></span><br><span class="line">subject.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    print(<span class="string">"第2次订阅："</span>, <span class="keyword">event</span>)</span><br><span class="line">&#125;.disposed(<span class="keyword">by</span>: disposeBag)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//让subject结束</span></span><br><span class="line">subject.onCompleted()</span><br><span class="line"> </span><br><span class="line"><span class="comment">//第3次订阅subject</span></span><br><span class="line">subject.subscribe &#123; <span class="keyword">event</span> <span class="keyword">in</span></span><br><span class="line">    print(<span class="string">"第3次订阅："</span>, <span class="keyword">event</span>)</span><br><span class="line">&#125;.disposed(<span class="keyword">by</span>: disposeBag)</span><br></pre></td></tr></table></figure></li></ul><h3 id="Variable"><a href="#Variable" class="headerlink" title="Variable"></a>Variable</h3><p>（注意：由于 Variable 在之后版本中将被废弃，建议使用 Varible 的地方都改用下面介绍的 BehaviorRelay 作为替代。）<br><br>（1）基本介绍</p><ul><li>Variable 其实就是对 BehaviorSubject 的封装，所以它也必须要通过一个默认的初始值进行创建。</li><li>Variable 具有 BehaviorSubject 的功能，能够向它的订阅者发出上一个 event 以及之后新创建的 event。</li><li>不同的是，Variable 还把会把当前发出的值保存为自己的状态。同时它会在销毁时自动发送 .complete 的 event，不需要也不能手动给 Variables 发送 completed 或者 error 事件来结束它。</li><li>简单地说就是 Variable 有一个 value 属性，我们改变这个 value 属性的值就相当于调用一般 Subjects 的 onNext() 方法，而这个最新的 onNext() 的值就被保存在 value 属性里了，直到我们再次修改它。<blockquote><p>注意：<br><br>Variables 本身没有 subscribe() 方法，但是所有 Subjects 都有一个 asObservable() 方法。我们可以使用这个方法返回这个 Variable 的 Observable 类型，拿到这个 Observable 类型我们就能订阅它了。</p></blockquote></li></ul><p>（2）使用样例<br><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"><span class="keyword">import</span> RxCocoa</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> ViewController: UIViewController &#123;</span><br><span class="line">     </span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">let</span> disposeBag = DisposeBag()</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//创建一个初始值为111的Variable</span></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">variable</span> = Variable(<span class="string">"111"</span>)</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//修改value值</span></span><br><span class="line">        <span class="keyword">variable</span>.<span class="keyword">value</span> = <span class="string">"222"</span></span><br><span class="line">         </span><br><span class="line">        <span class="comment">//第1次订阅</span></span><br><span class="line">        <span class="keyword">variable</span>.asObservable().subscribe &#123;</span><br><span class="line">            print(<span class="string">"第1次订阅："</span>, <span class="number">$0</span>)</span><br><span class="line">        &#125;.disposed(<span class="meta">by</span>: disposeBag)</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//修改value值</span></span><br><span class="line">        <span class="keyword">variable</span>.<span class="keyword">value</span> = <span class="string">"333"</span></span><br><span class="line">         </span><br><span class="line">        <span class="comment">//第2次订阅</span></span><br><span class="line">        <span class="keyword">variable</span>.asObservable().subscribe &#123;</span><br><span class="line">            print(<span class="string">"第2次订阅："</span>, <span class="number">$0</span>)</span><br><span class="line">        &#125;.disposed(<span class="meta">by</span>: disposeBag)</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//修改value值</span></span><br><span class="line">        <span class="keyword">variable</span>.<span class="keyword">value</span> = <span class="string">"444"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="BehaviorRelay"><a href="#BehaviorRelay" class="headerlink" title="BehaviorRelay"></a>BehaviorRelay</h3><p>（1）基本介绍</p><ul><li>BehaviorRelay 是作为 Variable 的替代者出现的。它的本质其实也是对 BehaviorSubject 的封装，所以它也必须要通过一个默认的初始值进行创建。</li><li>BehaviorRelay 具有 BehaviorSubject 的功能，能够向它的订阅者发出上一个 event 以及之后新创建的 event。</li><li>与 BehaviorSubject 不同的是，不需要也不能手动给 BehaviorReply 发送 completed 或者 error 事件来结束它（BehaviorRelay 会在销毁时也不会自动发送 .complete 的 event）。</li><li>BehaviorRelay 有一个 value 属性，我们通过这个属性可以获取最新值。而通过它的 accept() 方法可以对值进行修改。</li></ul><p>（2）上面的 Variable 样例我们可以改用成 BehaviorRelay，代码如下：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"><span class="keyword">import</span> RxCocoa</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">let</span> disposeBag = <span class="type">DisposeBag</span>()</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//创建一个初始值为111的BehaviorRelay</span></span><br><span class="line">        <span class="keyword">let</span> subject = <span class="type">BehaviorRelay</span>&lt;<span class="type">String</span>&gt;(value: <span class="string">"111"</span>)</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//修改value值</span></span><br><span class="line">        subject.accept(<span class="string">"222"</span>)</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//第1次订阅</span></span><br><span class="line">        subject.asObservable().subscribe &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"第1次订阅："</span>, $<span class="number">0</span>)</span><br><span class="line">            &#125;.disposed(by: disposeBag)</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//修改value值</span></span><br><span class="line">        subject.accept(<span class="string">"333"</span>)</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//第2次订阅</span></span><br><span class="line">        subject.asObservable().subscribe &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"第2次订阅："</span>, $<span class="number">0</span>)</span><br><span class="line">            &#125;.disposed(by: disposeBag)</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//修改value值</span></span><br><span class="line">        subject.accept(<span class="string">"444"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（3）如果想将新值合并到原值上，可以通过 accept() 方法与 value 属性配合来实现。（这个常用在表格上拉加载功能上，BehaviorRelay 用来保存所有加载到的数据）<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"><span class="keyword">import</span> RxCocoa</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">let</span> disposeBag = <span class="type">DisposeBag</span>()</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//创建一个初始值为包含一个元素的数组的BehaviorRelay</span></span><br><span class="line">        <span class="keyword">let</span> subject = <span class="type">BehaviorRelay</span>&lt;[<span class="type">String</span>]&gt;(value: [<span class="string">"1"</span>])</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//修改value值</span></span><br><span class="line">        subject.accept(subject.value + [<span class="string">"2"</span>, <span class="string">"3"</span>])</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//第1次订阅</span></span><br><span class="line">        subject.asObservable().subscribe &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"第1次订阅："</span>, $<span class="number">0</span>)</span><br><span class="line">            &#125;.disposed(by: disposeBag)</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//修改value值</span></span><br><span class="line">        subject.accept(subject.value + [<span class="string">"4"</span>, <span class="string">"5"</span>])</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//第2次订阅</span></span><br><span class="line">        subject.asObservable().subscribe &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"第2次订阅："</span>, $<span class="number">0</span>)</span><br><span class="line">            &#125;.disposed(by: disposeBag)</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//修改value值</span></span><br><span class="line">        subject.accept(subject.value + [<span class="string">"6"</span>, <span class="string">"7"</span>])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Observable-介绍&quot;&gt;&lt;a href=&quot;#Observable-介绍&quot; class=&quot;headerlink&quot; title=&quot;Observable 介绍&quot;&gt;&lt;/a&gt;Observable 介绍&lt;/h1&gt;&lt;h2 id=&quot;Observable&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CALayer的属性和使用(未完结)</title>
    <link href="https://wudan-ios.github.io/2018/11/23/CALayer%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E4%BD%BF%E7%94%A8(%E6%9C%AA%E5%AE%8C%E7%BB%93)/"/>
    <id>https://wudan-ios.github.io/2018/11/23/CALayer的属性和使用(未完结)/</id>
    <published>2018-11-23T08:19:32.074Z</published>
    <updated>2018-11-23T08:24:37.392Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、CALayer的常用属性"><a href="#一、CALayer的常用属性" class="headerlink" title="一、CALayer的常用属性"></a>一、CALayer的常用属性</h2><blockquote><ul><li><p>1、@propertyCGPoint position;<br>图层中心点的位置，类似与UIView的center；用来设置CALayer在父层中的位置；以父层的左上角为原点（0，0）</p></li><li><p>2、 @property CGPoint anchorPoint;<br>称『定位点』、『锚点』，该描述是相对于x、y位置比例而言的默认在图像中心点（0.5、0.5）的位置；决定着CALayer身上的哪个点会再position属性所指的位置，以自己的左上角为原点（0，0）；它的x、y取值范围都是0~1</p></li><li><p>3、 @property(nullable) CGColorRef backgroundColor<br>图层背景颜色</p></li><li><p>4、 @property(nullable) CGColorRef borderColor<br>图层边框颜色</p></li><li><p>5、 @property CGFloat borderWidth<br>图层边框宽度</p></li><li><p>6、 @property CGRect bounds<br>图层大小</p></li><li><p>7、 @property(nullable, strong) id contents<br>图层显示内容，例如可以将图片作为图层内容显示</p></li><li><p>8、 @property CGRect contentsRect<br>图层显示内容的大小和位置</p></li><li><p>9、 @property CGFloat cornerRadius<br>圆角半径</p></li><li><p>10、 @property(getter=isDoubleSided) BOOL doubleSided<br>图层背景是否显示，默认是YES</p></li><li><p>11、 @property CGRect frame<br>图层大小和位置，不支持隐式动画，所以CALyaer中很少使用frame，通常使用bound和position代替</p></li><li><p>12、 @property(getter=isHidden) BOOL hidden<br>是否隐藏</p></li><li><p>13、 @property(nullable, strong) CALayer *mask<br>图层蒙版</p></li><li><p>14、 @property BOOL masksToBounds<br>子图层是否剪切图层边界，默认是NO</p></li><li><p>15、 @property float opacit;<br>图层透明度，类似与UIView的alpha</p></li><li><p>16、 @property(nullable) CGColorRef shadowColor<br>阴影颜色</p></li><li><p>17、 @property CGSize shadowOffset<br>阴影偏移量</p></li><li><p>18、 @property float shadowOpacity<br>阴影透明度，注意默认为0，如果设置阴影必须设置此属性</p></li><li><p>19、 @property(nullable) CGPathRef shadowPath<br>阴影形状</p></li><li><p>20、 @property CGFloat shadowRadius<br>阴影模糊半径</p></li><li><p>21、 @property(nullable, copy) NSArray</p></li></ul></blockquote><h2 id="二、CALayer不常用属性"><a href="#二、CALayer不常用属性" class="headerlink" title="二、CALayer不常用属性"></a>二、CALayer不常用属性</h2><blockquote><ul><li><p>1、 @property CGFloat zPosition<br>图层中心点在z轴中的位置</p></li><li><p>2、 @property CGFloat anchorPointZ<br>图层在z轴中的锚点；</p></li><li><p>3、 - (CGAffineTransform)affineTransform</p></li><li><p>4、- (void)setAffineTransform:(CGAffineTransform)m<br>以上属性为图层形变；该属性值指定一个CGAffineTransform对象，该对象代表对CALayer执行X、Y两个维度（也就是平面）上的旋转、缩放、位移、斜切、镜像等变换矩阵</p></li><li><p>5、 @property(nullable, readonly) CALayer *superlayer<br>图层的父图层</p></li></ul></blockquote><h2 id="三、CALayer图层操作"><a href="#三、CALayer图层操作" class="headerlink" title="三、CALayer图层操作"></a>三、CALayer图层操作</h2><blockquote><ul><li><p>1、 - (void)addSublayer:(CALayer *)layer<br>添加子图层</p></li><li><p>2、 - (void)removeFromSuperlayer<br>将自己从父图层中移除</p></li><li><p>3、 - (void)insertSublayer:(CALayer *)layer atIndex:(unsigned)idx<br>在自己子图层数组中的第idx位置添加图层</p></li><li><p>4、 - (void)insertSublayer:(CALayer )layer below:(nullable CALayer )sibling<br>将图层layer添加在子图层sibling的下面</p></li><li><p>5、 - (void)insertSublayer:(CALayer )layer above:(nullable CALayer )sibling<br>将图层layer添加在子图层sibling的上面</p></li><li><p>6、 - (void)replaceSublayer:(CALayer )layer with:(CALayer )layer2<br>将图层layer替换layer2；</p></li></ul></blockquote><h2 id="四、CALayer动画操作"><a href="#四、CALayer动画操作" class="headerlink" title="四、CALayer动画操作"></a>四、CALayer动画操作</h2><blockquote><ul><li><p>1、 - (void)addAnimation:(CAAnimation )anim forKey:(nullable NSString )key<br>图层添加某一属性的动画</p></li><li><p>2、 - (nullable NSArray&lt; NSString &gt; )animationKeys<br>获取所有动画的属性</p></li><li><p>3、 - (nullable CAAnimation )animationForKey:(NSString )key<br>获取某一属性的动画</p></li><li><p>4、 - (void)removeAnimationForKey:(NSString *)key<br>移除某一属性动画</p></li><li><p>5、 - (void)removeAllAnimations<br>移除所有动画</p></li></ul></blockquote><h2 id="五、CALayer子类其他说明"><a href="#五、CALayer子类其他说明" class="headerlink" title="五、CALayer子类其他说明"></a>五、CALayer子类其他说明</h2><table><thead><tr><th>子类名称</th><th>用途</th></tr></thead><tbody><tr><td>CAEmitterLayer</td><td>发射器层，用来控制粒子效果</td></tr><tr><td>CAGradientLayer</td><td>梯度层，颜色渐变</td></tr><tr><td>CAEAGLayer</td><td>用OpenGL ES绘制的层</td></tr><tr><td>CAReplicationLayer</td><td>用来自动复制sublayer</td></tr><tr><td>CAShapeLayer</td><td>绘制立体的贝塞尔曲线</td></tr><tr><td>CAScrollLayer</td><td>用来管理可滑动的区域</td></tr><tr><td>CATextLayer</td><td>可以绘制AttributeString</td></tr><tr><td>CATiledLayer</td><td>用来管理一副可以被分割的大图</td></tr><tr><td>CATransformLayer</td><td>用来渲染3D layer的层次结构</td></tr></tbody></table><h3 id="1-CAShapeLayer"><a href="#1-CAShapeLayer" class="headerlink" title="1. CAShapeLayer"></a>1. CAShapeLayer</h3><p>CAShapeLayer属于QuartzCore框架，继承自CALayer。CAShapeLayer是在坐标系内绘制贝塞尔曲线的，通过绘制贝塞尔曲线，设置shape(形状)的path(路径)，从而绘制各种各样的图形以及不规则图形。因此，使用CAShapeLayer需要与UIBezierPath一起使用。<br>UIBezierPath类允许你在自定义的 View 中绘制和渲染由直线和曲线组成的路径.。你可以在初始化的时候直接为你的UIBezierPath指定一个几何图形。<br>通俗点就是UIBezierPath用来指定绘制图形路径，而CAShapeLayer就是根据路径来绘图的。</p><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><blockquote><ul><li><p>1、@property(nullable) CGPathRef path;  呈现的形状的路径</p></li><li><p>2、@property(nullable) CGColorRef fillColor;填充路径的颜色  </p></li><li><p>3、@property(copy) CAShapeLayerFillRule fillRule;   当在填充颜色的时候则就需要这种填充规则，值有两种，非零和奇偶数，但默认是非零值。</p></li><li><p>4、@property(nullable) CGColorRef strokeColor;设置描边色，默认无色。</p></li><li><p>5、@property CGFloat strokeStart; 绘制边线轮廓路径的子区域。该值必须在[0,1]范围，0代表路径的开始，1代表路径的结束。 默认为0</p></li><li><p>6、@property CGFloat strokeEnd; 默认为1</p></li><li><p>7、@property CGFloat lineWidth; 线的宽度 默认为1</p></li><li><p>8、@property CGFloat miterLimit;最大斜接长度。斜接长度指的是在两条线交汇处和外交之间的距离。只有lineJoin属性为kCALineJoinMiter时miterLimit才有效。边角的角度越小，斜接长度就会越大。为了避免斜接长度过长，我们可以使用miterLimit属性。如果斜接长度超过miterLimit的值，边角会以lineJoin的“bevel”即kCALineJoinBevel类型来显示。</p></li><li><p>9、@property(copy) CAShapeLayerLineCap lineCap; 线端点类型，值有三个类型，分别为kCALineCapButt 、kCALineCapRound 、kCALineCapSquare，默认值为Butt；</p></li><li><p>10、@property(copy) CAShapeLayerLineJoin lineJoin;lineJoin为线连接类型，其值也有三个类型，分别为kCALineJoinMiter、kCALineJoinRound、kCALineJoinBevel，默认值是Miter。</p></li><li><p>11、@property CGFloat lineDashPhase;为线型模版的起始位置；lineDashPattern为线性模版，这是一个NSNumber的数组，索引从1开始记，奇数位数值表示实线长度，偶数位数值表示空白长度。<br>注：fillColor与strokeColor都是在有UIBezierPath参数配置的情况下才能发生作用</p></li><li><p>12、@property(nullable, copy) NSArray<nsnumber *=""> *lineDashPattern;</nsnumber></p></li></ul></blockquote><h3 id="2-CAReplicationLayer"><a href="#2-CAReplicationLayer" class="headerlink" title="2.CAReplicationLayer"></a>2.CAReplicationLayer</h3><h4 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h4><blockquote><ul><li><p>1、@property NSInteger instanceCount;  复制subLayer个数，默认为1</p></li><li><p>2、@property BOOL preservesDepth; 是否将3D例子系统平面化到一个图层（默认值）或者可以在3D空间中混合其他的图层</p></li><li><p>3、@property CFTimeInterval instanceDelay; 设置复制子层的延迟动画时长</p></li><li><p>4、@property CATransform3D instanceTransform; 设置复制子层的相对位置</p></li><li><p>5、@property(nullable) CGColorRef instanceColor; 子层颜色，会和原生子层背景色冲突，因此二者选其一设置</p></li><li><p>6、@property float instanceRedOffset;<br>设置每个复制图层相对上一个复制图层的红色偏移量</p></li><li>7、@property float instanceRedOffset;<br>设置每个复制图层相对上一个复制图层的绿色偏移量</li><li><p>8、@property float instanceBlueOffset;设置每个复制图层相对上一个复制图层的蓝色偏移量</p></li><li><p>9、@property float instanceAlphaOffset;设置每个复制图层相对上一个复制图层的透明度偏移量</p></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、CALayer的常用属性&quot;&gt;&lt;a href=&quot;#一、CALayer的常用属性&quot; class=&quot;headerlink&quot; title=&quot;一、CALayer的常用属性&quot;&gt;&lt;/a&gt;一、CALayer的常用属性&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;
      
    
    </summary>
    
    
  </entry>
  
</feed>
